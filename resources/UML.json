{
  "_declaration": {
    "_attributes": {
      "version": 1,
      "encoding": "UTF-8"
    },
    "_parent": "_"
  },
  "xmi:XMI": {
    "_attributes": {
      "xmlns:uml": "http://www.omg.org/spec/UML/20131001",
      "xmlns:xmi": "http://www.omg.org/spec/XMI/20131001",
      "xmlns:mofext": "http://www.omg.org/spec/MOF/20131001"
    },
    "_parent": "_",
    "documentation": {
      "_parent": "_",
      "shortDescription": {
        "_parent": "_",
        "_text": "UML.xmi: XMI representation of the metamodel for UML 2.5.1."
      }
    },
    "uml:Package": {
      "_attributes": {
        "xmi:type": "uml:Package",
        "xmi:id": "_0",
        "name": "UML",
        "URI": "http://www.omg.org/spec/UML/20161101"
      },
      "_parent": "_",
      "packageImport": [
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.0",
            "importedPackage": "_0"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.1",
            "importedPackage": "Actions"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.2",
            "importedPackage": "Activities"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.3",
            "importedPackage": "Classification"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.4",
            "importedPackage": "CommonBehavior"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.5",
            "importedPackage": "CommonStructure"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.6",
            "importedPackage": "Deployments"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.7",
            "importedPackage": "InformationFlows"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.8",
            "importedPackage": "Interactions"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.9",
            "importedPackage": "Packages"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.10",
            "importedPackage": "SimpleClassifiers"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.11",
            "importedPackage": "StateMachines"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.12",
            "importedPackage": "StructuredClassifiers"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.13",
            "importedPackage": "UseCases"
          },
          "_parent": "_"
        },
        {
          "_attributes": {
            "xmi:type": "uml:PackageImport",
            "xmi:id": "_packageImport.14",
            "importedPackage": "Values"
          },
          "_parent": "_"
        }
      ],
      "packagedElement": [
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Activities",
            "name": "Activities"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Activities-_packageImport.0",
                "importedPackage": "Actions"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Activities-_packageImport.1",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Activity",
                "name": "Activity"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Activity-_ownedComment.0",
                  "body": "An Activity is the specification of parameterized Behavior as the coordinated sequencing of subordinate units."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Activity"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Activity-maximum_one_parameter_node",
                    "name": "maximum_one_parameter_node"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Activity"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-maximum_one_parameter_node-_ownedComment.0",
                      "body": "A Parameter with direction other than inout must have exactly one ActivityParameterNode in an Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-maximum_one_parameter_node"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Activity-maximum_one_parameter_node-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedParameter->forAll(p | \n   p.direction <> ParameterDirectionKind::inout implies node->select(\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p)->size()= 1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Activity-maximum_two_parameter_nodes",
                    "name": "maximum_two_parameter_nodes"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Activity"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-maximum_two_parameter_nodes-_ownedComment.0",
                      "body": "A Parameter with direction inout must have exactly two ActivityParameterNodes in an Activity, at most one with incoming ActivityEdges and at most one with outgoing ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-maximum_two_parameter_nodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Activity-maximum_two_parameter_nodes-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedParameter->forAll(p | \np.direction = ParameterDirectionKind::inout implies\nlet associatedNodes : Set(ActivityNode) = node->select(\n       oclIsKindOf(ActivityParameterNode) and oclAsType(ActivityParameterNode).parameter = p) in \n  associatedNodes->size()=2 and\n  associatedNodes->select(incoming->notEmpty())->size()<=1 and\n  associatedNodes->select(outgoing->notEmpty())->size()<=1\n)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Activity-_generalization.0",
                  "general": "Behavior"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-edge",
                    "name": "edge",
                    "aggregation": "composite",
                    "type": "ActivityEdge",
                    "association": "A_edge_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-edge-_ownedComment.0",
                      "body": "ActivityEdges expressing flow between the nodes of the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-edge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-edge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-group",
                    "name": "group",
                    "aggregation": "composite",
                    "type": "ActivityGroup",
                    "association": "A_group_inActivity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-group-_ownedComment.0",
                      "body": "Top-level ActivityGroups in the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-group"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-group-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-group-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-isReadOnly",
                    "name": "isReadOnly"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-isReadOnly-_ownedComment.0",
                      "body": "If true, this Activity must not make any changes to objects. The default is false (an Activity may make nonlocal changes). (This is an assertion, not an executable property. It may be used by an execution engine to optimize model execution. If the assertion is violated by the Activity, then the model is ill-formed.) "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-isReadOnly"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Activity-isReadOnly-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-isSingleExecution",
                    "name": "isSingleExecution"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-isSingleExecution-_ownedComment.0",
                      "body": "If true, all invocations of the Activity are handled by the same execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-isSingleExecution"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Activity-isSingleExecution-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-node",
                    "name": "node",
                    "aggregation": "composite",
                    "type": "ActivityNode",
                    "association": "A_node_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-node-_ownedComment.0",
                      "body": "ActivityNodes coordinated by the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-node"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-node-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-node-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-partition",
                    "name": "partition",
                    "type": "ActivityPartition",
                    "association": "A_partition_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Activity-group"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-partition-_ownedComment.0",
                      "body": "Top-level ActivityPartitions in the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-partition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-partition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-partition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-structuredNode",
                    "name": "structuredNode",
                    "aggregation": "composite",
                    "type": "StructuredActivityNode",
                    "association": "A_structuredNode_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Activity-group"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Activity-node"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-structuredNode-_ownedComment.0",
                      "body": "Top-level StructuredActivityNodes in the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-structuredNode"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-structuredNode-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-structuredNode-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Activity-variable",
                    "name": "variable",
                    "aggregation": "composite",
                    "type": "Variable",
                    "association": "A_variable_activityScope"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Activity-variable-_ownedComment.0",
                      "body": "Top-level Variables defined by the Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Activity-variable"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Activity-variable-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Activity-variable-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityEdge",
                "name": "ActivityEdge",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityEdge-_ownedComment.0",
                  "body": "An ActivityEdge is an abstract class for directed connections between two ActivityNodes."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ActivityEdge-source_and_target",
                  "name": "source_and_target"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActivityEdge-source_and_target-_ownedComment.0",
                    "body": "If an ActivityEdge is directly owned by an Activity, then its source and target must be directly or indirectly contained in the same Activity."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityEdge-source_and_target"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ActivityEdge-source_and_target-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "activity<>null implies source.containingActivity() = activity and target.containingActivity() = activity"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityEdge-_generalization.0",
                  "general": "RedefinableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-activity",
                    "name": "activity",
                    "type": "Activity",
                    "association": "A_edge_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-activity-_ownedComment.0",
                      "body": "The Activity containing the ActivityEdge, if it is directly owned by an Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-activity"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-activity-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-guard",
                    "name": "guard",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_guard_activityEdge"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-guard-_ownedComment.0",
                      "body": "A ValueSpecification that is evaluated to determine if a token can traverse the ActivityEdge. If an ActivityEdge has no guard, then there is no restriction on tokens traversing the edge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-guard"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-guard-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-inGroup",
                    "name": "inGroup",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityGroup",
                    "association": "A_containedEdge_inGroup"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-inGroup-_ownedComment.0",
                      "body": "ActivityGroups containing the ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-inGroup"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-inGroup-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityEdge-inGroup-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-inPartition",
                    "name": "inPartition",
                    "type": "ActivityPartition",
                    "association": "A_edge_inPartition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityEdge-inGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-inPartition-_ownedComment.0",
                      "body": "ActivityPartitions containing the ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-inPartition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-inPartition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityEdge-inPartition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-inStructuredNode",
                    "name": "inStructuredNode",
                    "type": "StructuredActivityNode",
                    "association": "A_edge_inStructuredNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-inGroup"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-inStructuredNode-_ownedComment.0",
                      "body": "The StructuredActivityNode containing the ActivityEdge, if it is owned by a StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-inStructuredNode"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-inStructuredNode-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-interrupts",
                    "name": "interrupts",
                    "type": "InterruptibleActivityRegion",
                    "association": "A_interruptingEdge_interrupts"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-interrupts-_ownedComment.0",
                      "body": "The InterruptibleActivityRegion for which this ActivityEdge is an interruptingEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-interrupts"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-interrupts-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-redefinedEdge",
                    "name": "redefinedEdge",
                    "type": "ActivityEdge",
                    "association": "A_redefinedEdge_activityEdge"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-redefinedEdge-_ownedComment.0",
                      "body": "ActivityEdges from a generalization of the Activity containing this ActivityEdge that are redefined by this ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-redefinedEdge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-redefinedEdge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityEdge-redefinedEdge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-source",
                    "name": "source",
                    "type": "ActivityNode",
                    "association": "A_outgoing_source_node"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-source-_ownedComment.0",
                      "body": "The ActivityNode from which tokens are taken when they traverse the ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-source"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-target",
                    "name": "target",
                    "type": "ActivityNode",
                    "association": "A_incoming_target_node"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-target-_ownedComment.0",
                      "body": "The ActivityNode to which tokens are put when they traverse the ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-target"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityEdge-weight",
                    "name": "weight",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_weight_activityEdge"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityEdge-weight-_ownedComment.0",
                      "body": "The minimum number of tokens that must traverse the ActivityEdge at the same time. If no weight is specified, this is equivalent to specifying a constant value of 1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityEdge-weight"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityEdge-weight-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ActivityEdge-isConsistentWith",
                  "name": "isConsistentWith",
                  "isQuery": true,
                  "bodyCondition": "ActivityEdge-isConsistentWith-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-isConsistentWith"
                  },
                  "_parent": "_"
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityEdge-isConsistentWith-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityEdge-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityEdge-isConsistentWith-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (redefiningElement.oclIsKindOf(ActivityEdge))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ActivityEdge-isConsistentWith-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ActivityEdge-isConsistentWith-redefiningElement",
                      "name": "redefiningElement",
                      "type": "RedefinableElement"
                    },
                    "_parent": "_"
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityFinalNode",
                "name": "ActivityFinalNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityFinalNode-_ownedComment.0",
                  "body": "An ActivityFinalNode is a FinalNode that terminates the execution of its owning Activity or StructuredActivityNode."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityFinalNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityFinalNode-_generalization.0",
                  "general": "FinalNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityGroup",
                "name": "ActivityGroup",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityGroup-_ownedComment.0",
                  "body": "ActivityGroup is an abstract class for defining sets of ActivityNodes and ActivityEdges in an Activity."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityGroup-nodes_and_edges",
                    "name": "nodes_and_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-nodes_and_edges-_ownedComment.0",
                      "body": "All containedNodes and containeEdges of an ActivityGroup must be in the same Activity as the group."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-nodes_and_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityGroup-nodes_and_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "containedNode->forAll(activity = self.containingActivity()) and \ncontainedEdge->forAll(activity = self.containingActivity())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityGroup-not_contained",
                    "name": "not_contained"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-not_contained-_ownedComment.0",
                      "body": "No containedNode or containedEdge of an ActivityGroup may be contained by its subgroups or its superGroups, transitively."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-not_contained"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityGroup-not_contained-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "subgroup->closure(subgroup).containedNode->excludesAll(containedNode) and\nsuperGroup->closure(superGroup).containedNode->excludesAll(containedNode) and \nsubgroup->closure(subgroup).containedEdge->excludesAll(containedEdge) and \nsuperGroup->closure(superGroup).containedEdge->excludesAll(containedEdge)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityGroup-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityGroup-containedEdge",
                    "name": "containedEdge",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityEdge",
                    "association": "A_containedEdge_inGroup"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-containedEdge-_ownedComment.0",
                      "body": "ActivityEdges immediately contained in the ActivityGroup."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-containedEdge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-containedEdge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityGroup-containedEdge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityGroup-containedNode",
                    "name": "containedNode",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityNode",
                    "association": "A_containedNode_inGroup"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-containedNode-_ownedComment.0",
                      "body": "ActivityNodes immediately contained in the ActivityGroup."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-containedNode"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-containedNode-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityGroup-containedNode-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityGroup-inActivity",
                    "name": "inActivity",
                    "type": "Activity",
                    "association": "A_group_inActivity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-inActivity-_ownedComment.0",
                      "body": "The Activity containing the ActivityGroup, if it is directly owned by an Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-inActivity"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-inActivity-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityGroup-subgroup",
                    "name": "subgroup",
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityGroup",
                    "association": "A_subgroup_superGroup"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-subgroup-_ownedComment.0",
                      "body": "Other ActivityGroups immediately contained in this ActivityGroup."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-subgroup"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-subgroup-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityGroup-subgroup-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityGroup-superGroup",
                    "name": "superGroup",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityGroup",
                    "association": "A_subgroup_superGroup"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityGroup-superGroup-_ownedComment.0",
                      "body": "The ActivityGroup immediately containing this ActivityGroup, if it is directly owned by another ActivityGroup."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-superGroup"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-superGroup-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ActivityGroup-containingActivity",
                  "name": "containingActivity",
                  "isQuery": true,
                  "bodyCondition": "ActivityGroup-containingActivity-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActivityGroup-containingActivity-_ownedComment.0",
                    "body": "The Activity that directly or indirectly contains this ActivityGroup."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-containingActivity"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityGroup-containingActivity-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-containingActivity"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityGroup-containingActivity-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if superGroup<>null then superGroup.containingActivity()\nelse inActivity\nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ActivityGroup-containingActivity-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Activity"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityGroup-containingActivity-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityNode",
                "name": "ActivityNode",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityNode-_ownedComment.0",
                  "body": "ActivityNode is an abstract class for points in the flow of an Activity connected by ActivityEdges."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityNode-_generalization.0",
                  "general": "RedefinableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-activity",
                    "name": "activity",
                    "type": "Activity",
                    "association": "A_node_activity"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-activity-_ownedComment.0",
                      "body": "The Activity containing the ActivityNode, if it is directly owned by an Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-activity"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-activity-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-inGroup",
                    "name": "inGroup",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ActivityGroup",
                    "association": "A_containedNode_inGroup"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-inGroup-_ownedComment.0",
                      "body": "ActivityGroups containing the ActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-inGroup"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-inGroup-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-inGroup-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-inInterruptibleRegion",
                    "name": "inInterruptibleRegion",
                    "type": "InterruptibleActivityRegion",
                    "association": "A_inInterruptibleRegion_node"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityNode-inGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-inInterruptibleRegion-_ownedComment.0",
                      "body": "InterruptibleActivityRegions containing the ActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-inInterruptibleRegion"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-inInterruptibleRegion-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-inInterruptibleRegion-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-inPartition",
                    "name": "inPartition",
                    "type": "ActivityPartition",
                    "association": "A_inPartition_node"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityNode-inGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-inPartition-_ownedComment.0",
                      "body": "ActivityPartitions containing the ActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-inPartition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-inPartition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-inPartition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-inStructuredNode",
                    "name": "inStructuredNode",
                    "type": "StructuredActivityNode",
                    "association": "A_node_inStructuredNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-inGroup"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-inStructuredNode-_ownedComment.0",
                      "body": "The StructuredActivityNode containing the ActvityNode, if it is directly owned by a StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-inStructuredNode"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-inStructuredNode-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-incoming",
                    "name": "incoming",
                    "type": "ActivityEdge",
                    "association": "A_incoming_target_node"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-incoming-_ownedComment.0",
                      "body": "ActivityEdges that have the ActivityNode as their target."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-incoming-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-incoming-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-outgoing",
                    "name": "outgoing",
                    "type": "ActivityEdge",
                    "association": "A_outgoing_source_node"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-outgoing-_ownedComment.0",
                      "body": "ActivityEdges that have the ActivityNode as their source."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-outgoing"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-outgoing-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-outgoing-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityNode-redefinedNode",
                    "name": "redefinedNode",
                    "type": "ActivityNode",
                    "association": "A_redefinedNode_activityNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-redefinedNode-_ownedComment.0",
                      "body": "ActivityNodes from a generalization of the Activity containining this ActivityNode that are redefined by this ActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-redefinedNode"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityNode-redefinedNode-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityNode-redefinedNode-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ActivityNode-containingActivity",
                    "name": "containingActivity",
                    "isQuery": true,
                    "bodyCondition": "ActivityNode-containingActivity-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityNode-containingActivity-_ownedComment.0",
                      "body": "The Activity that directly or indirectly contains this ActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-containingActivity"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ActivityNode-containingActivity-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-containingActivity"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ActivityNode-containingActivity-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if inStructuredNode<>null then inStructuredNode.containingActivity()\nelse activity\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ActivityNode-containingActivity-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Activity"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ActivityNode-containingActivity-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ActivityNode-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "ActivityNode-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ActivityNode-isConsistentWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ActivityNode-isConsistentWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (redefiningElement.oclIsKindOf(ActivityNode))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ActivityNode-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ActivityNode-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityParameterNode",
                "name": "ActivityParameterNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityParameterNode-_ownedComment.0",
                  "body": "An ActivityParameterNode is an ObjectNode for accepting values from the input Parameters or providing values to the output Parameters of an Activity."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityParameterNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityParameterNode-no_outgoing_edges",
                    "name": "no_outgoing_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityParameterNode-no_outgoing_edges-_ownedComment.0",
                      "body": "An ActivityParameterNode with no outgoing ActivityEdges and one or more incoming ActivityEdges must have a parameter with direction out, inout, or return."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityParameterNode-no_outgoing_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityParameterNode-no_outgoing_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(incoming->notEmpty() and outgoing->isEmpty()) implies \n\t(parameter.direction = ParameterDirectionKind::out or \n\t parameter.direction = ParameterDirectionKind::inout or \n\t parameter.direction = ParameterDirectionKind::return)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityParameterNode-has_parameters",
                    "name": "has_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityParameterNode-has_parameters-_ownedComment.0",
                      "body": "The parameter of an ActivityParameterNode must be from the containing Activity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityParameterNode-has_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityParameterNode-has_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "activity.ownedParameter->includes(parameter)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityParameterNode-same_type",
                    "name": "same_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityParameterNode-same_type-_ownedComment.0",
                      "body": "The type of an ActivityParameterNode is the same as the type of its parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityParameterNode-same_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityParameterNode-same_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "type = parameter.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityParameterNode-no_incoming_edges",
                    "name": "no_incoming_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityParameterNode-no_incoming_edges-_ownedComment.0",
                      "body": "An ActivityParameterNode with no incoming ActivityEdges and one or more outgoing ActivityEdges must have a parameter with direction in or inout."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityParameterNode-no_incoming_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityParameterNode-no_incoming_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(outgoing->notEmpty() and incoming->isEmpty()) implies \n\t(parameter.direction = ParameterDirectionKind::_'in' or \n\t parameter.direction = ParameterDirectionKind::inout)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityParameterNode-no_edges",
                    "name": "no_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityParameterNode-no_edges-_ownedComment.0",
                      "body": "An ActivityParameterNode may have all incoming ActivityEdges or all outgoing ActivityEdges, but it must not have both incoming and outgoing ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityParameterNode-no_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityParameterNode-no_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "incoming->isEmpty() or outgoing->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityParameterNode-_generalization.0",
                  "general": "ObjectNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ActivityParameterNode-parameter",
                  "name": "parameter",
                  "type": "Parameter",
                  "association": "A_parameter_activityParameterNode"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActivityParameterNode-parameter-_ownedComment.0",
                    "body": "The Parameter for which the ActivityParameterNode will be accepting or providing values."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityParameterNode-parameter"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActivityPartition",
                "name": "ActivityPartition"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActivityPartition-_ownedComment.0",
                  "body": "An ActivityPartition is a kind of ActivityGroup for identifying ActivityNodes that have some characteristic in common."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityPartition-represents_classifier",
                    "name": "represents_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityPartition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-represents_classifier-_ownedComment.0",
                      "body": "If a non-external ActivityPartition represents a Classifier and has a superPartition, then the superPartition must represent a Classifier, and the Classifier of the subpartition must be nested (nestedClassifier or ownedBehavior) in the Classifier represented by the superPartition, or be at the contained end of a composition Association with the Classifier represented by the superPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-represents_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityPartition-represents_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(not isExternal and represents.oclIsKindOf(Classifier) and superPartition->notEmpty()) implies\n(\n   let representedClassifier : Classifier = represents.oclAsType(Classifier) in\n     superPartition.represents.oclIsKindOf(Classifier) and\n      let representedSuperClassifier : Classifier = superPartition.represents.oclAsType(Classifier) in\n       (representedSuperClassifier.oclIsKindOf(BehavioredClassifier) and representedClassifier.oclIsKindOf(Behavior) and \n        representedSuperClassifier.oclAsType(BehavioredClassifier).ownedBehavior->includes(representedClassifier.oclAsType(Behavior))) \n       or\n       (representedSuperClassifier.oclIsKindOf(Class) and  representedSuperClassifier.oclAsType(Class).nestedClassifier->includes(representedClassifier))\n       or\n       (Association.allInstances()->exists(a | a.memberEnd->exists(end1 | end1.isComposite and end1.type = representedClassifier and \n                                                                      a.memberEnd->exists(end2 | end1<>end2 and end2.type = representedSuperClassifier))))\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityPartition-represents_property_and_is_contained",
                    "name": "represents_property_and_is_contained"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityPartition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-represents_property_and_is_contained-_ownedComment.0",
                      "body": "If an ActivityPartition represents a Property and has a superPartition, then the Property must be of a Classifier represented by the superPartition, or of a Classifier that is the type of a Property represented by the superPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-represents_property_and_is_contained"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityPartition-represents_property_and_is_contained-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(represents.oclIsKindOf(Property) and superPartition->notEmpty()) implies\n(\n  (superPartition.represents.oclIsKindOf(Classifier) and represents.owner = superPartition.represents) or \n  (superPartition.represents.oclIsKindOf(Property) and represents.owner = superPartition.represents.oclAsType(Property).type)\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityPartition-represents_property",
                    "name": "represents_property"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityPartition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-represents_property-_ownedComment.0",
                      "body": "If an ActivityPartition represents a Property and has a superPartition representing a Classifier, then all the other non-external subpartitions of the superPartition must represent Properties directly owned by the same Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-represents_property"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityPartition-represents_property-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(represents.oclIsKindOf(Property) and superPartition->notEmpty() and superPartition.represents.oclIsKindOf(Classifier)) implies\n(\n  let representedClassifier : Classifier = superPartition.represents.oclAsType(Classifier)\n  in\n    superPartition.subpartition->reject(isExternal)->forAll(p | \n       p.represents.oclIsKindOf(Property) and p.owner=representedClassifier)\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActivityPartition-dimension_not_contained",
                    "name": "dimension_not_contained"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActivityPartition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-dimension_not_contained-_ownedComment.0",
                      "body": "An ActvivityPartition with isDimension = true may not be contained by another ActivityPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-dimension_not_contained"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActivityPartition-dimension_not_contained-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isDimension implies superPartition->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActivityPartition-_generalization.0",
                  "general": "ActivityGroup"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-edge",
                    "name": "edge",
                    "type": "ActivityEdge",
                    "association": "A_edge_inPartition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-containedEdge"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-edge-_ownedComment.0",
                      "body": "ActivityEdges immediately contained in the ActivityPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityPartition-edge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityPartition-edge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-isDimension",
                    "name": "isDimension"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-isDimension-_ownedComment.0",
                      "body": "Indicates whether the ActivityPartition groups other ActivityPartitions along a dimension."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-isDimension"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ActivityPartition-isDimension-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-isExternal",
                    "name": "isExternal"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-isExternal-_ownedComment.0",
                      "body": "Indicates whether the ActivityPartition represents an entity to which the partitioning structure does not apply."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-isExternal"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ActivityPartition-isExternal-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-node",
                    "name": "node",
                    "type": "ActivityNode",
                    "association": "A_inPartition_node"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-containedNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-node-_ownedComment.0",
                      "body": "ActivityNodes immediately contained in the ActivityPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-node"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityPartition-node-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityPartition-node-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-represents",
                    "name": "represents",
                    "type": "Element",
                    "association": "A_represents_activityPartition"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-represents-_ownedComment.0",
                      "body": "An Element represented by the functionality modeled within the ActivityPartition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-represents"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityPartition-represents-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-subpartition",
                    "name": "subpartition",
                    "aggregation": "composite",
                    "type": "ActivityPartition",
                    "association": "A_subpartition_superPartition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-subgroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-subpartition-_ownedComment.0",
                      "body": "Other ActivityPartitions immediately contained in this ActivityPartition (as its subgroups)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-subpartition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityPartition-subpartition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ActivityPartition-subpartition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ActivityPartition-superPartition",
                    "name": "superPartition",
                    "type": "ActivityPartition",
                    "association": "A_subpartition_superPartition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-superGroup"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActivityPartition-superPartition-_ownedComment.0",
                      "body": "Other ActivityPartitions immediately containing this ActivityPartition (as its superGroups)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActivityPartition-superPartition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ActivityPartition-superPartition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CentralBufferNode",
                "name": "CentralBufferNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CentralBufferNode-_ownedComment.0",
                  "body": "A CentralBufferNode is an ObjectNode for managing flows from multiple sources and targets."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CentralBufferNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CentralBufferNode-_generalization.0",
                  "general": "ObjectNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ControlFlow",
                "name": "ControlFlow"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ControlFlow-_ownedComment.0",
                  "body": "A ControlFlow is an ActivityEdge traversed by control tokens or object tokens of control type, which are use to control the execution of ExecutableNodes."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ControlFlow"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ControlFlow-object_nodes",
                  "name": "object_nodes"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ControlFlow"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ControlFlow-object_nodes-_ownedComment.0",
                    "body": "ControlFlows may not have ObjectNodes at either end, except for ObjectNodes with control type."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ControlFlow-object_nodes"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ControlFlow-object_nodes-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "(source.oclIsKindOf(ObjectNode) implies source.oclAsType(ObjectNode).isControlType) and \n(target.oclIsKindOf(ObjectNode) implies target.oclAsType(ObjectNode).isControlType)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ControlFlow-_generalization.0",
                  "general": "ActivityEdge"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ControlNode",
                "name": "ControlNode",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ControlNode-_ownedComment.0",
                  "body": "A ControlNode is an abstract ActivityNode that coordinates flows in an Activity."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ControlNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ControlNode-_generalization.0",
                  "general": "ActivityNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DataStoreNode",
                "name": "DataStoreNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DataStoreNode-_ownedComment.0",
                  "body": "A DataStoreNode is a CentralBufferNode for persistent data."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DataStoreNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DataStoreNode-_generalization.0",
                  "general": "CentralBufferNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DecisionNode",
                "name": "DecisionNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DecisionNode-_ownedComment.0",
                  "body": "A DecisionNode is a ControlNode that chooses between outgoing ActivityEdges for the routing of tokens."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DecisionNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-zero_input_parameters",
                    "name": "zero_input_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-zero_input_parameters-_ownedComment.0",
                      "body": "If the DecisionNode has no decisionInputFlow and an incoming ControlFlow, then any decisionInput Behavior has no in parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-zero_input_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-zero_input_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(decisionInput<>null and decisionInputFlow=null and incoming->exists(oclIsKindOf(ControlFlow))) implies\n   decisionInput.inputParameters()->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-edges",
                    "name": "edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-edges-_ownedComment.0",
                      "body": "The ActivityEdges incoming to and outgoing from a DecisionNode, other than the decisionInputFlow (if any), must be either all ObjectFlows or all ControlFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let allEdges: Set(ActivityEdge) = incoming->union(outgoing) in\nlet allRelevantEdges: Set(ActivityEdge) = if decisionInputFlow->notEmpty() then allEdges->excluding(decisionInputFlow) else allEdges endif in\nallRelevantEdges->forAll(oclIsKindOf(ControlFlow)) or allRelevantEdges->forAll(oclIsKindOf(ObjectFlow))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-decision_input_flow_incoming",
                    "name": "decision_input_flow_incoming"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-decision_input_flow_incoming-_ownedComment.0",
                      "body": "The decisionInputFlow of a DecisionNode must be an incoming ActivityEdge of the DecisionNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-decision_input_flow_incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-decision_input_flow_incoming-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "incoming->includes(decisionInputFlow)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-two_input_parameters",
                    "name": "two_input_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-two_input_parameters-_ownedComment.0",
                      "body": "If the DecisionNode has a decisionInputFlow and an second incoming ObjectFlow, then any decisionInput has two in Parameters, the first of which has a type that is the same as or a supertype of the type of object tokens offered on the non-decisionInputFlow and the second of which has a type that is the same as or a supertype of the type of object tokens offered on the decisionInputFlow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-two_input_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-two_input_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(decisionInput<>null and decisionInputFlow<>null and incoming->forAll(oclIsKindOf(ObjectFlow))) implies\n\tdecisionInput.inputParameters()->size()=2"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-incoming_outgoing_edges",
                    "name": "incoming_outgoing_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-incoming_outgoing_edges-_ownedComment.0",
                      "body": "A DecisionNode has one or two incoming ActivityEdges and at least one outgoing ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-incoming_outgoing_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-incoming_outgoing_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(incoming->size() = 1 or incoming->size() = 2) and outgoing->size() > 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-incoming_control_one_input_parameter",
                    "name": "incoming_control_one_input_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-incoming_control_one_input_parameter-_ownedComment.0",
                      "body": "If the DecisionNode has a decisionInputFlow and an incoming ControlFlow, then any decisionInput Behavior has one in Parameter whose type is the same as or a supertype of the type of object tokens offered on the decisionInputFlow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-incoming_control_one_input_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-incoming_control_one_input_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(decisionInput<>null and decisionInputFlow<>null and incoming->exists(oclIsKindOf(ControlFlow))) implies\n\tdecisionInput.inputParameters()->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-parameters",
                    "name": "parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-parameters-_ownedComment.0",
                      "body": "A decisionInput Behavior has no out parameters, no inout parameters, and one return parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "decisionInput<>null implies \n  (decisionInput.ownedParameter->forAll(par | \n     par.direction <> ParameterDirectionKind::out and \n     par.direction <> ParameterDirectionKind::inout ) and\n   decisionInput.ownedParameter->one(par | \n     par.direction <> ParameterDirectionKind::return))\n     "
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DecisionNode-incoming_object_one_input_parameter",
                    "name": "incoming_object_one_input_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DecisionNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-incoming_object_one_input_parameter-_ownedComment.0",
                      "body": "If the DecisionNode has no decisionInputFlow and an incoming ObjectFlow, then any decisionInput Behavior has one in Parameter whose type is the same as or a supertype of the type of object tokens offered on the incoming ObjectFlow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-incoming_object_one_input_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DecisionNode-incoming_object_one_input_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(decisionInput<>null and decisionInputFlow=null and incoming->forAll(oclIsKindOf(ObjectFlow))) implies\n\tdecisionInput.inputParameters()->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DecisionNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DecisionNode-decisionInput",
                    "name": "decisionInput",
                    "type": "Behavior",
                    "association": "A_decisionInput_decisionNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-decisionInput-_ownedComment.0",
                      "body": "A Behavior that is executed to provide an input to guard ValueSpecifications on ActivityEdges outgoing from the DecisionNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-decisionInput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DecisionNode-decisionInput-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DecisionNode-decisionInputFlow",
                    "name": "decisionInputFlow",
                    "type": "ObjectFlow",
                    "association": "A_decisionInputFlow_decisionNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DecisionNode-decisionInputFlow-_ownedComment.0",
                      "body": "An additional ActivityEdge incoming to the DecisionNode that provides a decision input value for the guards ValueSpecifications on ActivityEdges outgoing from the DecisionNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DecisionNode-decisionInputFlow"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DecisionNode-decisionInputFlow-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExceptionHandler",
                "name": "ExceptionHandler"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExceptionHandler-_ownedComment.0",
                  "body": "An ExceptionHandler is an Element that specifies a handlerBody ExecutableNode to execute in case the specified exception occurs during the execution of the protected ExecutableNode."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExceptionHandler"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-handler_body_edges",
                    "name": "handler_body_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-handler_body_edges-_ownedComment.0",
                      "body": "The handlerBody has no incoming or outgoing ActivityEdges and the exceptionInput has no incoming ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-handler_body_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-handler_body_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "handlerBody.incoming->isEmpty() and handlerBody.outgoing->isEmpty() and exceptionInput.incoming->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-output_pins",
                    "name": "output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-output_pins-_ownedComment.0",
                      "body": "If the protectedNode is an Action with OutputPins, then the handlerBody must also be an Action with the same number of OutputPins, which are compatible in type, ordering, and multiplicity to those of the protectedNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(protectedNode.oclIsKindOf(Action) and protectedNode.oclAsType(Action).output->notEmpty()) implies\n(\n  handlerBody.oclIsKindOf(Action) and \n  let protectedNodeOutput : OrderedSet(OutputPin) = protectedNode.oclAsType(Action).output,\n        handlerBodyOutput : OrderedSet(OutputPin) =  handlerBody.oclAsType(Action).output in\n    protectedNodeOutput->size() = handlerBodyOutput->size() and\n    Sequence{1..protectedNodeOutput->size()}->forAll(i |\n    \thandlerBodyOutput->at(i).type.conformsTo(protectedNodeOutput->at(i).type) and\n    \thandlerBodyOutput->at(i).isOrdered=protectedNodeOutput->at(i).isOrdered and\n    \thandlerBodyOutput->at(i).compatibleWith(protectedNodeOutput->at(i)))\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-one_input",
                    "name": "one_input"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-one_input-_ownedComment.0",
                      "body": "The handlerBody is an Action with one InputPin, and that InputPin is the same as the exceptionInput."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-one_input"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-one_input-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "handlerBody.oclIsKindOf(Action) and\nlet inputs: OrderedSet(InputPin) = handlerBody.oclAsType(Action).input in\ninputs->size()=1 and inputs->first()=exceptionInput"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-edge_source_target",
                    "name": "edge_source_target"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-edge_source_target-_ownedComment.0",
                      "body": "An ActivityEdge that has a source within the handlerBody of an ExceptionHandler must have its target in the handlerBody also, and vice versa."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-edge_source_target"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-edge_source_target-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let nodes:Set(ActivityNode) = handlerBody.oclAsType(Action).allOwnedNodes() in\nnodes.outgoing->forAll(nodes->includes(target)) and\nnodes.incoming->forAll(nodes->includes(source))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-handler_body_owner",
                    "name": "handler_body_owner"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-handler_body_owner-_ownedComment.0",
                      "body": "The handlerBody must have the same owner as the protectedNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-handler_body_owner"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-handler_body_owner-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "handlerBody.owner=protectedNode.owner"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExceptionHandler-exception_input_type",
                    "name": "exception_input_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExceptionHandler"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-exception_input_type-_ownedComment.0",
                      "body": "The exceptionInput must either have no type or every exceptionType must conform to the exceptionInput type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-exception_input_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExceptionHandler-exception_input_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "exceptionInput.type=null or \nexceptionType->forAll(conformsTo(exceptionInput.type.oclAsType(Classifier)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExceptionHandler-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExceptionHandler-exceptionInput",
                    "name": "exceptionInput",
                    "type": "ObjectNode",
                    "association": "A_exceptionInput_exceptionHandler"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-exceptionInput-_ownedComment.0",
                      "body": "An ObjectNode within the handlerBody. When the ExceptionHandler catches an exception, the exception token is placed on this ObjectNode, causing the handlerBody to execute."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-exceptionInput"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExceptionHandler-exceptionType",
                    "name": "exceptionType",
                    "type": "Classifier",
                    "association": "A_exceptionType_exceptionHandler"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-exceptionType-_ownedComment.0",
                      "body": "The Classifiers whose instances the ExceptionHandler catches as exceptions. If an exception occurs whose type is any exceptionType, the ExceptionHandler catches the exception and executes the handlerBody."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-exceptionType"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ExceptionHandler-exceptionType-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExceptionHandler-handlerBody",
                    "name": "handlerBody",
                    "type": "ExecutableNode",
                    "association": "A_handlerBody_exceptionHandler"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-handlerBody-_ownedComment.0",
                      "body": "An ExecutableNode that is executed if the ExceptionHandler catches an exception."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-handlerBody"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExceptionHandler-protectedNode",
                    "name": "protectedNode",
                    "type": "ExecutableNode",
                    "association": "A_handler_protectedNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExceptionHandler-protectedNode-_ownedComment.0",
                      "body": "The ExecutableNode protected by the ExceptionHandler. If an exception propagates out of the protectedNode and has a type matching one of the exceptionTypes, then it is caught by this ExceptionHandler."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExceptionHandler-protectedNode"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExecutableNode",
                "name": "ExecutableNode",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExecutableNode-_ownedComment.0",
                  "body": "An ExecutableNode is an abstract class for ActivityNodes whose execution may be controlled using ControlFlows and to which ExceptionHandlers may be attached."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExecutableNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExecutableNode-_generalization.0",
                  "general": "ActivityNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ExecutableNode-handler",
                  "name": "handler",
                  "aggregation": "composite",
                  "type": "ExceptionHandler",
                  "association": "A_handler_protectedNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExecutableNode-handler-_ownedComment.0",
                    "body": "A set of ExceptionHandlers that are examined if an exception propagates out of the ExceptionNode."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExecutableNode-handler"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "ExecutableNode-handler-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "ExecutableNode-handler-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "FinalNode",
                "name": "FinalNode",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "FinalNode-_ownedComment.0",
                  "body": "A FinalNode is an abstract ControlNode at which a flow in an Activity stops."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "FinalNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "FinalNode-no_outgoing_edges",
                  "name": "no_outgoing_edges"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "FinalNode"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "FinalNode-no_outgoing_edges-_ownedComment.0",
                    "body": "A FinalNode has no outgoing ActivityEdges."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalNode-no_outgoing_edges"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "FinalNode-no_outgoing_edges-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "outgoing->isEmpty()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "FinalNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "FlowFinalNode",
                "name": "FlowFinalNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "FlowFinalNode-_ownedComment.0",
                  "body": "A FlowFinalNode is a FinalNode that terminates a flow by consuming the tokens offered to it."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "FlowFinalNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "FlowFinalNode-_generalization.0",
                  "general": "FinalNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ForkNode",
                "name": "ForkNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ForkNode-_ownedComment.0",
                  "body": "A ForkNode is a ControlNode that splits a flow into multiple concurrent flows."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ForkNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ForkNode-edges",
                    "name": "edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ForkNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ForkNode-edges-_ownedComment.0",
                      "body": "The ActivityEdges incoming to and outgoing from a ForkNode must be either all ObjectFlows or all ControlFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ForkNode-edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ForkNode-edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ForkNode-one_incoming_edge",
                    "name": "one_incoming_edge"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ForkNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ForkNode-one_incoming_edge-_ownedComment.0",
                      "body": "A ForkNode has one incoming ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ForkNode-one_incoming_edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ForkNode-one_incoming_edge-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "incoming->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ForkNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InitialNode",
                "name": "InitialNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InitialNode-_ownedComment.0",
                  "body": "An InitialNode is a ControlNode that offers a single control token when initially enabled."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InitialNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InitialNode-no_incoming_edges",
                    "name": "no_incoming_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InitialNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InitialNode-no_incoming_edges-_ownedComment.0",
                      "body": "An InitialNode has no incoming ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InitialNode-no_incoming_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InitialNode-no_incoming_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "incoming->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InitialNode-control_edges",
                    "name": "control_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InitialNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InitialNode-control_edges-_ownedComment.0",
                      "body": "All the outgoing ActivityEdges from an InitialNode must be ControlFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InitialNode-control_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InitialNode-control_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "outgoing->forAll(oclIsKindOf(ControlFlow))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InitialNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InterruptibleActivityRegion",
                "name": "InterruptibleActivityRegion"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InterruptibleActivityRegion-_ownedComment.0",
                  "body": "An InterruptibleActivityRegion is an ActivityGroup that supports the termination of tokens flowing in the portions of an activity within it."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InterruptibleActivityRegion"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "InterruptibleActivityRegion-interrupting_edges",
                  "name": "interrupting_edges"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "InterruptibleActivityRegion"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "InterruptibleActivityRegion-interrupting_edges-_ownedComment.0",
                    "body": "The interruptingEdges of an InterruptibleActivityRegion must have their source in the region and their target outside the region, but within the same Activity containing the region."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "InterruptibleActivityRegion-interrupting_edges"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "InterruptibleActivityRegion-interrupting_edges-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "interruptingEdge->forAll(edge | \n  node->includes(edge.source) and node->excludes(edge.target) and edge.target.containingActivity() = inActivity)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InterruptibleActivityRegion-_generalization.0",
                  "general": "ActivityGroup"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InterruptibleActivityRegion-interruptingEdge",
                    "name": "interruptingEdge",
                    "type": "ActivityEdge",
                    "association": "A_interruptingEdge_interrupts"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InterruptibleActivityRegion-interruptingEdge-_ownedComment.0",
                      "body": "The ActivityEdges leaving the InterruptibleActivityRegion on which a traversing token will result in the termination of other tokens flowing in the InterruptibleActivityRegion."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InterruptibleActivityRegion-interruptingEdge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InterruptibleActivityRegion-interruptingEdge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InterruptibleActivityRegion-interruptingEdge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InterruptibleActivityRegion-node",
                    "name": "node",
                    "type": "ActivityNode",
                    "association": "A_inInterruptibleRegion_node"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "ActivityGroup-containedNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InterruptibleActivityRegion-node-_ownedComment.0",
                      "body": "ActivityNodes immediately contained in the InterruptibleActivityRegion."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InterruptibleActivityRegion-node"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InterruptibleActivityRegion-node-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InterruptibleActivityRegion-node-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "JoinNode",
                "name": "JoinNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "JoinNode-_ownedComment.0",
                  "body": "A JoinNode is a ControlNode that synchronizes multiple flows."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "JoinNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "JoinNode-one_outgoing_edge",
                    "name": "one_outgoing_edge"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "JoinNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "JoinNode-one_outgoing_edge-_ownedComment.0",
                      "body": "A JoinNode has one outgoing ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "JoinNode-one_outgoing_edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "JoinNode-one_outgoing_edge-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "outgoing->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "JoinNode-incoming_object_flow",
                    "name": "incoming_object_flow"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "JoinNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "JoinNode-incoming_object_flow-_ownedComment.0",
                      "body": "If one of the incoming ActivityEdges of a JoinNode is an ObjectFlow, then its outgoing ActivityEdge must be an ObjectFlow. Otherwise its outgoing ActivityEdge must be a ControlFlow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "JoinNode-incoming_object_flow"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "JoinNode-incoming_object_flow-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if incoming->exists(oclIsKindOf(ObjectFlow)) then outgoing->forAll(oclIsKindOf(ObjectFlow))\nelse outgoing->forAll(oclIsKindOf(ControlFlow))\nendif"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "JoinNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "JoinNode-isCombineDuplicate",
                    "name": "isCombineDuplicate"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "JoinNode-isCombineDuplicate-_ownedComment.0",
                      "body": "Indicates whether incoming tokens having objects with the same identity are combined into one by the JoinNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "JoinNode-isCombineDuplicate"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "JoinNode-isCombineDuplicate-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "JoinNode-joinSpec",
                    "name": "joinSpec",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_joinSpec_joinNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "JoinNode-joinSpec-_ownedComment.0",
                      "body": "A ValueSpecification giving the condition under which the JoinNode will offer a token on its outgoing ActivityEdge. If no joinSpec is specified, then the JoinNode will offer an outgoing token if tokens are offered on all of its incoming ActivityEdges (an \"and\" condition)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "JoinNode-joinSpec"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "JoinNode-joinSpec-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "MergeNode",
                "name": "MergeNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MergeNode-_ownedComment.0",
                  "body": "A merge node is a control node that brings together multiple alternate flows. It is not used to synchronize concurrent flows but to accept one among several alternate flows."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MergeNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MergeNode-one_outgoing_edge",
                    "name": "one_outgoing_edge"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MergeNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MergeNode-one_outgoing_edge-_ownedComment.0",
                      "body": "A MergeNode has one outgoing ActivityEdge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MergeNode-one_outgoing_edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MergeNode-one_outgoing_edge-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "outgoing->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MergeNode-edges",
                    "name": "edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MergeNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MergeNode-edges-_ownedComment.0",
                      "body": "The ActivityEdges incoming to and outgoing from a MergeNode must be either all ObjectFlows or all ControlFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MergeNode-edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MergeNode-edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let allEdges : Set(ActivityEdge) = incoming->union(outgoing) in\nallEdges->forAll(oclIsKindOf(ControlFlow)) or allEdges->forAll(oclIsKindOf(ObjectFlow))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "MergeNode-_generalization.0",
                  "general": "ControlNode"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ObjectFlow",
                "name": "ObjectFlow"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ObjectFlow-_ownedComment.0",
                  "body": "An ObjectFlow is an ActivityEdge that is traversed by object tokens that may hold values. Object flows also support multicast/receive, token selection from object nodes, and transformation of tokens."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ObjectFlow"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-input_and_output_parameter",
                    "name": "input_and_output_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-input_and_output_parameter-_ownedComment.0",
                      "body": "A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same as or a supertype of the type of the source ObjectNode, be non-unique and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of source ObjectNode. The Behavior cannot have side effects."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-input_and_output_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-input_and_output_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "selection<>null implies\n\tselection.inputParameters()->size()=1 and\n\tselection.inputParameters()->forAll(not isUnique and is(0,*)) and\n\tselection.outputParameters()->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-no_executable_nodes",
                    "name": "no_executable_nodes"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-no_executable_nodes-_ownedComment.0",
                      "body": "ObjectFlows may not have ExecutableNodes at either end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-no_executable_nodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-no_executable_nodes-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not (source.oclIsKindOf(ExecutableNode) or target.oclIsKindOf(ExecutableNode))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-transformation_behavior",
                    "name": "transformation_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-transformation_behavior-_ownedComment.0",
                      "body": "A transformation Behavior has one input Parameter and one output Parameter. The input Parameter must be the same as or a supertype of the type of object token coming from the source end. The output Parameter must be the same or a subtype of the type of object token expected downstream. The Behavior cannot have side effects."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-transformation_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-transformation_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "transformation<>null implies\n\ttransformation.inputParameters()->size()=1 and\n\ttransformation.outputParameters()->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-selection_behavior",
                    "name": "selection_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-selection_behavior-_ownedComment.0",
                      "body": "An ObjectFlow may have a selection Behavior only if it has an ObjectNode as its source."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-selection_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-selection_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "selection<>null implies source.oclIsKindOf(ObjectNode)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-compatible_types",
                    "name": "compatible_types"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-compatible_types-_ownedComment.0",
                      "body": "ObjectNodes connected by an ObjectFlow, with optionally intervening ControlNodes, must have compatible types. In particular, the downstream ObjectNode type must be the same or a supertype of the upstream ObjectNode type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-compatible_types"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-compatible_types-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-same_upper_bounds",
                    "name": "same_upper_bounds"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-same_upper_bounds-_ownedComment.0",
                      "body": "ObjectNodes connected by an ObjectFlow, with optionally intervening ControlNodes, must have the same upperBounds."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-same_upper_bounds"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-same_upper_bounds-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-target",
                    "name": "target"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-target-_ownedComment.0",
                      "body": "An ObjectFlow with a constant weight may not target an ObjectNode, with optionally intervening ControlNodes, that has an upper bound less than the weight."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-target"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-target-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectFlow-is_multicast_or_is_multireceive",
                    "name": "is_multicast_or_is_multireceive"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-is_multicast_or_is_multireceive-_ownedComment.0",
                      "body": "isMulticast and isMultireceive cannot both be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-is_multicast_or_is_multireceive"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectFlow-is_multicast_or_is_multireceive-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not (isMulticast and isMultireceive)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ObjectFlow-_generalization.0",
                  "general": "ActivityEdge"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectFlow-isMulticast",
                    "name": "isMulticast"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-isMulticast-_ownedComment.0",
                      "body": "Indicates whether the objects in the ObjectFlow are passed by multicasting."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-isMulticast"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ObjectFlow-isMulticast-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectFlow-isMultireceive",
                    "name": "isMultireceive"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-isMultireceive-_ownedComment.0",
                      "body": "Indicates whether the objects in the ObjectFlow are gathered from respondents to multicasting."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-isMultireceive"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ObjectFlow-isMultireceive-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectFlow-selection",
                    "name": "selection",
                    "type": "Behavior",
                    "association": "A_selection_objectFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-selection-_ownedComment.0",
                      "body": "A Behavior used to select tokens from a source ObjectNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-selection"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ObjectFlow-selection-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectFlow-transformation",
                    "name": "transformation",
                    "type": "Behavior",
                    "association": "A_transformation_objectFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectFlow-transformation-_ownedComment.0",
                      "body": "A Behavior used to change or replace object tokens flowing along the ObjectFlow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectFlow-transformation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ObjectFlow-transformation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ObjectNode",
                "name": "ObjectNode",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ObjectNode-_ownedComment.0",
                  "body": "An ObjectNode is an abstract ActivityNode that may hold tokens within the object flow in an Activity. ObjectNodes also support token selection, limitation on the number of tokens held, specification of the state required for tokens being held, and carrying control values.\r\n"
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ObjectNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectNode-input_output_parameter",
                    "name": "input_output_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-input_output_parameter-_ownedComment.0",
                      "body": "A selection Behavior has one input Parameter and one output Parameter. The input Parameter must have the same type as  or a supertype of the type of ObjectNode, be non-unique, and have multiplicity 0..*. The output Parameter must be the same or a subtype of the type of ObjectNode. The Behavior cannot have side effects."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-input_output_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectNode-input_output_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "selection<>null implies\n\tselection.inputParameters()->size()=1 and\n\tselection.inputParameters()->forAll(p | not p.isUnique and p.is(0,*) and self.type.conformsTo(p.type)) and\n\tselection.outputParameters()->size()=1 and\n\t\tselection.inputParameters()->forAll(p | self.type.conformsTo(p.type))\n\t"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectNode-selection_behavior",
                    "name": "selection_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-selection_behavior-_ownedComment.0",
                      "body": "If an ObjectNode has a selection Behavior, then the ordering of the object node is ordered, and vice versa."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-selection_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectNode-selection_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(selection<>null) = (ordering=ObjectNodeOrderingKind::ordered)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ObjectNode-object_flow_edges",
                    "name": "object_flow_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ObjectNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-object_flow_edges-_ownedComment.0",
                      "body": "If isControlType=false, the ActivityEdges incoming to or outgoing from an ObjectNode must all be ObjectFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-object_flow_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ObjectNode-object_flow_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(not isControlType) implies incoming->union(outgoing)->forAll(oclIsKindOf(ObjectFlow))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ObjectNode-_generalization.1",
                    "general": "TypedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ObjectNode-_generalization.0",
                    "general": "ActivityNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectNode-inState",
                    "name": "inState",
                    "type": "State",
                    "association": "A_inState_objectNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-inState-_ownedComment.0",
                      "body": "The States required to be associated with the values held by tokens on this ObjectNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-inState"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ObjectNode-inState-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ObjectNode-inState-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectNode-isControlType",
                    "name": "isControlType"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-isControlType-_ownedComment.0",
                      "body": "Indicates whether the type of the ObjectNode is to be treated as representing control values that may traverse ControlFlows."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-isControlType"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ObjectNode-isControlType-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectNode-ordering",
                    "name": "ordering",
                    "type": "ObjectNodeOrderingKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-ordering-_ownedComment.0",
                      "body": "Indicates how the tokens held by the ObjectNode are ordered for selection to traverse ActivityEdges outgoing from the ObjectNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-ordering"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "ObjectNode-ordering-_defaultValue",
                      "type": "ObjectNodeOrderingKind",
                      "instance": "ObjectNodeOrderingKind-FIFO"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectNode-selection",
                    "name": "selection",
                    "type": "Behavior",
                    "association": "A_selection_objectNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-selection-_ownedComment.0",
                      "body": "A Behavior used to select tokens to be offered on outgoing ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-selection"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ObjectNode-selection-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ObjectNode-upperBound",
                    "name": "upperBound",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_upperBound_objectNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNode-upperBound-_ownedComment.0",
                      "body": "The maximum number of tokens that may be held by this ObjectNode. Tokens cannot flow into the ObjectNode if the upperBound is reached. If no upperBound is specified, then there is no limit on how many tokens the ObjectNode can hold."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNode-upperBound"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ObjectNode-upperBound-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Variable",
                "name": "Variable"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Variable-_ownedComment.0",
                  "body": "A Variable is a ConnectableElement that may store values during the execution of an Activity. Reading and writing the values of a Variable provides an alternative means for passing data than the use of ObjectFlows. A Variable may be owned directly by an Activity, in which case it is accessible from anywhere within that activity, or it may be owned by a StructuredActivityNode, in which case it is only accessible within that node."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Variable"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Variable-_generalization.0",
                    "general": "ConnectableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Variable-_generalization.1",
                    "general": "MultiplicityElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Variable-activityScope",
                    "name": "activityScope",
                    "type": "Activity",
                    "association": "A_variable_activityScope"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Variable-activityScope-_ownedComment.0",
                      "body": "An Activity that owns the Variable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Variable-activityScope"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Variable-activityScope-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Variable-scope",
                    "name": "scope",
                    "type": "StructuredActivityNode",
                    "association": "A_variable_scope"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Variable-scope-_ownedComment.0",
                      "body": "A StructuredActivityNode that owns the Variable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Variable-scope"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Variable-scope-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Variable-isAccessibleBy",
                  "name": "isAccessibleBy",
                  "isQuery": true,
                  "bodyCondition": "Variable-isAccessibleBy-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Variable-isAccessibleBy-_ownedComment.0",
                    "body": "A Variable is accessible by Actions within its scope (the Activity or StructuredActivityNode that owns it)."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Variable-isAccessibleBy"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Variable-isAccessibleBy-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Variable-isAccessibleBy"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Variable-isAccessibleBy-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if scope<>null then scope.allOwnedNodes()->includes(a)\nelse a.containingActivity()=activityScope\nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Variable-isAccessibleBy-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Variable-isAccessibleBy-a",
                      "name": "a",
                      "type": "Action"
                    },
                    "_parent": "_"
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "ObjectNodeOrderingKind",
                "name": "ObjectNodeOrderingKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ObjectNodeOrderingKind-_ownedComment.0",
                  "body": "ObjectNodeOrderingKind is an enumeration indicating queuing order for offering the tokens held by an ObjectNode."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ObjectNodeOrderingKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ObjectNodeOrderingKind-unordered",
                    "name": "unordered"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNodeOrderingKind-unordered-_ownedComment.0",
                      "body": "Indicates that tokens are unordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNodeOrderingKind-unordered"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ObjectNodeOrderingKind-ordered",
                    "name": "ordered"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNodeOrderingKind-ordered-_ownedComment.0",
                      "body": "Indicates that tokens are ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNodeOrderingKind-ordered"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ObjectNodeOrderingKind-LIFO",
                    "name": "LIFO"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNodeOrderingKind-LIFO-_ownedComment.0",
                      "body": "Indicates that tokens are queued in a last in, first out manner."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNodeOrderingKind-LIFO"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ObjectNodeOrderingKind-FIFO",
                    "name": "FIFO"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ObjectNodeOrderingKind-FIFO-_ownedComment.0",
                      "body": "Indicates that tokens are queued in a first in, first out manner."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ObjectNodeOrderingKind-FIFO"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_selection_objectNode",
                "name": "A_selection_objectNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ObjectNode-selection"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_selection_objectNode-objectNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_selection_objectNode-objectNode",
                  "name": "objectNode",
                  "type": "ObjectNode",
                  "association": "A_selection_objectNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_selection_objectNode-objectNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_selection_objectNode-objectNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inState_objectNode",
                "name": "A_inState_objectNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ObjectNode-inState"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_inState_objectNode-objectNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_inState_objectNode-objectNode",
                  "name": "objectNode",
                  "type": "ObjectNode",
                  "association": "A_inState_objectNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_inState_objectNode-objectNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_inState_objectNode-objectNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_upperBound_objectNode",
                "name": "A_upperBound_objectNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ObjectNode-upperBound"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_upperBound_objectNode-objectNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_upperBound_objectNode-objectNode",
                  "name": "objectNode",
                  "type": "ObjectNode",
                  "association": "A_upperBound_objectNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_upperBound_objectNode-objectNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_transformation_objectFlow",
                "name": "A_transformation_objectFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ObjectFlow-transformation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_transformation_objectFlow-objectFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_transformation_objectFlow-objectFlow",
                  "name": "objectFlow",
                  "type": "ObjectFlow",
                  "association": "A_transformation_objectFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_transformation_objectFlow-objectFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_transformation_objectFlow-objectFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_selection_objectFlow",
                "name": "A_selection_objectFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ObjectFlow-selection"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_selection_objectFlow-objectFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_selection_objectFlow-objectFlow",
                  "name": "objectFlow",
                  "type": "ObjectFlow",
                  "association": "A_selection_objectFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_selection_objectFlow-objectFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_selection_objectFlow-objectFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_joinSpec_joinNode",
                "name": "A_joinSpec_joinNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "JoinNode-joinSpec"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_joinSpec_joinNode-joinNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_joinSpec_joinNode-joinNode",
                  "name": "joinNode",
                  "type": "JoinNode",
                  "association": "A_joinSpec_joinNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_joinSpec_joinNode-joinNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_interruptingEdge_interrupts",
                "name": "A_interruptingEdge_interrupts"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InterruptibleActivityRegion-interruptingEdge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-interrupts"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_handler_protectedNode",
                "name": "A_handler_protectedNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExecutableNode-handler"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ExceptionHandler-protectedNode"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_handlerBody_exceptionHandler",
                "name": "A_handlerBody_exceptionHandler"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExceptionHandler-handlerBody"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_handlerBody_exceptionHandler-exceptionHandler"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_handlerBody_exceptionHandler-exceptionHandler",
                  "name": "exceptionHandler",
                  "type": "ExceptionHandler",
                  "association": "A_handlerBody_exceptionHandler"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_handlerBody_exceptionHandler-exceptionHandler-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_handlerBody_exceptionHandler-exceptionHandler-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_exceptionType_exceptionHandler",
                "name": "A_exceptionType_exceptionHandler"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExceptionHandler-exceptionType"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_exceptionType_exceptionHandler-exceptionHandler"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_exceptionType_exceptionHandler-exceptionHandler",
                  "name": "exceptionHandler",
                  "type": "ExceptionHandler",
                  "association": "A_exceptionType_exceptionHandler"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_exceptionType_exceptionHandler-exceptionHandler-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_exceptionType_exceptionHandler-exceptionHandler-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_exceptionInput_exceptionHandler",
                "name": "A_exceptionInput_exceptionHandler"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExceptionHandler-exceptionInput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_exceptionInput_exceptionHandler-exceptionHandler"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_exceptionInput_exceptionHandler-exceptionHandler",
                  "name": "exceptionHandler",
                  "type": "ExceptionHandler",
                  "association": "A_exceptionInput_exceptionHandler"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_exceptionInput_exceptionHandler-exceptionHandler-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_exceptionInput_exceptionHandler-exceptionHandler-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_decisionInput_decisionNode",
                "name": "A_decisionInput_decisionNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DecisionNode-decisionInput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_decisionInput_decisionNode-decisionNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_decisionInput_decisionNode-decisionNode",
                  "name": "decisionNode",
                  "type": "DecisionNode",
                  "association": "A_decisionInput_decisionNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_decisionInput_decisionNode-decisionNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_decisionInput_decisionNode-decisionNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_decisionInputFlow_decisionNode",
                "name": "A_decisionInputFlow_decisionNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DecisionNode-decisionInputFlow"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_decisionInputFlow_decisionNode-decisionNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_decisionInputFlow_decisionNode-decisionNode",
                  "name": "decisionNode",
                  "type": "DecisionNode",
                  "association": "A_decisionInputFlow_decisionNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_decisionInputFlow_decisionNode-decisionNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_represents_activityPartition",
                "name": "A_represents_activityPartition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition-represents"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_represents_activityPartition-activityPartition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_represents_activityPartition-activityPartition",
                  "name": "activityPartition",
                  "type": "ActivityPartition",
                  "association": "A_represents_activityPartition"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_represents_activityPartition-activityPartition-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_represents_activityPartition-activityPartition-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subpartition_superPartition",
                "name": "A_subpartition_superPartition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition-subpartition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition-superPartition"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_edge_inPartition",
                "name": "A_edge_inPartition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition-edge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-inPartition"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_parameter_activityParameterNode",
                "name": "A_parameter_activityParameterNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityParameterNode-parameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_parameter_activityParameterNode-activityParameterNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_parameter_activityParameterNode-activityParameterNode",
                  "name": "activityParameterNode",
                  "type": "ActivityParameterNode",
                  "association": "A_parameter_activityParameterNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_parameter_activityParameterNode-activityParameterNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_parameter_activityParameterNode-activityParameterNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inInterruptibleRegion_node",
                "name": "A_inInterruptibleRegion_node"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-inInterruptibleRegion"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "InterruptibleActivityRegion-node"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inPartition_node",
                "name": "A_inPartition_node"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-inPartition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityPartition-node"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_incoming_target_node",
                "name": "A_incoming_target_node"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-incoming"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-target"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_outgoing_source_node",
                "name": "A_outgoing_source_node"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-outgoing"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-source"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedNode_activityNode",
                "name": "A_redefinedNode_activityNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-redefinedNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedNode_activityNode-activityNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedNode_activityNode-activityNode",
                  "name": "activityNode",
                  "type": "ActivityNode",
                  "association": "A_redefinedNode_activityNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedNode_activityNode-activityNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedNode_activityNode-activityNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_containedEdge_inGroup",
                "name": "A_containedEdge_inGroup",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-containedEdge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-inGroup"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_containedNode_inGroup",
                "name": "A_containedNode_inGroup",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-containedNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-inGroup"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subgroup_superGroup",
                "name": "A_subgroup_superGroup",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-subgroup"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-superGroup"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedEdge_activityEdge",
                "name": "A_redefinedEdge_activityEdge"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-redefinedEdge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedEdge_activityEdge-activityEdge"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedEdge_activityEdge-activityEdge",
                  "name": "activityEdge",
                  "type": "ActivityEdge",
                  "association": "A_redefinedEdge_activityEdge"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedEdge_activityEdge-activityEdge-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedEdge_activityEdge-activityEdge-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_weight_activityEdge",
                "name": "A_weight_activityEdge"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-weight"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_weight_activityEdge-activityEdge"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_weight_activityEdge-activityEdge",
                  "name": "activityEdge",
                  "type": "ActivityEdge",
                  "association": "A_weight_activityEdge"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_weight_activityEdge-activityEdge-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_guard_activityEdge",
                "name": "A_guard_activityEdge"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-guard"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_guard_activityEdge-activityEdge"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_guard_activityEdge-activityEdge",
                  "name": "activityEdge",
                  "type": "ActivityEdge",
                  "association": "A_guard_activityEdge"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_guard_activityEdge-activityEdge-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_structuredNode_activity",
                "name": "A_structuredNode_activity"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-structuredNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-activity"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_group_inActivity",
                "name": "A_group_inActivity"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-group"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-inActivity"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_node_activity",
                "name": "A_node_activity"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-node"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-activity"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_variable_activityScope",
                "name": "A_variable_activityScope"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-variable"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Variable-activityScope"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_edge_activity",
                "name": "A_edge_activity"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-edge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-activity"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_partition_activity",
                "name": "A_partition_activity"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Activity-partition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_partition_activity-activity"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_partition_activity-activity",
                  "name": "activity",
                  "type": "Activity",
                  "association": "A_partition_activity"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "ActivityGroup-inActivity"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_partition_activity-activity-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Values",
            "name": "Values"
          },
          "_parent": "_",
          "packageImport": {
            "_attributes": {
              "xmi:type": "uml:PackageImport",
              "xmi:id": "Values-_packageImport.0",
              "importedPackage": "Classification"
            },
            "_parent": "_"
          },
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Duration",
                "name": "Duration"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Duration-_ownedComment.0",
                  "body": "A Duration is a ValueSpecification that specifies the temporal distance between two time instants."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Duration"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Duration-no_expr_requires_observation",
                  "name": "no_expr_requires_observation"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Duration"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Duration-no_expr_requires_observation-_ownedComment.0",
                    "body": "If a Duration has no expr, then it must have a single observation that is a DurationObservation."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Duration-no_expr_requires_observation"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Duration-no_expr_requires_observation-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(DurationObservation)))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Duration-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Duration-expr",
                    "name": "expr",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_expr_duration"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Duration-expr-_ownedComment.0",
                      "body": "A ValueSpecification that evaluates to the value of the Duration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Duration-expr"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Duration-expr-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Duration-observation",
                    "name": "observation",
                    "type": "Observation",
                    "association": "A_observation_duration"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Duration-observation-_ownedComment.0",
                      "body": "Refers to the Observations that are involved in the computation of the Duration value"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Duration-observation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Duration-observation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Duration-observation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DurationConstraint",
                "name": "DurationConstraint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DurationConstraint-_ownedComment.0",
                  "body": "A DurationConstraint is a Constraint that refers to a DurationInterval."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DurationConstraint"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DurationConstraint-first_event_multiplicity",
                    "name": "first_event_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DurationConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationConstraint-first_event_multiplicity-_ownedComment.0",
                      "body": "The multiplicity of firstEvent must be 2 if the multiplicity of constrainedElement is 2. Otherwise the multiplicity of firstEvent is 0."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationConstraint-first_event_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DurationConstraint-first_event_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if (constrainedElement->size() = 2)\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0) \nendif"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DurationConstraint-has_one_or_two_constrainedElements",
                    "name": "has_one_or_two_constrainedElements"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DurationConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationConstraint-has_one_or_two_constrainedElements-_ownedComment.0",
                      "body": "A DurationConstraint has either one or two constrainedElements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationConstraint-has_one_or_two_constrainedElements"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DurationConstraint-has_one_or_two_constrainedElements-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "constrainedElement->size() = 1 or constrainedElement->size()=2"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DurationConstraint-_generalization.0",
                  "general": "IntervalConstraint"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationConstraint-firstEvent",
                    "name": "firstEvent"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationConstraint-firstEvent-_ownedComment.0",
                      "body": "The value of firstEvent[i] is related to constrainedElement[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters constrainedElement[i]. If firstEvent[i] is false, then the corresponding observation event is the last time instant the execution is within constrainedElement[i]."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationConstraint-firstEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DurationConstraint-firstEvent-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DurationConstraint-firstEvent-_upperValue",
                      "value": 2
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationConstraint-specification",
                    "name": "specification",
                    "aggregation": "composite",
                    "type": "DurationInterval",
                    "association": "A_specification_durationConstraint"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "IntervalConstraint-specification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationConstraint-specification-_ownedComment.0",
                      "body": "The DurationInterval constraining the duration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationConstraint-specification"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DurationInterval",
                "name": "DurationInterval"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DurationInterval-_ownedComment.0",
                  "body": "A DurationInterval defines the range between two Durations."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DurationInterval"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DurationInterval-_generalization.0",
                  "general": "Interval"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationInterval-max",
                    "name": "max",
                    "type": "Duration",
                    "association": "A_max_durationInterval"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Interval-max"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationInterval-max-_ownedComment.0",
                      "body": "Refers to the Duration denoting the maximum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationInterval-max"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationInterval-min",
                    "name": "min",
                    "type": "Duration",
                    "association": "A_min_durationInterval"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Interval-min"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationInterval-min-_ownedComment.0",
                      "body": "Refers to the Duration denoting the minimum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationInterval-min"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DurationObservation",
                "name": "DurationObservation"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DurationObservation-_ownedComment.0",
                  "body": "A DurationObservation is a reference to a duration during an execution. It points out the NamedElement(s) in the model to observe and whether the observations are when this NamedElement is entered or when it is exited."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DurationObservation"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "DurationObservation-first_event_multiplicity",
                  "name": "first_event_multiplicity"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "DurationObservation"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "DurationObservation-first_event_multiplicity-_ownedComment.0",
                    "body": "The multiplicity of firstEvent must be 2 if the multiplicity of event is 2. Otherwise the multiplicity of firstEvent is 0."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "DurationObservation-first_event_multiplicity"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "DurationObservation-first_event_multiplicity-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if (event->size() = 2)\n  then (firstEvent->size() = 2) else (firstEvent->size() = 0)\nendif"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DurationObservation-_generalization.0",
                  "general": "Observation"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationObservation-event",
                    "name": "event",
                    "isOrdered": true,
                    "type": "NamedElement",
                    "association": "A_event_durationObservation"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationObservation-event-_ownedComment.0",
                      "body": "The DurationObservation is determined as the duration between the entering or exiting of a single event Element during execution, or the entering/exiting of one event Element and the entering/exiting of a second."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationObservation-event"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DurationObservation-event-_upperValue",
                      "value": 2
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DurationObservation-firstEvent",
                    "name": "firstEvent"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DurationObservation-firstEvent-_ownedComment.0",
                      "body": "The value of firstEvent[i] is related to event[i] (where i is 1 or 2). If firstEvent[i] is true, then the corresponding observation event is the first time instant the execution enters event[i]. If firstEvent[i] is false, then the corresponding observation event is the time instant the execution exits event[i]."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DurationObservation-firstEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DurationObservation-firstEvent-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DurationObservation-firstEvent-_upperValue",
                      "value": 2
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Expression",
                "name": "Expression"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Expression-_ownedComment.0",
                  "body": "An Expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands that are ValueSpecifications. It denotes a (possibly empty) set of values when evaluated in a context."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Expression"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Expression-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Expression-operand",
                    "name": "operand",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_operand_expression"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Expression-operand-_ownedComment.0",
                      "body": "Specifies a sequence of operand ValueSpecifications."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Expression-operand"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Expression-operand-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Expression-operand-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Expression-symbol",
                    "name": "symbol"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Expression-symbol-_ownedComment.0",
                      "body": "The symbol associated with this node in the expression tree."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Expression-symbol"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Expression-symbol-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Interval",
                "name": "Interval"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Interval-_ownedComment.0",
                  "body": "An Interval defines the range between two ValueSpecifications."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Interval"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Interval-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interval-max",
                    "name": "max",
                    "type": "ValueSpecification",
                    "association": "A_max_interval"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interval-max-_ownedComment.0",
                      "body": "Refers to the ValueSpecification denoting the maximum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interval-max"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interval-min",
                    "name": "min",
                    "type": "ValueSpecification",
                    "association": "A_min_interval"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interval-min-_ownedComment.0",
                      "body": "Refers to the ValueSpecification denoting the minimum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interval-min"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "IntervalConstraint",
                "name": "IntervalConstraint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "IntervalConstraint-_ownedComment.0",
                  "body": "An IntervalConstraint is a Constraint that is specified by an Interval."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "IntervalConstraint"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "IntervalConstraint-_generalization.0",
                  "general": "Constraint"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "IntervalConstraint-specification",
                  "name": "specification",
                  "aggregation": "composite",
                  "type": "Interval",
                  "association": "A_specification_intervalConstraint"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-specification"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "IntervalConstraint-specification-_ownedComment.0",
                    "body": "The Interval that specifies the condition of the IntervalConstraint."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "IntervalConstraint-specification"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralBoolean",
                "name": "LiteralBoolean"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralBoolean-_ownedComment.0",
                  "body": "A LiteralBoolean is a specification of a Boolean value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralBoolean"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralBoolean-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "LiteralBoolean-value",
                  "name": "value"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LiteralBoolean-value-_ownedComment.0",
                    "body": "The specified Boolean value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LiteralBoolean-value"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralBoolean",
                    "xmi:id": "LiteralBoolean-value-_defaultValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralBoolean-booleanValue",
                    "name": "booleanValue",
                    "isQuery": true,
                    "bodyCondition": "LiteralBoolean-booleanValue-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-booleanValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralBoolean-booleanValue-_ownedComment.0",
                      "body": "The query booleanValue() gives the value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralBoolean-booleanValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralBoolean-booleanValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralBoolean-booleanValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralBoolean-booleanValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (value)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralBoolean-booleanValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralBoolean-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralBoolean-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralBoolean-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralBoolean-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralBoolean-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralBoolean-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralBoolean-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralBoolean-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralInteger",
                "name": "LiteralInteger"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralInteger-_ownedComment.0",
                  "body": "A LiteralInteger is a specification of an Integer value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralInteger"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralInteger-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "LiteralInteger-value",
                  "name": "value"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LiteralInteger-value-_ownedComment.0",
                    "body": "The specified Integer value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LiteralInteger-value"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "LiteralInteger-value-_defaultValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralInteger-integerValue",
                    "name": "integerValue",
                    "isQuery": true,
                    "bodyCondition": "LiteralInteger-integerValue-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-integerValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralInteger-integerValue-_ownedComment.0",
                      "body": "The query integerValue() gives the value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralInteger-integerValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralInteger-integerValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralInteger-integerValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralInteger-integerValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (value)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralInteger-integerValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralInteger-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralInteger-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralInteger-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralInteger-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralInteger-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralInteger-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralInteger-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralInteger-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralNull",
                "name": "LiteralNull"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralNull-_ownedComment.0",
                  "body": "A LiteralNull specifies the lack of a value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralNull"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralNull-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralNull-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralNull-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralNull-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralNull-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralNull-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralNull-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralNull-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralNull-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralNull-isNull",
                    "name": "isNull",
                    "isQuery": true,
                    "bodyCondition": "LiteralNull-isNull-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isNull"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralNull-isNull-_ownedComment.0",
                      "body": "The query isNull() returns true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralNull-isNull"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralNull-isNull-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralNull-isNull"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralNull-isNull-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralNull-isNull-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralReal",
                "name": "LiteralReal"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralReal-_ownedComment.0",
                  "body": "A LiteralReal is a specification of a Real value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralReal"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralReal-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "LiteralReal-value",
                  "name": "value"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Real"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LiteralReal-value-_ownedComment.0",
                    "body": "The specified Real value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LiteralReal-value"
                    },
                    "_parent": "_"
                  }
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralReal-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralReal-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralReal-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralReal-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralReal-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralReal-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralReal-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralReal-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralReal-realValue",
                    "name": "realValue",
                    "isQuery": true,
                    "bodyCondition": "LiteralReal-realValue-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-realValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralReal-realValue-_ownedComment.0",
                      "body": "The query realValue() gives the value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralReal-realValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralReal-realValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralReal-realValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralReal-realValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (value)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralReal-realValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Real"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralSpecification",
                "name": "LiteralSpecification",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralSpecification-_ownedComment.0",
                  "body": "A LiteralSpecification identifies a literal constant being modeled."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralSpecification-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralString",
                "name": "LiteralString"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralString-_ownedComment.0",
                  "body": "A LiteralString is a specification of a String value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralString"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralString-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "LiteralString-value",
                  "name": "value"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LiteralString-value-_ownedComment.0",
                    "body": "The specified String value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LiteralString-value"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "LiteralString-value-_lowerValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralString-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralString-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralString-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralString-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralString-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralString-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralString-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralString-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralString-stringValue",
                    "name": "stringValue",
                    "isQuery": true,
                    "bodyCondition": "LiteralString-stringValue-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-stringValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralString-stringValue-_ownedComment.0",
                      "body": "The query stringValue() gives the value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralString-stringValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralString-stringValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralString-stringValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralString-stringValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (value)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralString-stringValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LiteralUnlimitedNatural",
                "name": "LiteralUnlimitedNatural"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LiteralUnlimitedNatural-_ownedComment.0",
                  "body": "A LiteralUnlimitedNatural is a specification of an UnlimitedNatural number."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LiteralUnlimitedNatural"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LiteralUnlimitedNatural-_generalization.0",
                  "general": "LiteralSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "LiteralUnlimitedNatural-value",
                  "name": "value"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LiteralUnlimitedNatural-value-_ownedComment.0",
                    "body": "The specified UnlimitedNatural value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LiteralUnlimitedNatural-value"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "LiteralUnlimitedNatural-value-_defaultValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralUnlimitedNatural-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "LiteralUnlimitedNatural-isComputable-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-isComputable"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralUnlimitedNatural-isComputable-_ownedComment.0",
                      "body": "The query isComputable() is redefined to be true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralUnlimitedNatural-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralUnlimitedNatural-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralUnlimitedNatural-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralUnlimitedNatural-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralUnlimitedNatural-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LiteralUnlimitedNatural-unlimitedValue",
                    "name": "unlimitedValue",
                    "isQuery": true,
                    "bodyCondition": "LiteralUnlimitedNatural-unlimitedValue-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecification-unlimitedValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LiteralUnlimitedNatural-unlimitedValue-_ownedComment.0",
                      "body": "The query unlimitedValue() gives the value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralUnlimitedNatural-unlimitedValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LiteralUnlimitedNatural-unlimitedValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LiteralUnlimitedNatural-unlimitedValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LiteralUnlimitedNatural-unlimitedValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (value)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LiteralUnlimitedNatural-unlimitedValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Observation",
                "name": "Observation",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Observation-_ownedComment.0",
                  "body": "Observation specifies a value determined by observing an event or events that occur relative to other model Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Observation"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Observation-_generalization.0",
                  "general": "PackageableElement"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OpaqueExpression",
                "name": "OpaqueExpression"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OpaqueExpression-_ownedComment.0",
                  "body": "An OpaqueExpression is a ValueSpecification that specifies the computation of a collection of values either in terms of a UML Behavior or based on a textual statement in a language other than UML"
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OpaqueExpression"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "OpaqueExpression-language_body_size",
                    "name": "language_body_size"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-language_body_size-_ownedComment.0",
                      "body": "If the language attribute is not empty, then the size of the body and language arrays must be the same."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-language_body_size"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "OpaqueExpression-language_body_size-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "language->notEmpty() implies (_'body'->size() = language->size())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "OpaqueExpression-one_return_result_parameter",
                    "name": "one_return_result_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-one_return_result_parameter-_ownedComment.0",
                      "body": "The behavior must have exactly one return result parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-one_return_result_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "OpaqueExpression-one_return_result_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "behavior <> null implies\n   behavior.ownedParameter->select(direction=ParameterDirectionKind::return)->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "OpaqueExpression-only_in_or_return_parameters",
                    "name": "only_in_or_return_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-only_in_or_return_parameters-_ownedComment.0",
                      "body": "The behavior may only have non-stream in or return parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-only_in_or_return_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "OpaqueExpression-only_in_or_return_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "behavior <> null implies behavior.ownedParameter->forAll(not isStream and\n(direction=ParameterDirectionKind::in or direction=ParameterDirectionKind::return))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OpaqueExpression-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueExpression-behavior",
                    "name": "behavior",
                    "type": "Behavior",
                    "association": "A_behavior_opaqueExpression"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-behavior-_ownedComment.0",
                      "body": "Specifies the behavior of the OpaqueExpression as a UML Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueExpression-behavior-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueExpression-body",
                    "name": "body",
                    "isOrdered": true,
                    "isUnique": false
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-body-_ownedComment.0",
                      "body": "A textual definition of the behavior of the OpaqueExpression, possibly in multiple languages."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-body"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueExpression-body-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueExpression-body-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueExpression-language",
                    "name": "language",
                    "isOrdered": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-language-_ownedComment.0",
                      "body": "Specifies the languages used to express the textual bodies of the OpaqueExpression.  Languages are matched to body Strings by order. The interpretation of the body depends on the languages. If the languages are unspecified, they may be implicit from the expression body or the context."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-language"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueExpression-language-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueExpression-language-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueExpression-result",
                    "name": "result",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Parameter",
                    "association": "A_result_opaqueExpression"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-result-_ownedComment.0",
                      "body": "If an OpaqueExpression is specified using a UML Behavior, then this refers to the single required return Parameter of that Behavior. When the Behavior completes execution, the values on this Parameter give the result of evaluating the OpaqueExpression."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueExpression-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "OpaqueExpression-isIntegral",
                    "name": "isIntegral",
                    "isQuery": true,
                    "bodyCondition": "OpaqueExpression-isIntegral-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-isIntegral-_ownedComment.0",
                      "body": "The query isIntegral() tells whether an expression is intended to produce an Integer."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-isIntegral"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "OpaqueExpression-isIntegral-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-isIntegral"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "OpaqueExpression-isIntegral-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (false)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "OpaqueExpression-isIntegral-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "OpaqueExpression-isNonNegative",
                    "name": "isNonNegative",
                    "isQuery": true,
                    "bodyCondition": "OpaqueExpression-isNonNegative-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression-isNonNegative-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-isNonNegative-_ownedComment.0",
                      "body": "The query isNonNegative() tells whether an integer expression has a non-negative value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-isNonNegative"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-isNonNegative-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-isNonNegative"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-isNonNegative-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "self.isIntegral()"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-isNonNegative-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-isNonNegative"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-isNonNegative-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (false)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "OpaqueExpression-isNonNegative-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "OpaqueExpression-isPositive",
                    "name": "isPositive",
                    "isQuery": true,
                    "bodyCondition": "OpaqueExpression-isPositive-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression-isPositive-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-isPositive-_ownedComment.0",
                      "body": "The query isPositive() tells whether an integer expression has a positive value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-isPositive"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-isPositive-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-isPositive"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-isPositive-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (false)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-isPositive-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-isPositive"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-isPositive-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "self.isIntegral()"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "OpaqueExpression-isPositive-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "OpaqueExpression-result.1",
                    "name": "result",
                    "isQuery": true,
                    "bodyCondition": "OpaqueExpression-result.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-result.1-_ownedComment.0",
                      "body": "Derivation for OpaqueExpression::/result "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-result.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "OpaqueExpression-result.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-result.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-result"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "OpaqueExpression-result.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if behavior = null then\n\tnull\nelse\n\tbehavior.ownedParameter->first()\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "OpaqueExpression-result.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "OpaqueExpression-result.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "OpaqueExpression-value",
                    "name": "value",
                    "isQuery": true,
                    "bodyCondition": "OpaqueExpression-value-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "OpaqueExpression-value-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueExpression-value-_ownedComment.0",
                      "body": "The query value() gives an integer value for an expression intended to produce one."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueExpression-value"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-value-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-value"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-value-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "self.isIntegral()"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "OpaqueExpression-value-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "OpaqueExpression-value"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "OpaqueExpression-value-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (0)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "OpaqueExpression-value-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StringExpression",
                "name": "StringExpression"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StringExpression-_ownedComment.0",
                  "body": "A StringExpression is an Expression that specifies a String value that is derived by concatenating a sequence of operands with String values or a sequence of subExpressions, some of which might be template parameters."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StringExpression"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StringExpression-operands",
                    "name": "operands"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StringExpression"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StringExpression-operands-_ownedComment.0",
                      "body": "All the operands of a StringExpression must be LiteralStrings"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StringExpression-operands"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StringExpression-operands-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "operand->forAll (oclIsKindOf (LiteralString))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StringExpression-subexpressions",
                    "name": "subexpressions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StringExpression"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StringExpression-subexpressions-_ownedComment.0",
                      "body": "If a StringExpression has sub-expressions, it cannot have operands and vice versa (this avoids the problem of having to define a collating sequence between operands and subexpressions)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StringExpression-subexpressions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StringExpression-subexpressions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if subExpression->notEmpty() then operand->isEmpty() else operand->notEmpty() endif"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StringExpression-_generalization.1",
                    "general": "TemplateableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StringExpression-_generalization.0",
                    "general": "Expression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StringExpression-owningExpression",
                    "name": "owningExpression",
                    "type": "StringExpression",
                    "association": "A_subExpression_owningExpression"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StringExpression-owningExpression-_ownedComment.0",
                      "body": "The StringExpression of which this StringExpression is a subExpression."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StringExpression-owningExpression"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StringExpression-owningExpression-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StringExpression-subExpression",
                    "name": "subExpression",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "StringExpression",
                    "association": "A_subExpression_owningExpression"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StringExpression-subExpression-_ownedComment.0",
                      "body": "The StringExpressions that constitute this StringExpression."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StringExpression-subExpression"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StringExpression-subExpression-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StringExpression-subExpression-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "StringExpression-stringValue",
                  "name": "stringValue",
                  "isQuery": true,
                  "bodyCondition": "StringExpression-stringValue-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "ValueSpecification-stringValue"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "StringExpression-stringValue-_ownedComment.0",
                    "body": "The query stringValue() returns the String resulting from concatenating, in order, all the component String values of all the operands or subExpressions that are part of the StringExpression."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "StringExpression-stringValue"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StringExpression-stringValue-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StringExpression-stringValue"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StringExpression-stringValue-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if subExpression->notEmpty()\nthen subExpression->iterate(se; stringValue: String = '' | stringValue.concat(se.stringValue()))\nelse operand->iterate(op; stringValue: String = '' | stringValue.concat(op.stringValue()))\nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "StringExpression-stringValue-result",
                    "name": "result",
                    "direction": "return"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TimeConstraint",
                "name": "TimeConstraint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TimeConstraint-_ownedComment.0",
                  "body": "A TimeConstraint is a Constraint that refers to a TimeInterval."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeConstraint"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "TimeConstraint-has_one_constrainedElement",
                  "name": "has_one_constrainedElement"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeConstraint"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TimeConstraint-has_one_constrainedElement-_ownedComment.0",
                    "body": "A TimeConstraint has one constrainedElement."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TimeConstraint-has_one_constrainedElement"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "TimeConstraint-has_one_constrainedElement-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "constrainedElement->size() = 1"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TimeConstraint-_generalization.0",
                  "general": "IntervalConstraint"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeConstraint-firstEvent",
                    "name": "firstEvent"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeConstraint-firstEvent-_ownedComment.0",
                      "body": "The value of firstEvent is related to the constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within the constrainedElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeConstraint-firstEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TimeConstraint-firstEvent-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "TimeConstraint-firstEvent-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeConstraint-specification",
                    "name": "specification",
                    "aggregation": "composite",
                    "type": "TimeInterval",
                    "association": "A_specification_timeConstraint"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "IntervalConstraint-specification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeConstraint-specification-_ownedComment.0",
                      "body": "TheTimeInterval constraining the duration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeConstraint-specification"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TimeExpression",
                "name": "TimeExpression"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TimeExpression-_ownedComment.0",
                  "body": "A TimeExpression is a ValueSpecification that represents a time value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeExpression"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "TimeExpression-no_expr_requires_observation",
                  "name": "no_expr_requires_observation"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeExpression"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TimeExpression-no_expr_requires_observation-_ownedComment.0",
                    "body": "If a TimeExpression has no expr, then it must have a single observation that is a TimeObservation."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TimeExpression-no_expr_requires_observation"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "TimeExpression-no_expr_requires_observation-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "expr = null implies (observation->size() = 1 and observation->forAll(oclIsKindOf(TimeObservation)))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TimeExpression-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeExpression-expr",
                    "name": "expr",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_expr_timeExpression"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeExpression-expr-_ownedComment.0",
                      "body": "A ValueSpecification that evaluates to the value of the TimeExpression."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeExpression-expr"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TimeExpression-expr-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeExpression-observation",
                    "name": "observation",
                    "type": "Observation",
                    "association": "A_observation_timeExpression"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeExpression-observation-_ownedComment.0",
                      "body": "Refers to the Observations that are involved in the computation of the TimeExpression value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeExpression-observation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TimeExpression-observation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "TimeExpression-observation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TimeInterval",
                "name": "TimeInterval"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TimeInterval-_ownedComment.0",
                  "body": "A TimeInterval defines the range between two TimeExpressions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeInterval"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TimeInterval-_generalization.0",
                  "general": "Interval"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeInterval-max",
                    "name": "max",
                    "type": "TimeExpression",
                    "association": "A_max_timeInterval"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Interval-max"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeInterval-max-_ownedComment.0",
                      "body": "Refers to the TimeExpression denoting the maximum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeInterval-max"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeInterval-min",
                    "name": "min",
                    "type": "TimeExpression",
                    "association": "A_min_timeInterval"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Interval-min"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeInterval-min-_ownedComment.0",
                      "body": "Refers to the TimeExpression denoting the minimum value of the range."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeInterval-min"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TimeObservation",
                "name": "TimeObservation"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TimeObservation-_ownedComment.0",
                  "body": "A TimeObservation is a reference to a time instant during an execution. It points out the NamedElement in the model to observe and whether the observation is when this NamedElement is entered or when it is exited."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeObservation"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TimeObservation-_generalization.0",
                  "general": "Observation"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeObservation-event",
                    "name": "event",
                    "type": "NamedElement",
                    "association": "A_event_timeObservation"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeObservation-event-_ownedComment.0",
                      "body": "The TimeObservation is determined by the entering or exiting of the event Element during execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeObservation-event"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeObservation-firstEvent",
                    "name": "firstEvent"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeObservation-firstEvent-_ownedComment.0",
                      "body": "The value of firstEvent is related to the event. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the event Element. If firstEvent is false, then the corresponding observation event is the time instant the execution exits the event Element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeObservation-firstEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "TimeObservation-firstEvent-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ValueSpecification",
                "name": "ValueSpecification",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ValueSpecification-_ownedComment.0",
                  "body": "A ValueSpecification is the specification of a (possibly empty) set of values. A ValueSpecification is a ParameterableElement that may be exposed as a formal TemplateParameter and provided as the actual parameter in the binding of a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ValueSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ValueSpecification-_generalization.0",
                    "general": "TypedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ValueSpecification-_generalization.1",
                    "general": "PackageableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-booleanValue",
                    "name": "booleanValue",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-booleanValue-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-booleanValue-_ownedComment.0",
                      "body": "The query booleanValue() gives a single Boolean value when one can be computed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-booleanValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-booleanValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-booleanValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-booleanValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-booleanValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ValueSpecification-booleanValue-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-integerValue",
                    "name": "integerValue",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-integerValue-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-integerValue-_ownedComment.0",
                      "body": "The query integerValue() gives a single Integer value when one can be computed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-integerValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-integerValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-integerValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-integerValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-integerValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ValueSpecification-integerValue-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-isCompatibleWith",
                    "name": "isCompatibleWith",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-isCompatibleWith-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ParameterableElement-isCompatibleWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-isCompatibleWith-_ownedComment.0",
                      "body": "The query isCompatibleWith() determines if this ValueSpecification is compatible with the specified ParameterableElement. This ValueSpecification is compatible with ParameterableElement p if the kind of this ValueSpecification is the same as or a subtype of the kind of p. Further, if p is a TypedElement, then the type of this ValueSpecification must be conformant with the type of p."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isCompatibleWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-isCompatibleWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isCompatibleWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-isCompatibleWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oclIsKindOf(p.oclType()) and (p.oclIsKindOf(TypedElement) implies \nself.type.conformsTo(p.oclAsType(TypedElement).type)))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ValueSpecification-isCompatibleWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ValueSpecification-isCompatibleWith-p",
                        "name": "p",
                        "type": "ParameterableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-isComputable",
                    "name": "isComputable",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-isComputable-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-isComputable-_ownedComment.0",
                      "body": "The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all ValueSpecifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute at least the value of all LiteralSpecifications."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isComputable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-isComputable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isComputable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-isComputable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (false)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-isComputable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-isNull",
                    "name": "isNull",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-isNull-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-isNull-_ownedComment.0",
                      "body": "The query isNull() returns true when it can be computed that the value is null."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isNull"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-isNull-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-isNull"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-isNull-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (false)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-isNull-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-realValue",
                    "name": "realValue",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-realValue-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-realValue-_ownedComment.0",
                      "body": "The query realValue() gives a single Real value when one can be computed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-realValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-realValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-realValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-realValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-realValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Real"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ValueSpecification-realValue-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-stringValue",
                    "name": "stringValue",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-stringValue-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-stringValue-_ownedComment.0",
                      "body": "The query stringValue() gives a single String value when one can be computed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-stringValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-stringValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-stringValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-stringValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-stringValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ValueSpecification-stringValue-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ValueSpecification-unlimitedValue",
                    "name": "unlimitedValue",
                    "isQuery": true,
                    "bodyCondition": "ValueSpecification-unlimitedValue-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecification-unlimitedValue-_ownedComment.0",
                      "body": "The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-unlimitedValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ValueSpecification-unlimitedValue-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecification-unlimitedValue"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ValueSpecification-unlimitedValue-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ValueSpecification-unlimitedValue-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "ValueSpecification-unlimitedValue-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_event_timeObservation",
                "name": "A_event_timeObservation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeObservation-event"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_event_timeObservation-timeObservation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_event_timeObservation-timeObservation",
                  "name": "timeObservation",
                  "type": "TimeObservation",
                  "association": "A_event_timeObservation"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_event_timeObservation-timeObservation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_event_timeObservation-timeObservation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_max_timeInterval",
                "name": "A_max_timeInterval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeInterval-max"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_max_timeInterval-timeInterval"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_max_timeInterval-_generalization.0",
                  "general": "A_max_interval"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_max_timeInterval-timeInterval",
                  "name": "timeInterval",
                  "type": "TimeInterval",
                  "association": "A_max_timeInterval"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_max_interval-interval"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_max_timeInterval-timeInterval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_max_timeInterval-timeInterval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_min_timeInterval",
                "name": "A_min_timeInterval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeInterval-min"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_min_timeInterval-timeInterval"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_min_timeInterval-_generalization.0",
                  "general": "A_min_interval"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_min_timeInterval-timeInterval",
                  "name": "timeInterval",
                  "type": "TimeInterval",
                  "association": "A_min_timeInterval"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_min_interval-interval"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_min_timeInterval-timeInterval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_min_timeInterval-timeInterval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_expr_timeExpression",
                "name": "A_expr_timeExpression"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeExpression-expr"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_expr_timeExpression-timeExpression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_expr_timeExpression-timeExpression",
                  "name": "timeExpression",
                  "type": "TimeExpression",
                  "association": "A_expr_timeExpression"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_expr_timeExpression-timeExpression-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_observation_timeExpression",
                "name": "A_observation_timeExpression"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeExpression-observation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_observation_timeExpression-timeExpression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_observation_timeExpression-timeExpression",
                  "name": "timeExpression",
                  "type": "TimeExpression",
                  "association": "A_observation_timeExpression"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_observation_timeExpression-timeExpression-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_specification_timeConstraint",
                "name": "A_specification_timeConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeConstraint-specification"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_specification_timeConstraint-timeConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_specification_timeConstraint-_generalization.0",
                  "general": "A_specification_intervalConstraint"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_specification_timeConstraint-timeConstraint",
                  "name": "timeConstraint",
                  "type": "TimeConstraint",
                  "association": "A_specification_timeConstraint"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_specification_intervalConstraint-intervalConstraint"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_specification_timeConstraint-timeConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subExpression_owningExpression",
                "name": "A_subExpression_owningExpression"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StringExpression-subExpression"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "StringExpression-owningExpression"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_opaqueExpression",
                "name": "A_result_opaqueExpression",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OpaqueExpression-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_opaqueExpression-opaqueExpression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_opaqueExpression-opaqueExpression",
                  "name": "opaqueExpression",
                  "type": "OpaqueExpression",
                  "association": "A_result_opaqueExpression"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_opaqueExpression-opaqueExpression-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_result_opaqueExpression-opaqueExpression-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_behavior_opaqueExpression",
                "name": "A_behavior_opaqueExpression"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OpaqueExpression-behavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_behavior_opaqueExpression-opaqueExpression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_behavior_opaqueExpression-opaqueExpression",
                  "name": "opaqueExpression",
                  "type": "OpaqueExpression",
                  "association": "A_behavior_opaqueExpression"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_behavior_opaqueExpression-opaqueExpression-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_behavior_opaqueExpression-opaqueExpression-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_specification_intervalConstraint",
                "name": "A_specification_intervalConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "IntervalConstraint-specification"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_specification_intervalConstraint-intervalConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_specification_intervalConstraint-_generalization.0",
                  "general": "A_specification_owningConstraint"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_specification_intervalConstraint-intervalConstraint",
                  "name": "intervalConstraint",
                  "type": "IntervalConstraint",
                  "association": "A_specification_intervalConstraint"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_specification_owningConstraint-owningConstraint"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_specification_intervalConstraint-intervalConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_max_interval",
                "name": "A_max_interval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interval-max"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_max_interval-interval"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_max_interval-interval",
                  "name": "interval",
                  "type": "Interval",
                  "association": "A_max_interval"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_max_interval-interval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_max_interval-interval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_min_interval",
                "name": "A_min_interval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interval-min"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_min_interval-interval"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_min_interval-interval",
                  "name": "interval",
                  "type": "Interval",
                  "association": "A_min_interval"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_min_interval-interval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_min_interval-interval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_operand_expression",
                "name": "A_operand_expression"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Expression-operand"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_operand_expression-expression"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_operand_expression-expression",
                  "name": "expression",
                  "type": "Expression",
                  "association": "A_operand_expression"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_operand_expression-expression-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_event_durationObservation",
                "name": "A_event_durationObservation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DurationObservation-event"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_event_durationObservation-durationObservation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_event_durationObservation-durationObservation",
                  "name": "durationObservation",
                  "type": "DurationObservation",
                  "association": "A_event_durationObservation"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_event_durationObservation-durationObservation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_event_durationObservation-durationObservation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_max_durationInterval",
                "name": "A_max_durationInterval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DurationInterval-max"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_max_durationInterval-durationInterval"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_max_durationInterval-_generalization.0",
                  "general": "A_max_interval"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_max_durationInterval-durationInterval",
                  "name": "durationInterval",
                  "type": "DurationInterval",
                  "association": "A_max_durationInterval"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_max_interval-interval"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_max_durationInterval-durationInterval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_max_durationInterval-durationInterval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_min_durationInterval",
                "name": "A_min_durationInterval"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DurationInterval-min"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_min_durationInterval-durationInterval"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_min_durationInterval-_generalization.0",
                  "general": "A_min_interval"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_min_durationInterval-durationInterval",
                  "name": "durationInterval",
                  "type": "DurationInterval",
                  "association": "A_min_durationInterval"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_min_interval-interval"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_min_durationInterval-durationInterval-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_min_durationInterval-durationInterval-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_specification_durationConstraint",
                "name": "A_specification_durationConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DurationConstraint-specification"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_specification_durationConstraint-durationConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_specification_durationConstraint-_generalization.0",
                  "general": "A_specification_intervalConstraint"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_specification_durationConstraint-durationConstraint",
                  "name": "durationConstraint",
                  "type": "DurationConstraint",
                  "association": "A_specification_durationConstraint"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_specification_intervalConstraint-intervalConstraint"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_specification_durationConstraint-durationConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_expr_duration",
                "name": "A_expr_duration"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Duration-expr"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_expr_duration-duration"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_expr_duration-duration",
                  "name": "duration",
                  "type": "Duration",
                  "association": "A_expr_duration"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_expr_duration-duration-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_observation_duration",
                "name": "A_observation_duration"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Duration-observation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_observation_duration-duration"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_observation_duration-duration",
                  "name": "duration",
                  "type": "Duration",
                  "association": "A_observation_duration"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_observation_duration-duration-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "UseCases",
            "name": "UseCases"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "UseCases-_packageImport.0",
                "importedPackage": "StructuredClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "UseCases-_packageImport.1",
                "importedPackage": "CommonBehavior"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Actor",
                "name": "Actor"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Actor-_ownedComment.0",
                  "body": "An Actor specifies a role played by a user or any other system that interacts with the subject."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Actor"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Actor-associations",
                    "name": "associations"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Actor"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Actor-associations-_ownedComment.0",
                      "body": "An Actor can only have Associations to UseCases, Components, and Classes. Furthermore these Associations must be binary."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Actor-associations"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Actor-associations-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "Association.allInstances()->forAll( a |\n  a.memberEnd->collect(type)->includes(self) implies\n  (\n    a.memberEnd->size() = 2 and\n    let actorEnd : Property = a.memberEnd->any(type = self) in\n      actorEnd.opposite.class.oclIsKindOf(UseCase) or\n      ( actorEnd.opposite.class.oclIsKindOf(Class) and not\n         actorEnd.opposite.class.oclIsKindOf(Behavior))\n      )\n  )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Actor-must_have_name",
                    "name": "must_have_name"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Actor"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Actor-must_have_name-_ownedComment.0",
                      "body": "An Actor must have a name."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Actor-must_have_name"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Actor-must_have_name-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "name->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Actor-_generalization.0",
                  "general": "BehavioredClassifier"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Extend",
                "name": "Extend"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Extend-_ownedComment.0",
                  "body": "A relationship from an extending UseCase to an extended UseCase that specifies how and when the behavior defined in the extending UseCase can be inserted into the behavior defined in the extended UseCase."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Extend"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Extend-extension_points",
                  "name": "extension_points"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Extend"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Extend-extension_points-_ownedComment.0",
                    "body": "The ExtensionPoints referenced by the Extend relationship must belong to the UseCase that is being extended."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Extend-extension_points"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Extend-extension_points-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "extensionLocation->forAll (xp | extendedCase.extensionPoint->includes(xp))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Extend-_generalization.0",
                    "general": "NamedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Extend-_generalization.1",
                    "general": "DirectedRelationship"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extend-condition",
                    "name": "condition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_condition_extend"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extend-condition-_ownedComment.0",
                      "body": "References the condition that must hold when the first ExtensionPoint is reached for the extension to take place. If no constraint is associated with the Extend relationship, the extension is unconditional."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extend-condition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Extend-condition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extend-extendedCase",
                    "name": "extendedCase",
                    "type": "UseCase",
                    "association": "A_extendedCase_extend"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extend-extendedCase-_ownedComment.0",
                      "body": "The UseCase that is being extended."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extend-extendedCase"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extend-extension",
                    "name": "extension",
                    "type": "UseCase",
                    "association": "A_extend_extension"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extend-extension-_ownedComment.0",
                      "body": "The UseCase that represents the extension and owns the Extend relationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extend-extension"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extend-extensionLocation",
                    "name": "extensionLocation",
                    "isOrdered": true,
                    "type": "ExtensionPoint",
                    "association": "A_extensionLocation_extension"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extend-extensionLocation-_ownedComment.0",
                      "body": "An ordered list of ExtensionPoints belonging to the extended UseCase, specifying where the respective behavioral fragments of the extending UseCase are to be inserted. The first fragment in the extending UseCase is associated with the first extension point in the list, the second fragment with the second point, and so on. Note that, in most practical cases, the extending UseCase has just a single behavior fragment, so that the list of ExtensionPoints is trivial."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extend-extensionLocation"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Extend-extensionLocation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExtensionPoint",
                "name": "ExtensionPoint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExtensionPoint-_ownedComment.0",
                  "body": "An ExtensionPoint identifies a point in the behavior of a UseCase where that behavior can be extended by the behavior of some other (extending) UseCase, as specified by an Extend relationship."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExtensionPoint"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ExtensionPoint-must_have_name",
                  "name": "must_have_name"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ExtensionPoint"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExtensionPoint-must_have_name-_ownedComment.0",
                    "body": "An ExtensionPoint must have a name."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionPoint-must_have_name"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ExtensionPoint-must_have_name-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "name->notEmpty ()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExtensionPoint-_generalization.0",
                  "general": "RedefinableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ExtensionPoint-useCase",
                  "name": "useCase",
                  "type": "UseCase",
                  "association": "A_extensionPoint_useCase"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExtensionPoint-useCase-_ownedComment.0",
                    "body": "The UseCase that owns this ExtensionPoint."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionPoint-useCase"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Include",
                "name": "Include"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Include-_ownedComment.0",
                  "body": "An Include relationship specifies that a UseCase contains the behavior defined in another UseCase."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Include"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Include-_generalization.0",
                    "general": "DirectedRelationship"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Include-_generalization.1",
                    "general": "NamedElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Include-addition",
                    "name": "addition",
                    "type": "UseCase",
                    "association": "A_addition_include"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Include-addition-_ownedComment.0",
                      "body": "The UseCase that is to be included."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Include-addition"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Include-includingCase",
                    "name": "includingCase",
                    "type": "UseCase",
                    "association": "A_include_includingCase"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Include-includingCase-_ownedComment.0",
                      "body": "The UseCase which includes the addition and owns the Include relationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Include-includingCase"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "UseCase",
                "name": "UseCase"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "UseCase-_ownedComment.0",
                  "body": "A UseCase specifies a set of actions performed by its subjects, which yields an observable result that is of value for one or more Actors or other stakeholders of each subject."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "UseCase"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UseCase-binary_associations",
                    "name": "binary_associations"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-binary_associations-_ownedComment.0",
                      "body": "UseCases can only be involved in binary Associations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-binary_associations"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UseCase-binary_associations-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies a.memberEnd->size() = 2)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UseCase-no_association_to_use_case",
                    "name": "no_association_to_use_case"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-no_association_to_use_case-_ownedComment.0",
                      "body": "UseCases cannot have Associations to UseCases specifying the same subject."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-no_association_to_use_case"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UseCase-no_association_to_use_case-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "Association.allInstances()->forAll(a | a.memberEnd.type->includes(self) implies \n   (\n   let usecases: Set(UseCase) = a.memberEnd.type->select(oclIsKindOf(UseCase))->collect(oclAsType(UseCase))->asSet() in\n   usecases->size() > 1 implies usecases->collect(subject)->size() > 1\n   )\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UseCase-cannot_include_self",
                    "name": "cannot_include_self"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-cannot_include_self-_ownedComment.0",
                      "body": "A UseCase cannot include UseCases that directly or indirectly include it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-cannot_include_self"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UseCase-cannot_include_self-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not allIncludedUseCases()->includes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UseCase-must_have_name",
                    "name": "must_have_name"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-must_have_name-_ownedComment.0",
                      "body": "A UseCase must have a name."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-must_have_name"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UseCase-must_have_name-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "name -> notEmpty ()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "UseCase-_generalization.0",
                  "general": "BehavioredClassifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UseCase-extend",
                    "name": "extend",
                    "aggregation": "composite",
                    "type": "Extend",
                    "association": "A_extend_extension"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-extend-_ownedComment.0",
                      "body": "The Extend relationships owned by this UseCase."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-extend"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "UseCase-extend-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UseCase-extend-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UseCase-extensionPoint",
                    "name": "extensionPoint",
                    "aggregation": "composite",
                    "type": "ExtensionPoint",
                    "association": "A_extensionPoint_useCase"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-extensionPoint-_ownedComment.0",
                      "body": "The ExtensionPoints owned by this UseCase."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-extensionPoint"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "UseCase-extensionPoint-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UseCase-extensionPoint-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UseCase-include",
                    "name": "include",
                    "aggregation": "composite",
                    "type": "Include",
                    "association": "A_include_includingCase"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-include-_ownedComment.0",
                      "body": "The Include relationships owned by this UseCase."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-include"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "UseCase-include-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UseCase-include-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UseCase-subject",
                    "name": "subject",
                    "type": "Classifier",
                    "association": "A_subject_useCase"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UseCase-subject-_ownedComment.0",
                      "body": "The subjects to which this UseCase applies. Each subject or its parts realize all the UseCases that apply to it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UseCase-subject"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "UseCase-subject-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UseCase-subject-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "UseCase-allIncludedUseCases",
                  "name": "allIncludedUseCases",
                  "isQuery": true,
                  "bodyCondition": "UseCase-allIncludedUseCases-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "UseCase-allIncludedUseCases-_ownedComment.0",
                    "body": "The query allIncludedUseCases() returns the transitive closure of all UseCases (directly or indirectly) included by this UseCase."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase-allIncludedUseCases"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UseCase-allIncludedUseCases-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UseCase-allIncludedUseCases"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UseCase-allIncludedUseCases-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (self.include.addition->union(self.include.addition->collect(uc | uc.allIncludedUseCases()))->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "UseCase-allIncludedUseCases-result",
                    "name": "result",
                    "direction": "return",
                    "type": "UseCase"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "UseCase-allIncludedUseCases-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UseCase-allIncludedUseCases-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extensionPoint_useCase",
                "name": "A_extensionPoint_useCase"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UseCase-extensionPoint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ExtensionPoint-useCase"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_include_includingCase",
                "name": "A_include_includingCase"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UseCase-include"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Include-includingCase"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subject_useCase",
                "name": "A_subject_useCase"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UseCase-subject"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-useCase"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extend_extension",
                "name": "A_extend_extension"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UseCase-extend"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Extend-extension"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_addition_include",
                "name": "A_addition_include"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Include-addition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_addition_include-include"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_addition_include-include",
                  "name": "include",
                  "type": "Include",
                  "association": "A_addition_include"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_addition_include-include-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_addition_include-include-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extensionLocation_extension",
                "name": "A_extensionLocation_extension"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Extend-extensionLocation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_extensionLocation_extension-extension"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_extensionLocation_extension-extension",
                  "name": "extension",
                  "type": "Extend",
                  "association": "A_extensionLocation_extension"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_extensionLocation_extension-extension-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_extensionLocation_extension-extension-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_condition_extend",
                "name": "A_condition_extend"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Extend-condition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_condition_extend-extend"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_condition_extend-extend",
                  "name": "extend",
                  "type": "Extend",
                  "association": "A_condition_extend"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_condition_extend-extend-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extendedCase_extend",
                "name": "A_extendedCase_extend"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Extend-extendedCase"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_extendedCase_extend-extend"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_extendedCase_extend-extend",
                  "name": "extend",
                  "type": "Extend",
                  "association": "A_extendedCase_extend"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_extendedCase_extend-extend-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_extendedCase_extend-extend-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "StructuredClassifiers",
            "name": "StructuredClassifiers"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StructuredClassifiers-_packageImport.0",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StructuredClassifiers-_packageImport.1",
                "importedPackage": "Packages"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StructuredClassifiers-_packageImport.2",
                "importedPackage": "SimpleClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StructuredClassifiers-_packageImport.3",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Association",
                "name": "Association"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Association-_ownedComment.0",
                  "body": "A link is a tuple of values that refer to typed objects.  An Association classifies a set of links, each of which is an instance of the Association.  Each value in the link refers to an instance of the type of the corresponding end of the Association.\r\n"
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Association"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-specialized_end_number",
                    "name": "specialized_end_number"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Association"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-specialized_end_number-_ownedComment.0",
                      "body": "An Association specializing another Association has the same number of ends as the other Association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-specialized_end_number"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-specialized_end_number-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parents()->select(oclIsKindOf(Association)).oclAsType(Association)->forAll(p | p.memberEnd->size() = self.memberEnd->size())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-specialized_end_types",
                    "name": "specialized_end_types"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Association"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-specialized_end_types-_ownedComment.0",
                      "body": "When an Association specializes another Association, every end of the specific Association corresponds to an end of the general Association, and the specific end reaches the same type or a subtype of the corresponding general end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-specialized_end_types"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-specialized_end_types-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "Sequence{1..memberEnd->size()}->\n\tforAll(i | general->select(oclIsKindOf(Association)).oclAsType(Association)->\n\t\tforAll(ga | self.memberEnd->at(i).type.conformsTo(ga.memberEnd->at(i).type)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-binary_associations",
                    "name": "binary_associations"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Association"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-binary_associations-_ownedComment.0",
                      "body": "Only binary Associations can be aggregations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-binary_associations"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-binary_associations-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "memberEnd->exists(aggregation <> AggregationKind::none) implies (memberEnd->size() = 2 and memberEnd->exists(aggregation = AggregationKind::none))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-association_ends",
                    "name": "association_ends"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Association"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-association_ends-_ownedComment.0",
                      "body": "Ends of Associations with more than two ends must be owned by the Association itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-association_ends"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-association_ends-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "memberEnd->size() > 2 implies ownedEnd->includesAll(memberEnd)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-ends_must_be_typed",
                    "name": "ends_must_be_typed"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Association"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-ends_must_be_typed-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "memberEnd->forAll(type->notEmpty())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Association-_generalization.0",
                    "general": "Relationship"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Association-_generalization.1",
                    "general": "Classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Association-endType",
                    "name": "endType",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Type",
                    "association": "A_endType_association"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Relationship-relatedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-endType-_ownedComment.0",
                      "body": "The Classifiers that are used as types of the ends of the Association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-endType"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Association-endType-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Association-isDerived",
                    "name": "isDerived"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-isDerived-_ownedComment.0",
                      "body": "Specifies whether the Association is derived from other model elements such as other Associations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-isDerived"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Association-isDerived-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Association-memberEnd",
                    "name": "memberEnd",
                    "isOrdered": true,
                    "type": "Property",
                    "association": "A_memberEnd_association"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-member"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-memberEnd-_ownedComment.0",
                      "body": "Each end represents participation of instances of the Classifier connected to the end in links of the Association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-memberEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Association-memberEnd-_lowerValue",
                      "value": 2
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Association-memberEnd-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Association-navigableOwnedEnd",
                    "name": "navigableOwnedEnd",
                    "type": "Property",
                    "association": "A_navigableOwnedEnd_association"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Association-ownedEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-navigableOwnedEnd-_ownedComment.0",
                      "body": "The navigable ends that are owned by the Association itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-navigableOwnedEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Association-navigableOwnedEnd-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Association-navigableOwnedEnd-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Association-ownedEnd",
                    "name": "ownedEnd",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedEnd_owningAssociation"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Association-memberEnd"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Association-ownedEnd-_ownedComment.0",
                      "body": "The ends that are owned by the Association itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Association-ownedEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Association-ownedEnd-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Association-ownedEnd-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Association-endType.1",
                  "name": "endType",
                  "isQuery": true,
                  "bodyCondition": "Association-endType.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Association-endType.1-_ownedComment.0",
                    "body": "endType is derived from the types of the member ends."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Association-endType.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Association-endType.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "Association-endType.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Association-endType"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Association-endType.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (memberEnd->collect(type)->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "Association-endType.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Type"
                  },
                  "_parent": "_",
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Association-endType.1-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AssociationClass",
                "name": "AssociationClass"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AssociationClass-_ownedComment.0",
                  "body": "A model element that has both Association and Class properties. An AssociationClass can be seen as an Association that also has Class properties, or as a Class that also has Association properties. It not only connects a set of Classifiers but also defines a set of Features that belong to the Association itself and not to any of the associated Classifiers."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AssociationClass"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AssociationClass-cannot_be_defined",
                    "name": "cannot_be_defined"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AssociationClass"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AssociationClass-cannot_be_defined-_ownedComment.0",
                      "body": "An AssociationClass cannot be defined between itself and something else."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AssociationClass-cannot_be_defined"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AssociationClass-cannot_be_defined-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.endType()->excludes(self) and self.endType()->collect(et|et.oclAsType(Classifier).allParents())->flatten()->excludes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AssociationClass-disjoint_attributes_ends",
                    "name": "disjoint_attributes_ends"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AssociationClass"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AssociationClass-disjoint_attributes_ends-_ownedComment.0",
                      "body": "The owned attributes and owned ends of an AssociationClass are disjoint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AssociationClass-disjoint_attributes_ends"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AssociationClass-disjoint_attributes_ends-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedAttribute->intersection(ownedEnd)->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "AssociationClass-_generalization.0",
                    "general": "Class"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "AssociationClass-_generalization.1",
                    "general": "Association"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Class",
                "name": "Class"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Class-_ownedComment.0",
                  "body": "A Class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.  A Class may have an internal structure and Ports.\r\n"
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Class"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Class-passive_class",
                  "name": "passive_class"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Class"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Class-passive_class-_ownedComment.0",
                    "body": "Only an active Class may own Receptions and have a classifierBehavior."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Class-passive_class"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Class-passive_class-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "not isActive implies (ownedReception->isEmpty() and classifierBehavior = null)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Class-_generalization.0",
                    "general": "BehavioredClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Class-_generalization.1",
                    "general": "EncapsulatedClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-extension",
                    "name": "extension",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Extension",
                    "association": "A_extension_metaclass"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-extension-_ownedComment.0",
                      "body": "This property is used when the Class is acting as a metaclass. It references the Extensions that specify additional properties of the metaclass. The property is derived from the Extensions whose memberEnds are typed by the Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-extension"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-extension-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-extension-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-isAbstract",
                    "name": "isAbstract"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Classifier-isAbstract"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-isAbstract-_ownedComment.0",
                      "body": "If true, the Class does not provide a complete declaration and cannot be instantiated. An abstract Class is typically used as a target of Associations or Generalizations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-isAbstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Class-isAbstract-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-isActive",
                    "name": "isActive"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-isActive-_ownedComment.0",
                      "body": "Determines whether an object specified by this Class is active or not. If true, then the owning Class is referred to as an active Class. If false, then such a Class is referred to as a passive Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-isActive"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Class-isActive-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-nestedClassifier",
                    "name": "nestedClassifier",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Classifier",
                    "association": "A_nestedClassifier_nestingClass"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-nestedClassifier-_ownedComment.0",
                      "body": "The Classifiers owned by the Class that are not ownedBehaviors."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-nestedClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-nestedClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-nestedClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-ownedAttribute",
                    "name": "ownedAttribute",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedAttribute_class"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "StructuredClassifier-ownedAttribute"
                    },
                    "_parent": "_"
                  },
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-ownedAttribute-_ownedComment.0",
                      "body": "The attributes (i.e., the Properties) owned by the Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-ownedAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-ownedAttribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-ownedAttribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-ownedOperation",
                    "name": "ownedOperation",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Operation",
                    "association": "A_ownedOperation_class"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-ownedOperation-_ownedComment.0",
                      "body": "The Operations owned by the Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-ownedOperation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-ownedOperation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-ownedOperation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-ownedReception",
                    "name": "ownedReception",
                    "aggregation": "composite",
                    "type": "Reception",
                    "association": "A_ownedReception_class"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-ownedReception-_ownedComment.0",
                      "body": "The Receptions owned by the Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-ownedReception"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-ownedReception-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-ownedReception-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Class-superClass",
                    "name": "superClass",
                    "isDerived": true,
                    "type": "Class",
                    "association": "A_superClass_class"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Classifier-general"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-superClass-_ownedComment.0",
                      "body": "The superclasses of a Class, derived from its Generalizations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-superClass"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Class-superClass-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Class-superClass-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Class-extension.1",
                    "name": "extension",
                    "isQuery": true,
                    "bodyCondition": "Class-extension.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-extension.1-_ownedComment.0",
                      "body": "Derivation for Class::/extension : Extension"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-extension.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Class-extension.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Class-extension.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Class-extension"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Class-extension.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (Extension.allInstances()->select(ext | \n  let endTypes : Sequence(Classifier) = ext.memberEnd->collect(type.oclAsType(Classifier)) in\n  endTypes->includes(self) or endTypes.allParents()->includes(self) ))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Class-extension.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Extension"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Class-extension.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Class-extension.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Class-superClass.1",
                    "name": "superClass",
                    "isQuery": true,
                    "bodyCondition": "Class-superClass.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Class-superClass.1-_ownedComment.0",
                      "body": "Derivation for Class::/superClass : Class"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Class-superClass.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Class-superClass.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Class-superClass.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Class-superClass"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Class-superClass.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.general()->select(oclIsKindOf(Class))->collect(oclAsType(Class))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Class-superClass.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Class"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Class-superClass.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Class-superClass.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Collaboration",
                "name": "Collaboration"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Collaboration-_ownedComment.0",
                  "body": "A Collaboration describes a structure of collaborating elements (roles), each performing a specialized function, which collectively accomplish some desired functionality. "
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Collaboration"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Collaboration-_generalization.1",
                    "general": "StructuredClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Collaboration-_generalization.0",
                    "general": "BehavioredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Collaboration-collaborationRole",
                  "name": "collaborationRole",
                  "type": "ConnectableElement",
                  "association": "A_collaborationRole_collaboration"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-role"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Collaboration-collaborationRole-_ownedComment.0",
                    "body": "Represents the participants in the Collaboration."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Collaboration-collaborationRole"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Collaboration-collaborationRole-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "Collaboration-collaborationRole-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CollaborationUse",
                "name": "CollaborationUse"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CollaborationUse-_ownedComment.0",
                  "body": "A CollaborationUse is used to specify the application of a pattern specified by a Collaboration to a specific situation."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CollaborationUse"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CollaborationUse-client_elements",
                    "name": "client_elements"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CollaborationUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CollaborationUse-client_elements-_ownedComment.0",
                      "body": "All the client elements of a roleBinding are in one Classifier and all supplier elements of a roleBinding are in one Collaboration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CollaborationUse-client_elements"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CollaborationUse-client_elements-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "roleBinding->collect(client)->forAll(ne1, ne2 |\n  ne1.oclIsKindOf(ConnectableElement) and ne2.oclIsKindOf(ConnectableElement) and\n    let ce1 : ConnectableElement = ne1.oclAsType(ConnectableElement), ce2 : ConnectableElement = ne2.oclAsType(ConnectableElement) in\n      ce1.structuredClassifier = ce2.structuredClassifier)\nand\n  roleBinding->collect(supplier)->forAll(ne1, ne2 |\n  ne1.oclIsKindOf(ConnectableElement) and ne2.oclIsKindOf(ConnectableElement) and\n    let ce1 : ConnectableElement = ne1.oclAsType(ConnectableElement), ce2 : ConnectableElement = ne2.oclAsType(ConnectableElement) in\n      ce1.collaboration = ce2.collaboration)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CollaborationUse-every_role",
                    "name": "every_role"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CollaborationUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CollaborationUse-every_role-_ownedComment.0",
                      "body": "Every collaborationRole in the Collaboration is bound within the CollaborationUse."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CollaborationUse-every_role"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CollaborationUse-every_role-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "type.collaborationRole->forAll(role | roleBinding->exists(rb | rb.supplier->includes(role)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CollaborationUse-connectors",
                    "name": "connectors"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CollaborationUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CollaborationUse-connectors-_ownedComment.0",
                      "body": "Connectors in a Collaboration typing a CollaborationUse must have corresponding Connectors between elements bound in the context Classifier, and these corresponding Connectors must have the same or more general type than the Collaboration Connectors."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CollaborationUse-connectors"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CollaborationUse-connectors-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "type.ownedConnector->forAll(connector |\n  let rolesConnectedInCollab : Set(ConnectableElement) = connector.end.role->asSet(),\n        relevantBindings : Set(Dependency) = roleBinding->select(rb | rb.supplier->intersection(rolesConnectedInCollab)->notEmpty()),\n        boundRoles : Set(ConnectableElement) = relevantBindings->collect(client.oclAsType(ConnectableElement))->asSet(),\n        contextClassifier : StructuredClassifier = boundRoles->any(true).structuredClassifier->any(true) in\n          contextClassifier.ownedConnector->exists( correspondingConnector | \n              correspondingConnector.end.role->forAll( role | boundRoles->includes(role) )\n              and (connector.type->notEmpty() and correspondingConnector.type->notEmpty()) implies connector.type->forAll(conformsTo(correspondingConnector.type)) )\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CollaborationUse-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CollaborationUse-roleBinding",
                    "name": "roleBinding",
                    "aggregation": "composite",
                    "type": "Dependency",
                    "association": "A_roleBinding_collaborationUse"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CollaborationUse-roleBinding-_ownedComment.0",
                      "body": "A mapping between features of the Collaboration and features of the owning Classifier. This mapping indicates which ConnectableElement of the Classifier plays which role(s) in the Collaboration. A ConnectableElement may be bound to multiple roles in the same CollaborationUse (that is, it may play multiple roles)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CollaborationUse-roleBinding"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "CollaborationUse-roleBinding-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "CollaborationUse-roleBinding-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CollaborationUse-type",
                    "name": "type",
                    "type": "Collaboration",
                    "association": "A_type_collaborationUse"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CollaborationUse-type-_ownedComment.0",
                      "body": "The Collaboration which is used in this CollaborationUse. The Collaboration defines the cooperation between its roles which are mapped to ConnectableElements relating to the Classifier owning the CollaborationUse."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CollaborationUse-type"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Component",
                "name": "Component"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Component-_ownedComment.0",
                  "body": "A Component represents a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its environment.  "
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Component"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Component-no_nested_classifiers",
                    "name": "no_nested_classifiers"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Component"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-no_nested_classifiers-_ownedComment.0",
                      "body": "A Component cannot nest Classifiers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-no_nested_classifiers"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Component-no_nested_classifiers-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "nestedClassifier->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Component-no_packaged_elements",
                    "name": "no_packaged_elements"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Component"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-no_packaged_elements-_ownedComment.0",
                      "body": "A Component nested in a Class cannot have any packaged elements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-no_packaged_elements"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Component-no_packaged_elements-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "nestingClass <> null implies packagedElement->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Component-_generalization.0",
                  "general": "Class"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Component-isIndirectlyInstantiated",
                    "name": "isIndirectlyInstantiated"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-isIndirectlyInstantiated-_ownedComment.0",
                      "body": "If true, the Component is defined at design-time, but at run-time (or execution-time) an object specified by the Component does not exist, that is, the Component is instantiated indirectly, through the instantiation of its realizing Classifiers or parts."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-isIndirectlyInstantiated"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Component-isIndirectlyInstantiated-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Component-packagedElement",
                    "name": "packagedElement",
                    "aggregation": "composite",
                    "type": "PackageableElement",
                    "association": "A_packagedElement_component"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-packagedElement-_ownedComment.0",
                      "body": "The set of PackageableElements that a Component owns. In the namespace of a Component, all model elements that are involved in or related to its definition may be owned or imported explicitly. These may include e.g., Classes, Interfaces, Components, Packages, UseCases, Dependencies (e.g., mappings), and Artifacts."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-packagedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Component-packagedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Component-packagedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Component-provided",
                    "name": "provided",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Interface",
                    "association": "A_provided_component"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-provided-_ownedComment.0",
                      "body": "The Interfaces that the Component exposes to its environment. These Interfaces may be Realized by the Component or any of its realizingClassifiers, or they may be the Interfaces that are provided by its public Ports."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-provided"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Component-provided-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Component-provided-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Component-realization",
                    "name": "realization",
                    "aggregation": "composite",
                    "type": "ComponentRealization",
                    "association": "A_realization_abstraction_component"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-realization-_ownedComment.0",
                      "body": "The set of Realizations owned by the Component. Realizations reference the Classifiers of which the Component is an abstraction; i.e., that realize its behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-realization"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Component-realization-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Component-realization-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Component-required",
                    "name": "required",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Interface",
                    "association": "A_required_component"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-required-_ownedComment.0",
                      "body": "The Interfaces that the Component requires from other Components in its environment in order to be able to offer its full set of provided functionality. These Interfaces may be used by the Component or any of its realizingClassifiers, or they may be the Interfaces that are required by its public Ports."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-required"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Component-required-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Component-required-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Component-provided.1",
                    "name": "provided",
                    "isQuery": true,
                    "bodyCondition": "Component-provided.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-provided.1-_ownedComment.0",
                      "body": "Derivation for Component::/provided"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-provided.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Component-provided.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Component-provided.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Component-provided"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Component-provided.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (let \tris : Set(Interface) = allRealizedInterfaces(),\n        realizingClassifiers : Set(Classifier) =  self.realization.realizingClassifier->union(self.allParents()->collect(realization.realizingClassifier))->asSet(),\n        allRealizingClassifiers : Set(Classifier) = realizingClassifiers->union(realizingClassifiers.allParents())->asSet(),\n        realizingClassifierInterfaces : Set(Interface) = allRealizingClassifiers->iterate(c; rci : Set(Interface) = Set{} | rci->union(c.allRealizedInterfaces())),\n        ports : Set(Port) = self.ownedPort->union(allParents()->collect(ownedPort))->asSet(),\n        providedByPorts : Set(Interface) = ports.provided->asSet()\nin     ris->union(realizingClassifierInterfaces) ->union(providedByPorts)->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Component-provided.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Component-provided.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Component-provided.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Component-required.1",
                    "name": "required",
                    "isQuery": true,
                    "bodyCondition": "Component-required.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Component-required.1-_ownedComment.0",
                      "body": "Derivation for Component::/required"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Component-required.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Component-required.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Component-required.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Component-required"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Component-required.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (let \tuis : Set(Interface) = allUsedInterfaces(),\n        realizingClassifiers : Set(Classifier) = self.realization.realizingClassifier->union(self.allParents()->collect(realization.realizingClassifier))->asSet(),\n        allRealizingClassifiers : Set(Classifier) = realizingClassifiers->union(realizingClassifiers.allParents())->asSet(),\n        realizingClassifierInterfaces : Set(Interface) = allRealizingClassifiers->iterate(c; rci : Set(Interface) = Set{} | rci->union(c.allUsedInterfaces())),\n        ports : Set(Port) = self.ownedPort->union(allParents()->collect(ownedPort))->asSet(),\n        usedByPorts : Set(Interface) = ports.required->asSet()\nin\t    uis->union(realizingClassifierInterfaces)->union(usedByPorts)->asSet()\n)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Component-required.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Component-required.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Component-required.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ComponentRealization",
                "name": "ComponentRealization"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ComponentRealization-_ownedComment.0",
                  "body": "Realization is specialized to (optionally) define the Classifiers that realize the contract offered by a Component in terms of its provided and required Interfaces. The Component forms an abstraction from these various Classifiers."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ComponentRealization"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ComponentRealization-_generalization.0",
                  "general": "Realization"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ComponentRealization-abstraction",
                    "name": "abstraction",
                    "type": "Component",
                    "association": "A_realization_abstraction_component"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Dependency-supplier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ComponentRealization-abstraction-_ownedComment.0",
                      "body": "The Component that owns this ComponentRealization and which is implemented by its realizing Classifiers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ComponentRealization-abstraction"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ComponentRealization-abstraction-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ComponentRealization-realizingClassifier",
                    "name": "realizingClassifier",
                    "type": "Classifier",
                    "association": "A_realizingClassifier_componentRealization"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Dependency-client"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ComponentRealization-realizingClassifier-_ownedComment.0",
                      "body": "The Classifiers that are involved in the implementation of the Component that owns this Realization."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ComponentRealization-realizingClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ComponentRealization-realizingClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConnectableElement",
                "name": "ConnectableElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConnectableElement-_ownedComment.0",
                  "body": "ConnectableElement is an abstract metaclass representing a set of instances that play roles of a StructuredClassifier. ConnectableElements may be joined by attached Connectors and specify configurations of linked instances to be created within an instance of the containing StructuredClassifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConnectableElement"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ConnectableElement-_generalization.1",
                    "general": "TypedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "ConnectableElement-_generalization.0",
                    "general": "ParameterableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectableElement-end",
                    "name": "end",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "ConnectorEnd",
                    "association": "A_end_role"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectableElement-end-_ownedComment.0",
                      "body": "A set of ConnectorEnds that attach to this ConnectableElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectableElement-end"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectableElement-end-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConnectableElement-end-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectableElement-templateParameter",
                    "name": "templateParameter",
                    "type": "ConnectableElementTemplateParameter",
                    "association": "A_connectableElement_templateParameter_parameteredElement"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "ParameterableElement-templateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectableElement-templateParameter-_ownedComment.0",
                      "body": "The ConnectableElementTemplateParameter for this ConnectableElement parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectableElement-templateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectableElement-templateParameter-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ConnectableElement-end.1",
                  "name": "end",
                  "isQuery": true,
                  "bodyCondition": "ConnectableElement-end.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConnectableElement-end.1-_ownedComment.0",
                    "body": "Derivation for ConnectableElement::/end : ConnectorEnd"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectableElement-end.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectableElement-end.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "ConnectableElement-end.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ConnectableElement-end"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectableElement-end.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (ConnectorEnd.allInstances()->select(role = self))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ConnectableElement-end.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "ConnectorEnd"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectableElement-end.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConnectableElement-end.1-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConnectableElementTemplateParameter",
                "name": "ConnectableElementTemplateParameter"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConnectableElementTemplateParameter-_ownedComment.0",
                  "body": "A ConnectableElementTemplateParameter exposes a ConnectableElement as a formal parameter for a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConnectableElementTemplateParameter"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ConnectableElementTemplateParameter-_generalization.0",
                  "general": "TemplateParameter"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ConnectableElementTemplateParameter-parameteredElement",
                  "name": "parameteredElement",
                  "type": "ConnectableElement",
                  "association": "A_connectableElement_templateParameter_parameteredElement"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConnectableElementTemplateParameter-parameteredElement-_ownedComment.0",
                    "body": "The ConnectableElement for this ConnectableElementTemplateParameter."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectableElementTemplateParameter-parameteredElement"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Connector",
                "name": "Connector"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Connector-_ownedComment.0",
                  "body": "A Connector specifies links that enables communication between two or more instances. In contrast to Associations, which specify links between any instance of the associated Classifiers, Connectors specify links between instances playing the connected parts only."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Connector"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Connector-types",
                    "name": "types"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Connector"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-types-_ownedComment.0",
                      "body": "The types of the ConnectableElements that the ends of a Connector are attached to must conform to the types of the ends of the Association that types the Connector, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-types"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Connector-types-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "type<>null implies \n  let noOfEnds : Integer = end->size() in \n  (type.memberEnd->size() = noOfEnds) and Sequence{1..noOfEnds}->forAll(i | end->at(i).role.type.conformsTo(type.memberEnd->at(i).type))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Connector-roles",
                    "name": "roles"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Connector"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-roles-_ownedComment.0",
                      "body": "The ConnectableElements attached as roles to each ConnectorEnd owned by a Connector must be owned or inherited roles of the Classifier that owned the Connector, or they must be Ports of such roles."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-roles"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Connector-roles-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "structuredClassifier <> null\nand\n  end->forAll( e | structuredClassifier.allRoles()->includes(e.role)\nor\n  e.role.oclIsKindOf(Port) and structuredClassifier.allRoles()->includes(e.partWithPort))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Connector-_generalization.0",
                  "general": "Feature"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Connector-contract",
                    "name": "contract",
                    "type": "Behavior",
                    "association": "A_contract_connector"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-contract-_ownedComment.0",
                      "body": "The set of Behaviors that specify the valid interaction patterns across the Connector."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-contract"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Connector-contract-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Connector-contract-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Connector-end",
                    "name": "end",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "ConnectorEnd",
                    "association": "A_end_connector"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-end-_ownedComment.0",
                      "body": "A Connector has at least two ConnectorEnds, each representing the participation of instances of the Classifiers typing the ConnectableElements attached to the end. The set of ConnectorEnds is ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-end"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Connector-end-_lowerValue",
                      "value": 2
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Connector-end-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Connector-kind",
                    "name": "kind",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "ConnectorKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-kind-_ownedComment.0",
                      "body": "Indicates the kind of Connector. This is derived: a Connector with one or more ends connected to a Port which is not on a Part and which is not a behavior port is a delegation; otherwise it is an assembly."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-kind"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Connector-redefinedConnector",
                    "name": "redefinedConnector",
                    "type": "Connector",
                    "association": "A_redefinedConnector_connector"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-redefinedConnector-_ownedComment.0",
                      "body": "A Connector may be redefined when its containing Classifier is specialized. The redefining Connector may have a type that specializes the type of the redefined Connector. The types of the ConnectorEnds of the redefining Connector may specialize the types of the ConnectorEnds of the redefined Connector. The properties of the ConnectorEnds of the redefining Connector may be replaced."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-redefinedConnector"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Connector-redefinedConnector-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Connector-redefinedConnector-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Connector-type",
                    "name": "type",
                    "type": "Association",
                    "association": "A_type_connector"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Connector-type-_ownedComment.0",
                      "body": "An optional Association that classifies links corresponding to this Connector."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Connector-type"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Connector-type-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Connector-kind.1",
                  "name": "kind",
                  "isQuery": true,
                  "bodyCondition": "Connector-kind.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Connector-kind.1-_ownedComment.0",
                    "body": "Derivation for Connector::/kind : ConnectorKind"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Connector-kind.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Connector-kind.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "Connector-kind.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Connector-kind"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Connector-kind.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if end->exists(\n\t\trole.oclIsKindOf(Port) \n\t\tand partWithPort->isEmpty()\n\t\tand not role.oclAsType(Port).isBehavior)\nthen ConnectorKind::delegation \nelse ConnectorKind::assembly \nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "Connector-kind.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "ConnectorKind"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConnectorEnd",
                "name": "ConnectorEnd"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConnectorEnd-_ownedComment.0",
                  "body": "A ConnectorEnd is an endpoint of a Connector, which attaches the Connector to a ConnectableElement."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConnectorEnd"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectorEnd-role_and_part_with_port",
                    "name": "role_and_part_with_port"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectorEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-role_and_part_with_port-_ownedComment.0",
                      "body": "If a ConnectorEnd references a partWithPort, then the role must be a Port that is defined or inherited by the type of the partWithPort."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-role_and_part_with_port"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectorEnd-role_and_part_with_port-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "partWithPort->notEmpty() implies \n  (role.oclIsKindOf(Port) and partWithPort.type.oclAsType(Namespace).member->includes(role))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectorEnd-part_with_port_empty",
                    "name": "part_with_port_empty"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectorEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-part_with_port_empty-_ownedComment.0",
                      "body": "If a ConnectorEnd is attached to a Port of the containing Classifier, partWithPort will be empty."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-part_with_port_empty"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectorEnd-part_with_port_empty-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(role.oclIsKindOf(Port) and role.owner = connector.owner) implies partWithPort->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectorEnd-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectorEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the ConnectorEnd may not be more general than the multiplicity of the corresponding end of the Association typing the owning Connector, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectorEnd-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.compatibleWith(definingEnd)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectorEnd-self_part_with_port",
                    "name": "self_part_with_port"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectorEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-self_part_with_port-_ownedComment.0",
                      "body": "The Property held in self.partWithPort must not be a Port."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-self_part_with_port"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectorEnd-self_part_with_port-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "partWithPort->notEmpty() implies not partWithPort.oclIsKindOf(Port)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ConnectorEnd-_generalization.0",
                  "general": "MultiplicityElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectorEnd-definingEnd",
                    "name": "definingEnd",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Property",
                    "association": "A_definingEnd_connectorEnd"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-definingEnd-_ownedComment.0",
                      "body": "A derived property referencing the corresponding end on the Association which types the Connector owing this ConnectorEnd, if any. It is derived by selecting the end at the same place in the ordering of Association ends as this ConnectorEnd."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-definingEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectorEnd-definingEnd-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectorEnd-partWithPort",
                    "name": "partWithPort",
                    "type": "Property",
                    "association": "A_partWithPort_connectorEnd"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-partWithPort-_ownedComment.0",
                      "body": "Indicates the role of the internal structure of a Classifier with the Port to which the ConnectorEnd is attached."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-partWithPort"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectorEnd-partWithPort-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectorEnd-role",
                    "name": "role",
                    "type": "ConnectableElement",
                    "association": "A_end_role"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorEnd-role-_ownedComment.0",
                      "body": "The ConnectableElement attached at this ConnectorEnd. When an instance of the containing Classifier is created, a link may (depending on the multiplicities) be created to an instance of the Classifier that types this ConnectableElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-role"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ConnectorEnd-definingEnd.1",
                  "name": "definingEnd",
                  "isQuery": true,
                  "bodyCondition": "ConnectorEnd-definingEnd.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConnectorEnd-definingEnd.1-_ownedComment.0",
                    "body": "Derivation for ConnectorEnd::/definingEnd : Property"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectorEnd-definingEnd.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectorEnd-definingEnd.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-definingEnd.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ConnectorEnd-definingEnd"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectorEnd-definingEnd.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if connector.type = null \nthen\n  null \nelse\n  let index : Integer = connector.end->indexOf(self) in\n    connector.type.memberEnd->at(index)\nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ConnectorEnd-definingEnd.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Property"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectorEnd-definingEnd.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "EncapsulatedClassifier",
                "name": "EncapsulatedClassifier",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "EncapsulatedClassifier-_ownedComment.0",
                  "body": "An EncapsulatedClassifier may own Ports to specify typed interaction points."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "EncapsulatedClassifier"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "EncapsulatedClassifier-_generalization.0",
                  "general": "StructuredClassifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "EncapsulatedClassifier-ownedPort",
                  "name": "ownedPort",
                  "isReadOnly": true,
                  "aggregation": "composite",
                  "isDerived": true,
                  "type": "Port",
                  "association": "A_ownedPort_encapsulatedClassifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-ownedAttribute"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "EncapsulatedClassifier-ownedPort-_ownedComment.0",
                    "body": "The Ports owned by the EncapsulatedClassifier."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "EncapsulatedClassifier-ownedPort"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "EncapsulatedClassifier-ownedPort-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "EncapsulatedClassifier-ownedPort-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "EncapsulatedClassifier-ownedPort.1",
                  "name": "ownedPort",
                  "isQuery": true,
                  "bodyCondition": "EncapsulatedClassifier-ownedPort.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "EncapsulatedClassifier-ownedPort.1-_ownedComment.0",
                    "body": "Derivation for EncapsulatedClassifier::/ownedPort : Port"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "EncapsulatedClassifier-ownedPort.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "EncapsulatedClassifier-ownedPort.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "EncapsulatedClassifier-ownedPort.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "EncapsulatedClassifier-ownedPort"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "EncapsulatedClassifier-ownedPort.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (ownedAttribute->select(oclIsKindOf(Port))->collect(oclAsType(Port))->asOrderedSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "EncapsulatedClassifier-ownedPort.1-result",
                    "isOrdered": true,
                    "name": "result",
                    "direction": "return",
                    "type": "Port"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "EncapsulatedClassifier-ownedPort.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "EncapsulatedClassifier-ownedPort.1-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Port",
                "name": "Port"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Port-_ownedComment.0",
                  "body": "A Port is a property of an EncapsulatedClassifier that specifies a distinct interaction point between that EncapsulatedClassifier and its environment or between the (behavior of the) EncapsulatedClassifier and its internal parts. Ports are connected to Properties of the EncapsulatedClassifier by Connectors through which requests can be made to invoke BehavioralFeatures. A Port may specify the services an EncapsulatedClassifier provides (offers) to its environment as well as the services that an EncapsulatedClassifier expects (requires) of its environment.  A Port may have an associated ProtocolStateMachine."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Port"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Port-port_aggregation",
                    "name": "port_aggregation"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Port"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-port_aggregation-_ownedComment.0",
                      "body": "Port.aggregation must be composite."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-port_aggregation"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Port-port_aggregation-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "aggregation = AggregationKind::composite"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Port-default_value",
                    "name": "default_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Port"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-default_value-_ownedComment.0",
                      "body": "A defaultValue for port cannot be specified when the type of the Port is an Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-default_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Port-default_value-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "type.oclIsKindOf(Interface) implies defaultValue->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Port-encapsulated_owner",
                    "name": "encapsulated_owner"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Port"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-encapsulated_owner-_ownedComment.0",
                      "body": "All Ports are owned by an EncapsulatedClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-encapsulated_owner"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Port-encapsulated_owner-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "owner = encapsulatedClassifier"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Port-_generalization.0",
                  "general": "Property"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-isBehavior",
                    "name": "isBehavior"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-isBehavior-_ownedComment.0",
                      "body": "Specifies whether requests arriving at this Port are sent to the classifier behavior of this EncapsulatedClassifier. Such a Port is referred to as a behavior Port. Any invocation of a BehavioralFeature targeted at a behavior Port will be handled by the instance of the owning EncapsulatedClassifier itself, rather than by any instances that it may contain."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-isBehavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Port-isBehavior-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-isConjugated",
                    "name": "isConjugated"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-isConjugated-_ownedComment.0",
                      "body": "Specifies the way that the provided and required Interfaces are derived from the Port’s Type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-isConjugated"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Port-isConjugated-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-isService",
                    "name": "isService"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-isService-_ownedComment.0",
                      "body": "If true, indicates that this Port is used to provide the published functionality of an EncapsulatedClassifier.  If false, this Port is used to implement the EncapsulatedClassifier but is not part of the essential externally-visible functionality of the EncapsulatedClassifier and can, therefore, be altered or deleted along with the internal implementation of the EncapsulatedClassifier and other properties that are considered part of its implementation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-isService"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Port-isService-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-protocol",
                    "name": "protocol",
                    "type": "ProtocolStateMachine",
                    "association": "A_protocol_port"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-protocol-_ownedComment.0",
                      "body": "An optional ProtocolStateMachine which describes valid interactions at this interaction point."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-protocol"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Port-protocol-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-provided",
                    "name": "provided",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Interface",
                    "association": "A_provided_port"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-provided-_ownedComment.0",
                      "body": "The Interfaces specifying the set of Operations and Receptions that the EncapsulatedCclassifier offers to its environment via this Port, and which it will handle either directly or by forwarding it to a part of its internal structure. This association is derived according to the value of isConjugated. If isConjugated is false, provided is derived as the union of the sets of Interfaces realized by the type of the port and its supertypes, or directly from the type of the Port if the Port is typed by an Interface. If isConjugated is true, it is derived as the union of the sets of Interfaces used by the type of the Port and its supertypes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-provided"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Port-provided-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Port-provided-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-redefinedPort",
                    "name": "redefinedPort",
                    "type": "Port",
                    "association": "A_redefinedPort_port"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Property-redefinedProperty"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-redefinedPort-_ownedComment.0",
                      "body": "A Port may be redefined when its containing EncapsulatedClassifier is specialized. The redefining Port may have additional Interfaces to those that are associated with the redefined Port or it may replace an Interface by one of its subtypes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-redefinedPort"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Port-redefinedPort-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Port-redefinedPort-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Port-required",
                    "name": "required",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Interface",
                    "association": "A_required_port"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-required-_ownedComment.0",
                      "body": "The Interfaces specifying the set of Operations and Receptions that the EncapsulatedCassifier expects its environment to handle via this port. This association is derived according to the value of isConjugated. If isConjugated is false, required is derived as the union of the sets of Interfaces used by the type of the Port and its supertypes. If isConjugated is true, it is derived as the union of the sets of Interfaces realized by the type of the Port and its supertypes, or directly from the type of the Port if the Port is typed by an Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-required"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Port-required-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Port-required-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Port-provided.1",
                    "name": "provided",
                    "isQuery": true,
                    "bodyCondition": "Port-provided.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-provided.1-_ownedComment.0",
                      "body": "Derivation for Port::/provided"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-provided.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Port-provided.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Port-provided.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Port-provided"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Port-provided.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if isConjugated then basicRequired() else basicProvided() endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Port-provided.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Port-provided.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Port-provided.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Port-required.1",
                    "name": "required",
                    "isQuery": true,
                    "bodyCondition": "Port-required.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-required.1-_ownedComment.0",
                      "body": "Derivation for Port::/required"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-required.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Port-required.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Port-required.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Port-required"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Port-required.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if isConjugated then basicProvided() else basicRequired() endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Port-required.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Port-required.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Port-required.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Port-basicProvided",
                    "name": "basicProvided",
                    "isQuery": true,
                    "bodyCondition": "Port-basicProvided-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-basicProvided-_ownedComment.0",
                      "body": "The union of the sets of Interfaces realized by the type of the Port and its supertypes, or directly the type of the Port if the Port is typed by an Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-basicProvided"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Port-basicProvided-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-basicProvided"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Port-basicProvided-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if type.oclIsKindOf(Interface) \nthen type.oclAsType(Interface)->asSet() \nelse type.oclAsType(Classifier).allRealizedInterfaces() \nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Port-basicProvided-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Port-basicProvided-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Port-basicProvided-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Port-basicRequired",
                    "name": "basicRequired",
                    "isQuery": true,
                    "bodyCondition": "Port-basicRequired-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Port-basicRequired-_ownedComment.0",
                      "body": "The union of the sets of Interfaces used by the type of the Port and its supertypes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-basicRequired"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Port-basicRequired-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Port-basicRequired"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Port-basicRequired-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ( type.oclAsType(Classifier).allUsedInterfaces() )"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Port-basicRequired-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Port-basicRequired-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Port-basicRequired-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StructuredClassifier",
                "name": "StructuredClassifier",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StructuredClassifier-_ownedComment.0",
                  "body": "StructuredClassifiers may contain an internal structure of connected elements each of which plays a role in the overall Behavior modeled by the StructuredClassifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StructuredClassifier-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredClassifier-ownedAttribute",
                    "name": "ownedAttribute",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedAttribute_structuredClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-role"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-ownedAttribute-_ownedComment.0",
                      "body": "The Properties owned by the StructuredClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-ownedAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredClassifier-ownedAttribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredClassifier-ownedAttribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredClassifier-ownedConnector",
                    "name": "ownedConnector",
                    "aggregation": "composite",
                    "type": "Connector",
                    "association": "A_ownedConnector_structuredClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-ownedConnector-_ownedComment.0",
                      "body": "The connectors owned by the StructuredClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-ownedConnector"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredClassifier-ownedConnector-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredClassifier-ownedConnector-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredClassifier-part",
                    "name": "part",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Property",
                    "association": "A_part_structuredClassifier"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-part-_ownedComment.0",
                      "body": "The Properties specifying instances that the StructuredClassifier owns by composition. This collection is derived, selecting those owned Properties where isComposite is true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-part"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredClassifier-part-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredClassifier-part-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredClassifier-role",
                    "name": "role",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "ConnectableElement",
                    "association": "A_role_structuredClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-member"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-role-_ownedComment.0",
                      "body": "The roles that instances may play in this StructuredClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-role"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredClassifier-role-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredClassifier-role-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredClassifier-part.1",
                    "name": "part",
                    "isQuery": true,
                    "bodyCondition": "StructuredClassifier-part.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-part.1-_ownedComment.0",
                      "body": "Derivation for StructuredClassifier::/part"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-part.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredClassifier-part.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "StructuredClassifier-part.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "StructuredClassifier-part"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredClassifier-part.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedAttribute->select(isComposite))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredClassifier-part.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Property"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredClassifier-part.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredClassifier-part.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredClassifier-allRoles",
                    "name": "allRoles",
                    "isQuery": true,
                    "bodyCondition": "StructuredClassifier-allRoles-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredClassifier-allRoles-_ownedComment.0",
                      "body": "All features of type ConnectableElement, equivalent to all direct and inherited roles."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-allRoles"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredClassifier-allRoles-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredClassifier-allRoles"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredClassifier-allRoles-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (allFeatures()->select(oclIsKindOf(ConnectableElement))->collect(oclAsType(ConnectableElement))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredClassifier-allRoles-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ConnectableElement"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredClassifier-allRoles-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredClassifier-allRoles-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "ConnectorKind",
                "name": "ConnectorKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConnectorKind-_ownedComment.0",
                  "body": "ConnectorKind is an enumeration that defines whether a Connector is an assembly or a delegation."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConnectorKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ConnectorKind-assembly",
                    "name": "assembly"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorKind-assembly-_ownedComment.0",
                      "body": "Indicates that the Connector is an assembly Connector."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorKind-assembly"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ConnectorKind-delegation",
                    "name": "delegation"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectorKind-delegation-_ownedComment.0",
                      "body": "Indicates that the Connector is a delegation Connector."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectorKind-delegation"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_part_structuredClassifier",
                "name": "A_part_structuredClassifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-part"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_part_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_part_structuredClassifier-structuredClassifier",
                  "name": "structuredClassifier",
                  "type": "StructuredClassifier",
                  "association": "A_part_structuredClassifier"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_part_structuredClassifier-structuredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedConnector_structuredClassifier",
                "name": "A_ownedConnector_structuredClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-ownedConnector"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedConnector_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedConnector_structuredClassifier-structuredClassifier",
                  "name": "structuredClassifier",
                  "type": "StructuredClassifier",
                  "association": "A_ownedConnector_structuredClassifier"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Feature-featuringClassifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedConnector_structuredClassifier-structuredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_structuredClassifier",
                "name": "A_ownedAttribute_structuredClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedAttribute_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_ownedAttribute_structuredClassifier-_generalization.0",
                  "general": "A_role_structuredClassifier"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedAttribute_structuredClassifier-structuredClassifier",
                  "name": "structuredClassifier",
                  "type": "StructuredClassifier",
                  "association": "A_ownedAttribute_structuredClassifier"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_role_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                },
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "A_attribute_classifier-classifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedAttribute_structuredClassifier-structuredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_role_structuredClassifier",
                "name": "A_role_structuredClassifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredClassifier-role"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_role_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_role_structuredClassifier-structuredClassifier",
                  "name": "structuredClassifier",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "StructuredClassifier",
                  "association": "A_role_structuredClassifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_member_memberNamespace-memberNamespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_role_structuredClassifier-structuredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_role_structuredClassifier-structuredClassifier-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_protocol_port",
                "name": "A_protocol_port"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Port-protocol"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_protocol_port-port"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_protocol_port-port",
                  "name": "port",
                  "type": "Port",
                  "association": "A_protocol_port"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_protocol_port-port-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_protocol_port-port-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_required_port",
                "name": "A_required_port",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Port-required"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_required_port-port"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_required_port-port",
                  "name": "port",
                  "type": "Port",
                  "association": "A_required_port"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_required_port-port-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_required_port-port-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedPort_port",
                "name": "A_redefinedPort_port"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Port-redefinedPort"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedPort_port-port"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedPort_port-port",
                  "name": "port",
                  "type": "Port",
                  "association": "A_redefinedPort_port"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedProperty_property-property"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedPort_port-port-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedPort_port-port-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_provided_port",
                "name": "A_provided_port",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Port-provided"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_provided_port-port"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_provided_port-port",
                  "name": "port",
                  "type": "Port",
                  "association": "A_provided_port"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_provided_port-port-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_provided_port-port-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedPort_encapsulatedClassifier",
                "name": "A_ownedPort_encapsulatedClassifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "EncapsulatedClassifier-ownedPort"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedPort_encapsulatedClassifier-encapsulatedClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedPort_encapsulatedClassifier-encapsulatedClassifier",
                  "name": "encapsulatedClassifier",
                  "type": "EncapsulatedClassifier",
                  "association": "A_ownedPort_encapsulatedClassifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_ownedAttribute_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedPort_encapsulatedClassifier-encapsulatedClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_partWithPort_connectorEnd",
                "name": "A_partWithPort_connectorEnd"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectorEnd-partWithPort"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_partWithPort_connectorEnd-connectorEnd"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_partWithPort_connectorEnd-connectorEnd",
                  "name": "connectorEnd",
                  "type": "ConnectorEnd",
                  "association": "A_partWithPort_connectorEnd"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_partWithPort_connectorEnd-connectorEnd-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_partWithPort_connectorEnd-connectorEnd-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_definingEnd_connectorEnd",
                "name": "A_definingEnd_connectorEnd",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectorEnd-definingEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_definingEnd_connectorEnd-connectorEnd"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_definingEnd_connectorEnd-connectorEnd",
                  "name": "connectorEnd",
                  "type": "ConnectorEnd",
                  "association": "A_definingEnd_connectorEnd"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_definingEnd_connectorEnd-connectorEnd-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_definingEnd_connectorEnd-connectorEnd-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_end_connector",
                "name": "A_end_connector"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Connector-end"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_end_connector-connector"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_end_connector-connector",
                  "name": "connector",
                  "type": "Connector",
                  "association": "A_end_connector"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedConnector_connector",
                "name": "A_redefinedConnector_connector"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Connector-redefinedConnector"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedConnector_connector-connector"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedConnector_connector-connector",
                  "name": "connector",
                  "type": "Connector",
                  "association": "A_redefinedConnector_connector"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedConnector_connector-connector-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedConnector_connector-connector-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_contract_connector",
                "name": "A_contract_connector"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Connector-contract"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_contract_connector-connector"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_contract_connector-connector",
                  "name": "connector",
                  "type": "Connector",
                  "association": "A_contract_connector"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_contract_connector-connector-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_contract_connector-connector-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_type_connector",
                "name": "A_type_connector"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Connector-type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_type_connector-connector"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_type_connector-connector",
                  "name": "connector",
                  "type": "Connector",
                  "association": "A_type_connector"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_type_connector-connector-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_type_connector-connector-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_connectableElement_templateParameter_parameteredElement",
                "name": "A_connectableElement_templateParameter_parameteredElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectableElement-templateParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ConnectableElementTemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_end_role",
                "name": "A_end_role"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectableElement-end"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ConnectorEnd-role"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realizingClassifier_componentRealization",
                "name": "A_realizingClassifier_componentRealization"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ComponentRealization-realizingClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_realizingClassifier_componentRealization-componentRealization"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_realizingClassifier_componentRealization-componentRealization",
                  "name": "componentRealization",
                  "type": "ComponentRealization",
                  "association": "A_realizingClassifier_componentRealization"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-clientDependency"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_realizingClassifier_componentRealization-componentRealization-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_realizingClassifier_componentRealization-componentRealization-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_required_component",
                "name": "A_required_component",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Component-required"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_required_component-component"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_required_component-component",
                  "name": "component",
                  "type": "Component",
                  "association": "A_required_component"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_required_component-component-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_required_component-component-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_packagedElement_component",
                "name": "A_packagedElement_component"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Component-packagedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_packagedElement_component-component"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_packagedElement_component-component",
                  "name": "component",
                  "type": "Component",
                  "association": "A_packagedElement_component"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_packagedElement_component-component-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realization_abstraction_component",
                "name": "A_realization_abstraction_component"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Component-realization"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ComponentRealization-abstraction"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_provided_component",
                "name": "A_provided_component",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Component-provided"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_provided_component-component"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_provided_component-component",
                  "name": "component",
                  "type": "Component",
                  "association": "A_provided_component"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_provided_component-component-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_provided_component-component-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_type_collaborationUse",
                "name": "A_type_collaborationUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CollaborationUse-type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_type_collaborationUse-collaborationUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_type_collaborationUse-collaborationUse",
                  "name": "collaborationUse",
                  "type": "CollaborationUse",
                  "association": "A_type_collaborationUse"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_type_collaborationUse-collaborationUse-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_type_collaborationUse-collaborationUse-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_roleBinding_collaborationUse",
                "name": "A_roleBinding_collaborationUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CollaborationUse-roleBinding"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_roleBinding_collaborationUse-collaborationUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_roleBinding_collaborationUse-collaborationUse",
                  "name": "collaborationUse",
                  "type": "CollaborationUse",
                  "association": "A_roleBinding_collaborationUse"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_roleBinding_collaborationUse-collaborationUse-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_collaborationRole_collaboration",
                "name": "A_collaborationRole_collaboration"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Collaboration-collaborationRole"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_collaborationRole_collaboration-collaboration"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_collaborationRole_collaboration-collaboration",
                  "name": "collaboration",
                  "type": "Collaboration",
                  "association": "A_collaborationRole_collaboration"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_role_structuredClassifier-structuredClassifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_collaborationRole_collaboration-collaboration-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_collaborationRole_collaboration-collaboration-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedOperation_class",
                "name": "A_ownedOperation_class"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-ownedOperation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Operation-class"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_superClass_class",
                "name": "A_superClass_class",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-superClass"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_superClass_class-class"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_superClass_class-class",
                  "name": "class",
                  "type": "Class",
                  "association": "A_superClass_class"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_general_classifier-classifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_superClass_class-class-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_superClass_class-class-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extension_metaclass",
                "name": "A_extension_metaclass",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-extension"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Extension-metaclass"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_class",
                "name": "A_ownedAttribute_class"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-class"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nestedClassifier_nestingClass",
                "name": "A_nestedClassifier_nestingClass"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-nestedClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_nestedClassifier_nestingClass-nestingClass"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_nestedClassifier_nestingClass-nestingClass",
                  "name": "nestingClass",
                  "type": "Class",
                  "association": "A_nestedClassifier_nestingClass"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_nestedClassifier_nestingClass-nestingClass-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedReception_class",
                "name": "A_ownedReception_class"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Class-ownedReception"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedReception_class-class"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedReception_class-class",
                  "name": "class",
                  "type": "Class",
                  "association": "A_ownedReception_class"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Feature-featuringClassifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedReception_class-class-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_memberEnd_association",
                "name": "A_memberEnd_association"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Association-memberEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-association"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_endType_association",
                "name": "A_endType_association",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Association-endType"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_endType_association-association"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_endType_association-association",
                  "name": "association",
                  "type": "Association",
                  "association": "A_endType_association"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_relatedElement_relationship-relationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_endType_association-association-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_endType_association-association-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedEnd_owningAssociation",
                "name": "A_ownedEnd_owningAssociation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Association-ownedEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-owningAssociation"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_navigableOwnedEnd_association",
                "name": "A_navigableOwnedEnd_association"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Association-navigableOwnedEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_navigableOwnedEnd_association-association"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_navigableOwnedEnd_association-association",
                  "name": "association",
                  "type": "Association",
                  "association": "A_navigableOwnedEnd_association"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Property-owningAssociation"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_navigableOwnedEnd_association-association-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "StateMachines",
            "name": "StateMachines"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StateMachines-_packageImport.0",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StateMachines-_packageImport.1",
                "importedPackage": "SimpleClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "StateMachines-_packageImport.2",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConnectionPointReference",
                "name": "ConnectionPointReference"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConnectionPointReference-_ownedComment.0",
                  "body": "A ConnectionPointReference represents a usage (as part of a submachine State) of an entry/exit point Pseudostate defined in the StateMachine referenced by the submachine State."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConnectionPointReference"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectionPointReference-exit_pseudostates",
                    "name": "exit_pseudostates"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectionPointReference"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectionPointReference-exit_pseudostates-_ownedComment.0",
                      "body": "The exit Pseudostates must be Pseudostates with kind exitPoint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-exit_pseudostates"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectionPointReference-exit_pseudostates-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "exit->forAll(kind = PseudostateKind::exitPoint)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConnectionPointReference-entry_pseudostates",
                    "name": "entry_pseudostates"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectionPointReference"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectionPointReference-entry_pseudostates-_ownedComment.0",
                      "body": "The entry Pseudostates must be Pseudostates with kind entryPoint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-entry_pseudostates"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConnectionPointReference-entry_pseudostates-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "entry->forAll(kind = PseudostateKind::entryPoint)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ConnectionPointReference-_generalization.0",
                  "general": "Vertex"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectionPointReference-entry",
                    "name": "entry",
                    "type": "Pseudostate",
                    "association": "A_entry_connectionPointReference"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectionPointReference-entry-_ownedComment.0",
                      "body": "The entryPoint Pseudostates corresponding to this connection point."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-entry"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectionPointReference-entry-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConnectionPointReference-entry-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectionPointReference-exit",
                    "name": "exit",
                    "type": "Pseudostate",
                    "association": "A_exit_connectionPointReference"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectionPointReference-exit-_ownedComment.0",
                      "body": "The exitPoints kind Pseudostates corresponding to this connection point."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-exit"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectionPointReference-exit-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConnectionPointReference-exit-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConnectionPointReference-state",
                    "name": "state",
                    "type": "State",
                    "association": "A_connection_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConnectionPointReference-state-_ownedComment.0",
                      "body": "The State in which the ConnectionPointReference is defined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-state"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConnectionPointReference-state-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ConnectionPointReference-isConsistentWith",
                  "name": "isConsistentWith",
                  "visibility": "public",
                  "bodyCondition": "ConnectionPointReference-isConsistentWith-spec"
                },
                "_parent": "_",
                "precondition": {
                  "_attributes": {
                    "xmi:idref": "ConnectionPointReference-isConsistentWith-pre"
                  },
                  "_parent": "_"
                },
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-isConsistentWith"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConnectionPointReference-isConsistentWith-_ownedComment.0",
                    "body": "The query isConsistentWith() specifies a ConnectionPointReference can only be redefined by a ConnectionPointReference."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConnectionPointReference-isConsistentWith"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ConnectionPointReference-isConsistentWith-pre",
                      "name": "pre"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ConnectionPointReference-isConsistentWith-pre-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "redefiningElement.isRedefinitionContextValid(self)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ConnectionPointReference-isConsistentWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ConnectionPointReference-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ConnectionPointReference-isConsistentWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = redefiningElement.oclIsKindOf(ConnectionPointReference)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  }
                ],
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ConnectionPointReference-isConsistentWith-redefiningElement",
                      "name": "redefiningElement",
                      "visibility": "public",
                      "type": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ConnectionPointReference-isConsistentWith-result",
                      "name": "result",
                      "visibility": "public",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "FinalState",
                "name": "FinalState"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "FinalState-_ownedComment.0",
                  "body": "A special kind of State, which, when entered, signifies that the enclosing Region has completed. If the enclosing Region is directly contained in a StateMachine and all other Regions in that StateMachine also are completed, then it means that the entire StateMachine behavior is completed."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "FinalState"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-no_exit_behavior",
                    "name": "no_exit_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-no_exit_behavior-_ownedComment.0",
                      "body": "A FinalState has no exit Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-no_exit_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-no_exit_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "exit->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-no_outgoing_transitions",
                    "name": "no_outgoing_transitions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-no_outgoing_transitions-_ownedComment.0",
                      "body": "A FinalState cannot have any outgoing Transitions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-no_outgoing_transitions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-no_outgoing_transitions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "outgoing->size() = 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-no_regions",
                    "name": "no_regions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-no_regions-_ownedComment.0",
                      "body": "A FinalState cannot have Regions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-no_regions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-no_regions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "region->size() = 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-cannot_reference_submachine",
                    "name": "cannot_reference_submachine"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-cannot_reference_submachine-_ownedComment.0",
                      "body": "A FinalState cannot reference a submachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-cannot_reference_submachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-cannot_reference_submachine-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "submachine->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-no_entry_behavior",
                    "name": "no_entry_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-no_entry_behavior-_ownedComment.0",
                      "body": "A FinalState has no entry Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-no_entry_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-no_entry_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "entry->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FinalState-no_state_behavior",
                    "name": "no_state_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FinalState-no_state_behavior-_ownedComment.0",
                      "body": "A FinalState has no state (doActivity) Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-no_state_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FinalState-no_state_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "doActivity->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "FinalState-_generalization.0",
                  "general": "State"
                },
                "_parent": "_"
              },
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "FinalState-isConsistentWith",
                  "name": "isConsistentWith",
                  "visibility": "public",
                  "bodyCondition": "FinalState-isConsistentWith-spec"
                },
                "_parent": "_",
                "precondition": {
                  "_attributes": {
                    "xmi:idref": "FinalState-isConsistentWith-pre"
                  },
                  "_parent": "_"
                },
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-isConsistentWith"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "FinalState-isConsistentWith-_ownedComment.0",
                    "body": "The query isConsistentWith() specifies a FinalState can only be redefined by a FinalState."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "FinalState-isConsistentWith"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "FinalState-isConsistentWith-pre",
                      "name": "pre"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "FinalState-isConsistentWith-pre-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "redefiningElement.isRedefinitionContextValid(self)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "FinalState-isConsistentWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "FinalState-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "FinalState-isConsistentWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = redefiningElement.oclIsKindOf(FinalState)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  }
                ],
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "FinalState-isConsistentWith-redefiningElement",
                      "name": "redefiningElement",
                      "visibility": "public",
                      "type": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "FinalState-isConsistentWith-result",
                      "name": "result",
                      "visibility": "public",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ProtocolConformance",
                "name": "ProtocolConformance"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ProtocolConformance-_ownedComment.0",
                  "body": "A ProtocolStateMachine can be redefined into a more specific ProtocolStateMachine or into behavioral StateMachine. ProtocolConformance declares that the specific ProtocolStateMachine specifies a protocol that conforms to the general ProtocolStateMachine or that the specific behavioral StateMachine abides by the protocol of the general ProtocolStateMachine."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ProtocolConformance"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ProtocolConformance-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProtocolConformance-generalMachine",
                    "name": "generalMachine",
                    "type": "ProtocolStateMachine",
                    "association": "A_generalMachine_protocolConformance"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolConformance-generalMachine-_ownedComment.0",
                      "body": "Specifies the ProtocolStateMachine to which the specific ProtocolStateMachine conforms."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolConformance-generalMachine"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProtocolConformance-specificMachine",
                    "name": "specificMachine",
                    "type": "ProtocolStateMachine",
                    "association": "A_conformance_specificMachine"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolConformance-specificMachine-_ownedComment.0",
                      "body": "Specifies the ProtocolStateMachine which conforms to the general ProtocolStateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolConformance-specificMachine"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ProtocolStateMachine",
                "name": "ProtocolStateMachine"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ProtocolStateMachine-_ownedComment.0",
                  "body": "A ProtocolStateMachine is always defined in the context of a Classifier. It specifies which BehavioralFeatures of the Classifier can be called in which State and under which conditions, thus specifying the allowed invocation sequences on the Classifier's BehavioralFeatures. A ProtocolStateMachine specifies the possible and permitted Transitions on the instances of its context Classifier, together with the BehavioralFeatures that carry the Transitions. In this manner, an instance lifecycle can be specified for a Classifier, by defining the order in which the BehavioralFeatures can be activated and the States through which an instance progresses during its existence."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ProtocolStateMachine"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolStateMachine-classifier_context",
                    "name": "classifier_context"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolStateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolStateMachine-classifier_context-_ownedComment.0",
                      "body": "A ProtocolStateMachine must only have a Classifier context, not a BehavioralFeature context."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolStateMachine-classifier_context"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolStateMachine-classifier_context-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "_'context' <> null and specification = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolStateMachine-deep_or_shallow_history",
                    "name": "deep_or_shallow_history"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolStateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolStateMachine-deep_or_shallow_history-_ownedComment.0",
                      "body": "ProtocolStateMachines cannot have deep or shallow history Pseudostates."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolStateMachine-deep_or_shallow_history"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolStateMachine-deep_or_shallow_history-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "region->forAll (r | r.subvertex->forAll (v | v.oclIsKindOf(Pseudostate) implies\n((v.oclAsType(Pseudostate).kind <>  PseudostateKind::deepHistory) and (v.oclAsType(Pseudostate).kind <> PseudostateKind::shallowHistory))))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolStateMachine-entry_exit_do",
                    "name": "entry_exit_do"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolStateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolStateMachine-entry_exit_do-_ownedComment.0",
                      "body": "The states of a ProtocolStateMachine cannot have entry, exit, or do activity Behaviors."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolStateMachine-entry_exit_do"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolStateMachine-entry_exit_do-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "region->forAll(r | r.subvertex->forAll(v | v.oclIsKindOf(State) implies\n(v.oclAsType(State).entry->isEmpty() and v.oclAsType(State).exit->isEmpty() and v.oclAsType(State).doActivity->isEmpty())))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolStateMachine-protocol_transitions",
                    "name": "protocol_transitions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolStateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolStateMachine-protocol_transitions-_ownedComment.0",
                      "body": "All Transitions of a ProtocolStateMachine must be ProtocolTransitions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolStateMachine-protocol_transitions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolStateMachine-protocol_transitions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "region->forAll(r | r.transition->forAll(t | t.oclIsTypeOf(ProtocolTransition)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ProtocolStateMachine-_generalization.0",
                  "general": "StateMachine"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ProtocolStateMachine-conformance",
                  "name": "conformance",
                  "aggregation": "composite",
                  "type": "ProtocolConformance",
                  "association": "A_conformance_specificMachine"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "A_source_directedRelationship-directedRelationship"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  }
                ],
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ProtocolStateMachine-conformance-_ownedComment.0",
                    "body": "Conformance between ProtocolStateMachine "
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolStateMachine-conformance"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "ProtocolStateMachine-conformance-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "ProtocolStateMachine-conformance-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ProtocolTransition",
                "name": "ProtocolTransition"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ProtocolTransition-_ownedComment.0",
                  "body": "A ProtocolTransition specifies a legal Transition for an Operation. Transitions of ProtocolStateMachines have the following information: a pre-condition (guard), a Trigger, and a post-condition. Every ProtocolTransition is associated with at most one BehavioralFeature belonging to the context Classifier of the ProtocolStateMachine."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ProtocolTransition"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolTransition-refers_to_operation",
                    "name": "refers_to_operation"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolTransition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-refers_to_operation-_ownedComment.0",
                      "body": "If a ProtocolTransition refers to an Operation (i.e., has a CallEvent trigger corresponding to an Operation), then that Operation should apply to the context Classifier of the StateMachine of the ProtocolTransition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-refers_to_operation"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolTransition-refers_to_operation-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if (referred()->notEmpty() and containingStateMachine()._'context'->notEmpty()) then \n    containingStateMachine()._'context'.oclAsType(BehavioredClassifier).allFeatures()->includesAll(referred())\nelse true endif"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolTransition-associated_actions",
                    "name": "associated_actions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolTransition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-associated_actions-_ownedComment.0",
                      "body": "A ProtocolTransition never has associated Behaviors."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-associated_actions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolTransition-associated_actions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "effect = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolTransition-belongs_to_psm",
                    "name": "belongs_to_psm"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolTransition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-belongs_to_psm-_ownedComment.0",
                      "body": "A ProtocolTransition always belongs to a ProtocolStateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-belongs_to_psm"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolTransition-belongs_to_psm-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "container.belongsToPSM()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ProtocolTransition-_generalization.0",
                  "general": "Transition"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProtocolTransition-postCondition",
                    "name": "postCondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_postCondition_owningTransition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-postCondition-_ownedComment.0",
                      "body": "Specifies the post condition of the Transition which is the Condition that should be obtained once the Transition is triggered. This post condition is part of the post condition of the Operation connected to the Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-postCondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ProtocolTransition-postCondition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProtocolTransition-preCondition",
                    "name": "preCondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_preCondition_protocolTransition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Transition-guard"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-preCondition-_ownedComment.0",
                      "body": "Specifies the precondition of the Transition. It specifies the Condition that should be verified before triggering the Transition. This guard condition added to the source State will be evaluated as part of the precondition of the Operation referred by the Transition if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-preCondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ProtocolTransition-preCondition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProtocolTransition-referred",
                    "name": "referred",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Operation",
                    "association": "A_referred_protocolTransition"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProtocolTransition-referred-_ownedComment.0",
                      "body": "This association refers to the associated Operation. It is derived from the Operation of the CallEvent Trigger when applicable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-referred"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ProtocolTransition-referred-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ProtocolTransition-referred-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ProtocolTransition-referred.1",
                  "name": "referred",
                  "isQuery": true,
                  "bodyCondition": "ProtocolTransition-referred.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ProtocolTransition-referred.1-_ownedComment.0",
                    "body": "Derivation for ProtocolTransition::/referred"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ProtocolTransition-referred.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ProtocolTransition-referred.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-referred.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ProtocolTransition-referred"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ProtocolTransition-referred.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (trigger->collect(event)->select(oclIsKindOf(CallEvent))->collect(oclAsType(CallEvent).operation)->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ProtocolTransition-referred.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Operation"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ProtocolTransition-referred.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ProtocolTransition-referred.1-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Pseudostate",
                "name": "Pseudostate"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Pseudostate-_ownedComment.0",
                  "body": "A Pseudostate is an abstraction that encompasses different types of transient Vertices in the StateMachine graph. A StateMachine instance never comes to rest in a Pseudostate, instead, it will exit and enter the Pseudostate within a single run-to-completion step."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Pseudostate"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-transitions_outgoing",
                    "name": "transitions_outgoing"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-transitions_outgoing-_ownedComment.0",
                      "body": "All transitions outgoing a fork vertex must target states in different regions of an orthogonal state."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-transitions_outgoing"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-transitions_outgoing-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::fork) implies\n\n-- for any pair of outgoing transitions there exists an orthogonal state which contains the targets of these transitions \n-- such that these targets belong to different regions of that orthogonal state \n\noutgoing->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.target, t2.target) in\n\t((contState <> null) and (contState.region\n\t\t->exists(r1:Region, r2: Region | (r1 <> r2) and t1.target.isContainedInRegion(r1) and t2.target.isContainedInRegion(r2)))))\n\t"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-choice_vertex",
                    "name": "choice_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-choice_vertex-_ownedComment.0",
                      "body": "In a complete statemachine, a choice Vertex must have at least one incoming and one outgoing Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-choice_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-choice_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::choice) implies (incoming->size() >= 1 and outgoing->size() >= 1)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-outgoing_from_initial",
                    "name": "outgoing_from_initial"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-outgoing_from_initial-_ownedComment.0",
                      "body": "The outgoing Transition from an initial vertex may have a behavior, but not a trigger or a guard."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-outgoing_from_initial"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-outgoing_from_initial-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::initial) implies (outgoing.guard = null and outgoing.trigger->isEmpty())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-join_vertex",
                    "name": "join_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-join_vertex-_ownedComment.0",
                      "body": "In a complete StateMachine, a join Vertex must have at least two incoming Transitions and exactly one outgoing Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-join_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-join_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::join) implies (outgoing->size() = 1 and incoming->size() >= 2)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-junction_vertex",
                    "name": "junction_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-junction_vertex-_ownedComment.0",
                      "body": "In a complete StateMachine, a junction Vertex must have at least one incoming and one outgoing Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-junction_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-junction_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::junction) implies (incoming->size() >= 1 and outgoing->size() >= 1)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-history_vertices",
                    "name": "history_vertices"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-history_vertices-_ownedComment.0",
                      "body": "History Vertices can have at most one outgoing Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-history_vertices"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-history_vertices-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "((kind = PseudostateKind::deepHistory) or (kind = PseudostateKind::shallowHistory)) implies (outgoing->size() <= 1)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-initial_vertex",
                    "name": "initial_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-initial_vertex-_ownedComment.0",
                      "body": "An initial Vertex can have at most one outgoing Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-initial_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-initial_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::initial) implies (outgoing->size() <= 1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-fork_vertex",
                    "name": "fork_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-fork_vertex-_ownedComment.0",
                      "body": "In a complete StateMachine, a fork Vertex must have at least two outgoing Transitions and exactly one incoming Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-fork_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-fork_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::fork) implies (incoming->size() = 1 and outgoing->size() >= 2)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pseudostate-transitions_incoming",
                    "name": "transitions_incoming"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-transitions_incoming-_ownedComment.0",
                      "body": "All Transitions incoming a join Vertex must originate in different Regions of an orthogonal State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-transitions_incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pseudostate-transitions_incoming-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = PseudostateKind::join) implies\n\n-- for any pair of incoming transitions there exists an orthogonal state which contains the source vetices of these transitions \n-- such that these source vertices belong to different regions of that orthogonal state \n\nincoming->forAll(t1:Transition, t2:Transition | let contState:State = containingStateMachine().LCAState(t1.source, t2.source) in\n\t((contState <> null) and (contState.region\n\t\t->exists(r1:Region, r2: Region | (r1 <> r2) and t1.source.isContainedInRegion(r1) and t2.source.isContainedInRegion(r2)))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Pseudostate-_generalization.0",
                  "general": "Vertex"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Pseudostate-kind",
                    "name": "kind",
                    "type": "PseudostateKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-kind-_ownedComment.0",
                      "body": "Determines the precise type of the Pseudostate and can be one of: entryPoint, exitPoint, initial, deepHistory, shallowHistory, join, fork, junction, terminate or choice."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-kind"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "Pseudostate-kind-_defaultValue",
                      "type": "PseudostateKind",
                      "instance": "PseudostateKind-initial"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Pseudostate-state",
                    "name": "state",
                    "type": "State",
                    "association": "A_connectionPoint_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-state-_ownedComment.0",
                      "body": "The State that owns this Pseudostate and in which it appears."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-state"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Pseudostate-state-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Pseudostate-stateMachine",
                    "name": "stateMachine",
                    "type": "StateMachine",
                    "association": "A_connectionPoint_stateMachine"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pseudostate-stateMachine-_ownedComment.0",
                      "body": "The StateMachine in which this Pseudostate is defined. This only applies to Pseudostates of the kind entryPoint or exitPoint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-stateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Pseudostate-stateMachine-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Pseudostate-isConsistentWith",
                  "name": "isConsistentWith",
                  "visibility": "public",
                  "bodyCondition": "Pseudostate-isConsistentWith-spec"
                },
                "_parent": "_",
                "precondition": {
                  "_attributes": {
                    "xmi:idref": "Pseudostate-isConsistentWith-pre"
                  },
                  "_parent": "_"
                },
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-isConsistentWith"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Pseudostate-isConsistentWith-owmnedComment.0",
                    "body": "The query isConsistentWith() specifies a Pseudostate can only be redefined by a Pseudostate of the same kind."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Pseudostate-isConsistentWith"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Pseudostate-isConsistentWith-pre",
                      "name": "pre"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Pseudostate-isConsistentWith-pre-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "redefiningElement.isRedefinitionContextValid(self)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Pseudostate-isConsistentWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Pseudostate-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Pseudostate-isConsistentWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (redefiningElement.oclIsKindOf(Pseudostate) and\nredefiningElement.oclAsType(Pseudostate).kind = kind)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  }
                ],
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Pseudostate-isConsistentWith-redefiningElement",
                      "name": "redefiningElement",
                      "visibility": "public",
                      "type": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Pseudostate-isConsistentWith-result",
                      "name": "result",
                      "visibility": "public",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Region",
                "name": "Region"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Region-_ownedComment.0",
                  "body": "A Region is a top-level part of a StateMachine or a composite State, that serves as a container for the Vertices and Transitions of the StateMachine. A StateMachine or composite State may contain multiple Regions representing behaviors that may occur in parallel."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Region"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Region-deep_history_vertex",
                    "name": "deep_history_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Region"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-deep_history_vertex-_ownedComment.0",
                      "body": "A Region can have at most one deep history Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-deep_history_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Region-deep_history_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n   select(kind = PseudostateKind::deepHistory)->size() <= 1\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Region-shallow_history_vertex",
                    "name": "shallow_history_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Region"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-shallow_history_vertex-_ownedComment.0",
                      "body": "A Region can have at most one shallow history Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-shallow_history_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Region-shallow_history_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "subvertex->select(oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n  select(kind = PseudostateKind::shallowHistory)->size() <= 1\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Region-owned",
                    "name": "owned"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Region"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-owned-_ownedComment.0",
                      "body": "If a Region is owned by a StateMachine, then it cannot also be owned by a State and vice versa."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-owned"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Region-owned-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(stateMachine <> null implies state = null) and (state <> null implies stateMachine = null)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Region-initial_vertex",
                    "name": "initial_vertex"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Region"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-initial_vertex-_ownedComment.0",
                      "body": "A Region can have at most one initial Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-initial_vertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Region-initial_vertex-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.subvertex->select (oclIsKindOf(Pseudostate))->collect(oclAsType(Pseudostate))->\n  select(kind = PseudostateKind::initial)->size() <= 1\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Region-_generalization.0",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Region-_generalization.1",
                    "general": "RedefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-extendedRegion",
                    "name": "extendedRegion",
                    "type": "Region",
                    "association": "A_extendedRegion_region"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-extendedRegion-_ownedComment.0",
                      "body": "The region of which this region is an extension."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-extendedRegion"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Region-extendedRegion-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-redefinitionContext",
                    "name": "redefinitionContext",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Classifier",
                    "association": "A_redefinitionContext_region"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-redefinitionContext-_ownedComment.0",
                      "body": "References the Classifier in which context this element may be redefined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-state",
                    "name": "state",
                    "type": "State",
                    "association": "A_region_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-state-_ownedComment.0",
                      "body": "The State that owns the Region. If a Region is owned by a State, then it cannot also be owned by a StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-state"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Region-state-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-stateMachine",
                    "name": "stateMachine",
                    "type": "StateMachine",
                    "association": "A_region_stateMachine"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-stateMachine-_ownedComment.0",
                      "body": "The StateMachine that owns the Region. If a Region is owned by a StateMachine, then it cannot also be owned by a State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-stateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Region-stateMachine-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-subvertex",
                    "name": "subvertex",
                    "aggregation": "composite",
                    "type": "Vertex",
                    "association": "A_subvertex_container"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-subvertex-_ownedComment.0",
                      "body": "The set of Vertices that are owned by this Region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-subvertex"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Region-subvertex-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Region-subvertex-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Region-transition",
                    "name": "transition",
                    "aggregation": "composite",
                    "type": "Transition",
                    "association": "A_transition_container"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-transition-_ownedComment.0",
                      "body": "The set of Transitions owned by the Region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-transition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Region-transition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Region-transition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Region-belongsToPSM",
                    "name": "belongsToPSM",
                    "isQuery": true,
                    "bodyCondition": "Region-belongsToPSM-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-belongsToPSM-_ownedComment.0",
                      "body": "The operation belongsToPSM () checks if the Region belongs to a ProtocolStateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-belongsToPSM"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Region-belongsToPSM-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-belongsToPSM"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Region-belongsToPSM-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if  stateMachine <> null \nthen\n  stateMachine.oclIsKindOf(ProtocolStateMachine)\nelse \n  state <> null  implies  state.container.belongsToPSM()\nendif )"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Region-belongsToPSM-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Region-containingStateMachine",
                    "name": "containingStateMachine",
                    "isQuery": true,
                    "bodyCondition": "Region-containingStateMachine-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-containingStateMachine-_ownedComment.0",
                      "body": "The operation containingStateMachine() returns the StateMachine in which this Region is defined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-containingStateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Region-containingStateMachine-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-containingStateMachine"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Region-containingStateMachine-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if stateMachine = null \nthen\n  state.containingStateMachine()\nelse\n  stateMachine\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Region-containingStateMachine-result",
                      "name": "result",
                      "direction": "return",
                      "type": "StateMachine"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Region-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "Region-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Region-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith specifies that a Region can be redefined by any Region for which the redefinition context is valid (see the isRedefinitionContextValid operation). Note that consistency requirements for the redefinition of Vertices and Transitions within a redefining Region are specified by the isConsistentWith and isRedefinitionContextValid operations for Vertex (and its subclasses) and Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Region-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Region-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Region-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = true"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Region-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Region-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Region-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Region-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Region-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Region-isRedefinitionContextValid",
                    "name": "isRedefinitionContextValid",
                    "isQuery": true,
                    "bodyCondition": "Region-isRedefinitionContextValid-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isRedefinitionContextValid"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-isRedefinitionContextValid-_ownedComment.0",
                      "body": "The query isRedefinitionContextValid() specifies whether the redefinition contexts of a Region are properly related to the redefinition contexts of the specified Region to allow this element to redefine the other. The containing StateMachine or State of a redefining Region must Redefine the containing StateMachine or State of the redefined Region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Region-isRedefinitionContextValid-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Region-isRedefinitionContextValid-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if redefinedElement.oclIsKindOf(Region) then\n  let redefinedRegion : Region = redefinedElement.oclAsType(Region) in\n    if stateMachine->isEmpty() then\n    -- the Region is owned by a State\n      (state.redefinedState->notEmpty() and state.redefinedState.region->includes(redefinedRegion))\n    else -- the region is owned by a StateMachine\n      (stateMachine.extendedStateMachine->notEmpty() and\n        stateMachine.extendedStateMachine->exists(sm : StateMachine |\n          sm.region->includes(redefinedRegion)))\n    endif\nelse\n  false\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Region-isRedefinitionContextValid-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Region-isRedefinitionContextValid-redefinedElement",
                        "name": "redefinedElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Region-redefinitionContext.1",
                    "name": "redefinitionContext",
                    "isQuery": true,
                    "bodyCondition": "Region-redefinitionContext.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Region-redefinitionContext.1-_ownedComment.0",
                      "body": "The redefinition context of a Region is the nearest containing StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Region-redefinitionContext.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Region-redefinitionContext.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Region-redefinitionContext.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Region-redefinitionContext"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Region-redefinitionContext.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = containingStateMachine()"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Region-redefinitionContext.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "State",
                "name": "State"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "State-_ownedComment.0",
                  "body": "A State models a situation during which some (usually implicit) invariant condition holds."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "State"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "State-entry_or_exit",
                    "name": "entry_or_exit"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "State"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-entry_or_exit-_ownedComment.0",
                      "body": "Only entry or exit Pseudostates can serve as connection points."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-entry_or_exit"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "State-entry_or_exit-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "connectionPoint->forAll(kind = PseudostateKind::entryPoint or kind = PseudostateKind::exitPoint)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "State-submachine_states",
                    "name": "submachine_states"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "State"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-submachine_states-_ownedComment.0",
                      "body": "Only submachine States can have connection point references."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-submachine_states"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "State-submachine_states-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isSubmachineState implies connection->notEmpty( )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "State-composite_states",
                    "name": "composite_states"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "State"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-composite_states-_ownedComment.0",
                      "body": "Only composite States can have entry or exit Pseudostates defined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-composite_states"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "State-composite_states-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "connectionPoint->notEmpty() implies isComposite"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "State-destinations_or_sources_of_transitions",
                    "name": "destinations_or_sources_of_transitions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "State"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-destinations_or_sources_of_transitions-_ownedComment.0",
                      "body": "The connection point references used as destinations/sources of Transitions associated with a submachine State must be defined as entry/exit points in the submachine StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-destinations_or_sources_of_transitions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "State-destinations_or_sources_of_transitions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.isSubmachineState implies (self.connection->forAll (cp |\n  cp.entry->forAll (ps | ps.stateMachine = self.submachine) and\n  cp.exit->forAll (ps | ps.stateMachine = self.submachine)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "State-submachine_or_regions",
                    "name": "submachine_or_regions"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "State"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-submachine_or_regions-_ownedComment.0",
                      "body": "A State is not allowed to have both a submachine and Regions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-submachine_or_regions"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "State-submachine_or_regions-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isComposite implies not isSubmachineState"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "State-_generalization.0",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "State-_generalization.2",
                    "general": "Vertex"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-connection",
                    "name": "connection",
                    "aggregation": "composite",
                    "type": "ConnectionPointReference",
                    "association": "A_connection_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-connection-_ownedComment.0",
                      "body": "The entry and exit connection points used in conjunction with this (submachine) State, i.e., as targets and sources, respectively, in the Region with the submachine State. A connection point reference references the corresponding definition of a connection point Pseudostate in the StateMachine referenced by the submachine State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-connection"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-connection-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "State-connection-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-connectionPoint",
                    "name": "connectionPoint",
                    "aggregation": "composite",
                    "type": "Pseudostate",
                    "association": "A_connectionPoint_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-connectionPoint-_ownedComment.0",
                      "body": "The entry and exit Pseudostates of a composite State. These can only be entry or exit Pseudostates, and they must have different names. They can only be defined for composite States."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-connectionPoint"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-connectionPoint-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "State-connectionPoint-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-deferrableTrigger",
                    "name": "deferrableTrigger",
                    "aggregation": "composite",
                    "type": "Trigger",
                    "association": "A_deferrableTrigger_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-deferrableTrigger-_ownedComment.0",
                      "body": "A list of Triggers that are candidates to be retained by the StateMachine if they trigger no Transitions out of the State (not consumed). A deferred Trigger is retained until the StateMachine reaches a State configuration where it is no longer deferred."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-deferrableTrigger"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-deferrableTrigger-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "State-deferrableTrigger-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-doActivity",
                    "name": "doActivity",
                    "aggregation": "composite",
                    "type": "Behavior",
                    "association": "A_doActivity_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-doActivity-_ownedComment.0",
                      "body": "An optional Behavior that is executed while being in the State. The execution starts when this State is entered, and ceases either by itself when done, or when the State is exited, whichever comes first."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-doActivity"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-doActivity-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-entry",
                    "name": "entry",
                    "aggregation": "composite",
                    "type": "Behavior",
                    "association": "A_entry_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-entry-_ownedComment.0",
                      "body": "An optional Behavior that is executed whenever this State is entered regardless of the Transition taken to reach the State. If defined, entry Behaviors are always executed to completion prior to any internal Behavior or Transitions performed within the State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-entry"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-entry-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-exit",
                    "name": "exit",
                    "aggregation": "composite",
                    "type": "Behavior",
                    "association": "A_exit_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-exit-_ownedComment.0",
                      "body": "An optional Behavior that is executed whenever this State is exited regardless of which Transition was taken out of the State. If defined, exit Behaviors are always executed to completion only after all internal and transition Behaviors have completed execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-exit"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-exit-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-isComposite",
                    "name": "isComposite",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isComposite-_ownedComment.0",
                      "body": "A state with isComposite=true is said to be a composite State. A composite State is a State that contains at least one Region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isComposite"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-isOrthogonal",
                    "name": "isOrthogonal",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isOrthogonal-_ownedComment.0",
                      "body": "A State with isOrthogonal=true is said to be an orthogonal composite State An orthogonal composite State contains two or more Regions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isOrthogonal"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-isSimple",
                    "name": "isSimple",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isSimple-_ownedComment.0",
                      "body": "A State with isSimple=true is said to be a simple State A simple State does not have any Regions and it does not refer to any submachine StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isSimple"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-isSubmachineState",
                    "name": "isSubmachineState",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isSubmachineState-_ownedComment.0",
                      "body": "A State with isSubmachineState=true is said to be a submachine State Such a State refers to another StateMachine(submachine)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isSubmachineState"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-region",
                    "name": "region",
                    "aggregation": "composite",
                    "type": "Region",
                    "association": "A_region_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-region-_ownedComment.0",
                      "body": "The Regions owned directly by the State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-region"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-region-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "State-region-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-stateInvariant",
                    "name": "stateInvariant",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_stateInvariant_owningState"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-stateInvariant-_ownedComment.0",
                      "body": "Specifies conditions that are always true when this State is the current State. In ProtocolStateMachines state invariants are additional conditions to the preconditions of the outgoing Transitions, and to the postcondition of the incoming Transitions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-stateInvariant"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-stateInvariant-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-submachine",
                    "name": "submachine",
                    "type": "StateMachine",
                    "association": "A_submachineState_submachine"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-submachine-_ownedComment.0",
                      "body": "The StateMachine that is to be inserted in place of the (submachine) State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-submachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-submachine-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-containingStateMachine",
                    "name": "containingStateMachine",
                    "isQuery": true,
                    "bodyCondition": "State-containingStateMachine-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Vertex-containingStateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-containingStateMachine-_ownedComment.0",
                      "body": "The query containingStateMachine() returns the StateMachine that contains the State either directly or transitively."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-containingStateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-containingStateMachine-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "State-containingStateMachine"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-containingStateMachine-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (container.containingStateMachine())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-containingStateMachine-result",
                      "name": "result",
                      "direction": "return",
                      "type": "StateMachine"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isComposite.1",
                    "name": "isComposite",
                    "isQuery": true,
                    "bodyCondition": "State-isComposite.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isComposite.1-_ownedComment.0",
                      "body": "A composite State is a State with at least one Region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isComposite.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-isComposite.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "State-isComposite.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "State-isComposite"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-isComposite.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (region->notEmpty())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-isComposite.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "State-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "State-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith specifies that a non-final State can only be redefined by a non-final State (this is overridden by FinalState to allow a FinalState to be redefined by a FinalState) and, if the redefined State is a submachine State, then the redefining State must be a submachine state whose submachine is a redefinition of the submachine of the redefined State. Note that consistency requirements for the redefinition of Regions and connectionPoint Pseudostates within a composite State and connection ConnectionPoints of a submachine State are specified by the isConsistentWith and isRedefinitionContextValid operations for Region and Vertex (and its subclasses, Pseudostate and ConnectionPointReference)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "State-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "State-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "State-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefiningElement.oclIsTypeOf(State) and \n  let redefiningState : State = redefiningElement.oclAsType(State) in\n    submachine <> null implies (redefiningState.submachine <> null and\n      redefiningState.submachine.extendedStateMachine->includes(submachine)))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "State-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "State-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "State-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "State-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "State-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isOrthogonal.1",
                    "name": "isOrthogonal",
                    "isQuery": true,
                    "bodyCondition": "State-isOrthogonal.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isOrthogonal.1-_ownedComment.0",
                      "body": "An orthogonal State is a composite state with at least 2 regions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isOrthogonal.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-isOrthogonal.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "State-isOrthogonal.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "State-isOrthogonal"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-isOrthogonal.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (region->size () > 1)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-isOrthogonal.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isSimple.1",
                    "name": "isSimple",
                    "isQuery": true,
                    "bodyCondition": "State-isSimple.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isSimple.1-_ownedComment.0",
                      "body": "A simple State is a State without any regions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isSimple.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-isSimple.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "State-isSimple.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "State-isSimple"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-isSimple.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((region->isEmpty()) and not isSubmachineState())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-isSimple.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isSubmachineState.1",
                    "name": "isSubmachineState",
                    "isQuery": true,
                    "bodyCondition": "State-isSubmachineState.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isSubmachineState.1-_ownedComment.0",
                      "body": "Only submachine State references another StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isSubmachineState.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-isSubmachineState.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "State-isSubmachineState.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "State-isSubmachineState"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-isSubmachineState.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (submachine <> null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-isSubmachineState.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StateMachine",
                "name": "StateMachine"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StateMachine-_ownedComment.0",
                  "body": "StateMachines can be used to express event-driven behaviors of parts of a system. Behavior is modeled as a traversal of a graph of Vertices interconnected by one or more joined Transition arcs that are triggered by the dispatching of successive Event occurrences. During this traversal, the StateMachine may execute a sequence of Behaviors associated with various elements of the StateMachine."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StateMachine"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StateMachine-connection_points",
                    "name": "connection_points"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-connection_points-_ownedComment.0",
                      "body": "The connection points of a StateMachine are Pseudostates of kind entry point or exit point."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-connection_points"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StateMachine-connection_points-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "connectionPoint->forAll (kind = PseudostateKind::entryPoint or kind = PseudostateKind::exitPoint)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StateMachine-classifier_context",
                    "name": "classifier_context"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-classifier_context-_ownedComment.0",
                      "body": "The Classifier context of a StateMachine cannot be an Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-classifier_context"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StateMachine-classifier_context-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "_'context' <> null implies not _'context'.oclIsKindOf(Interface)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StateMachine-method",
                    "name": "method"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-method-_ownedComment.0",
                      "body": "A StateMachine as the method for a BehavioralFeature cannot have entry/exit connection points."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-method"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StateMachine-method-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "specification <> null implies connectionPoint->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StateMachine-context_classifier",
                    "name": "context_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StateMachine"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-context_classifier-_ownedComment.0",
                      "body": "The context Classifier of the method StateMachine of a BehavioralFeature must be the Classifier that owns the BehavioralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-context_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StateMachine-context_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "specification <> null implies ( _'context' <> null and specification.featuringClassifier->exists(c | c = _'context'))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StateMachine-_generalization.0",
                  "general": "Behavior"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateMachine-connectionPoint",
                    "name": "connectionPoint",
                    "aggregation": "composite",
                    "type": "Pseudostate",
                    "association": "A_connectionPoint_stateMachine"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-connectionPoint-_ownedComment.0",
                      "body": "The connection points defined for this StateMachine. They represent the interface of the StateMachine when used as part of submachine State"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-connectionPoint"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StateMachine-connectionPoint-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StateMachine-connectionPoint-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateMachine-extendedStateMachine",
                    "name": "extendedStateMachine",
                    "type": "StateMachine",
                    "association": "A_extendedStateMachine_stateMachine"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Behavior-redefinedBehavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-extendedStateMachine-_ownedComment.0",
                      "body": "The StateMachines of which this is an extension."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-extendedStateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StateMachine-extendedStateMachine-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StateMachine-extendedStateMachine-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateMachine-region",
                    "name": "region",
                    "aggregation": "composite",
                    "type": "Region",
                    "association": "A_region_stateMachine"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-region-_ownedComment.0",
                      "body": "The Regions owned directly by the StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-region"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StateMachine-region-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateMachine-submachineState",
                    "name": "submachineState",
                    "type": "State",
                    "association": "A_submachineState_submachine"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-submachineState-_ownedComment.0",
                      "body": "References the submachine(s) in case of a submachine State. Multiple machines are referenced in case of a concurrent State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-submachineState"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StateMachine-submachineState-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StateMachine-submachineState-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StateMachine-LCA",
                    "name": "LCA",
                    "isQuery": true,
                    "bodyCondition": "StateMachine-LCA-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-LCA-_ownedComment.0",
                      "body": "The operation LCA(s1,s2) returns the Region that is the least common ancestor of Vertices s1 and s2, based on the StateMachine containment hierarchy."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-LCA"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StateMachine-LCA-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-LCA"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StateMachine-LCA-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if ancestor(s1, s2) then \n    s2.container\nelse\n\tif ancestor(s2, s1) then\n\t    s1.container \n\telse \n\t    LCA(s1.container.state, s2.container.state)\n\tendif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCA-result",
                        "name": "result",
                        "direction": "return",
                        "type": "Region"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCA-s1",
                        "name": "s1",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCA-s2",
                        "name": "s2",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StateMachine-ancestor",
                    "name": "ancestor",
                    "isQuery": true,
                    "bodyCondition": "StateMachine-ancestor-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-ancestor-_ownedComment.0",
                      "body": "The query ancestor(s1, s2) checks whether Vertex s2 is an ancestor of Vertex s1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-ancestor"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StateMachine-ancestor-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-ancestor"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StateMachine-ancestor-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if (s2 = s1) then \n\ttrue \nelse \n\tif s1.container.stateMachine->notEmpty() then \n\t    true\n\telse \n\t    if s2.container.stateMachine->notEmpty() then \n\t        false\n\t    else\n\t        ancestor(s1, s2.container.state)\n\t     endif\n\t endif\nendif  )"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-ancestor-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-ancestor-s1",
                        "name": "s1",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-ancestor-s2",
                        "name": "s2",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StateMachine-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "StateMachine-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith specifies that a StateMachine can be redefined by any other StateMachine for which the redefinition context is valid (see the isRedefinitionContextValid operation). Note that consistency requirements for the redefinition of Regions and connectionPoint Pseudostates owned by a StateMachine are specified by the isConsistentWith and isRedefinitionContextValid operations for Region and Vertex (and its subclass Pseudostate)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StateMachine-isConsistentWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-isConsistentWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StateMachine-isConsistentWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = true"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StateMachine-isRedefinitionContextValid",
                    "name": "isRedefinitionContextValid",
                    "isQuery": true,
                    "bodyCondition": "StateMachine-isRedefinitionContextValid-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isRedefinitionContextValid"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-isRedefinitionContextValid-_ownedComment.0",
                      "body": "The query isRedefinitionContextValid specifies whether the redefinition context of a StateMachine is properly related to the redefinition contexts of a StateMachine it redefines. The requirement is that the context BehavioredClassifier of a redefining StateMachine must specialize the context Classifier of the redefined StateMachine. If the redefining StateMachine does not have a context BehavioredClassifier, then then the redefining StateMachine also must not have a context BehavioredClassifier but must, instead, specialize the redefining StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StateMachine-isRedefinitionContextValid-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StateMachine-isRedefinitionContextValid-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (redefinedElement.oclIsKindOf(StateMachine) and\n  let parentContext : BehavioredClassifier =\n    redefinedElement.oclAsType(StateMachine).context in\n  if context = null then\n    parentContext = null and self.allParents()→includes(redefinedElement)\n  else\n    parentContext <> null and context.allParents()->includes(parentContext)\n  endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-isRedefinitionContextValid-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-isRedefinitionContextValid-redefinedElement",
                        "name": "redefinedElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StateMachine-LCAState",
                    "name": "LCAState",
                    "isQuery": true,
                    "bodyCondition": "StateMachine-LCAState-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateMachine-LCAState-_ownedComment.0",
                      "body": "This utility funciton is like the LCA, except that it returns the nearest composite State that contains both input Vertices."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-LCAState"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StateMachine-LCAState-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StateMachine-LCAState"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StateMachine-LCAState-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if v2.oclIsTypeOf(State) and ancestor(v1, v2) then\n\tv2.oclAsType(State)\nelse if v1.oclIsTypeOf(State) and ancestor(v2, v1) then\n\tv1.oclAsType(State)\nelse if (v1.container.state->isEmpty() or v2.container.state->isEmpty()) then \n\tnull.oclAsType(State)\nelse LCAState(v1.container.state, v2.container.state)\nendif endif endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCAState-result",
                        "name": "result",
                        "direction": "return",
                        "type": "State"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCAState-v1",
                        "name": "v1",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "StateMachine-LCAState-v2",
                        "name": "v2",
                        "type": "Vertex"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Transition",
                "name": "Transition"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Transition-_ownedComment.0",
                  "body": "A Transition represents an arc between exactly one source Vertex and exactly one Target vertex (the source and targets may be the same Vertex). It may form part of a compound transition, which takes the StateMachine from one steady State configuration to another, representing the full response of the StateMachine to an occurrence of an Event that triggered it."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Transition"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-state_is_external",
                    "name": "state_is_external"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-state_is_external-_ownedComment.0",
                      "body": "A Transition with kind external can source any Vertex except entry points."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-state_is_external"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-state_is_external-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = TransitionKind::external) implies\n\tnot (source.oclIsKindOf(Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-join_segment_guards",
                    "name": "join_segment_guards"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-join_segment_guards-_ownedComment.0",
                      "body": "A join segment must not have Guards or Triggers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-join_segment_guards"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-join_segment_guards-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(target.oclIsKindOf(Pseudostate) and target.oclAsType(Pseudostate).kind = PseudostateKind::join) implies (guard = null and trigger->isEmpty())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-state_is_internal",
                    "name": "state_is_internal"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-state_is_internal-_ownedComment.0",
                      "body": "A Transition with kind internal must have a State as its source, and its source and target must be equal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-state_is_internal"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-state_is_internal-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = TransitionKind::internal) implies\n\t\t(source.oclIsKindOf (State) and source = target)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-outgoing_pseudostates",
                    "name": "outgoing_pseudostates"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-outgoing_pseudostates-_ownedComment.0",
                      "body": "Transitions outgoing Pseudostates may not have a Trigger."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-outgoing_pseudostates"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-outgoing_pseudostates-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "source.oclIsKindOf(Pseudostate) and (source.oclAsType(Pseudostate).kind <> PseudostateKind::initial) implies trigger->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-join_segment_state",
                    "name": "join_segment_state"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-join_segment_state-_ownedComment.0",
                      "body": "A join segment must always originate from a State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-join_segment_state"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-join_segment_state-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(target.oclIsKindOf(Pseudostate) and target.oclAsType(Pseudostate).kind = PseudostateKind::join) implies (source.oclIsKindOf(State))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-fork_segment_state",
                    "name": "fork_segment_state"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-fork_segment_state-_ownedComment.0",
                      "body": "A fork segment must always target a State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-fork_segment_state"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-fork_segment_state-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(source.oclIsKindOf(Pseudostate) and  source.oclAsType(Pseudostate).kind = PseudostateKind::fork) implies (target.oclIsKindOf(State))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-state_is_local",
                    "name": "state_is_local"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-state_is_local-_ownedComment.0",
                      "body": "A Transition with kind local must have a composite State or an entry point as its source."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-state_is_local"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-state_is_local-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(kind = TransitionKind::local) implies\n\t\t((source.oclIsKindOf (State) and source.oclAsType(State).isComposite) or\n\t\t(source.oclIsKindOf (Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-initial_transition",
                    "name": "initial_transition"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-initial_transition-_ownedComment.0",
                      "body": "An initial Transition at the topmost level Region of a StateMachine that has no Trigger."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-initial_transition"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-initial_transition-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(source.oclIsKindOf(Pseudostate) and container.stateMachine->notEmpty()) implies\n\ttrigger->isEmpty()\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-fork_segment_guards",
                    "name": "fork_segment_guards"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-fork_segment_guards-_ownedComment.0",
                      "body": "A fork segment must not have Guards or Triggers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-fork_segment_guards"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-fork_segment_guards-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(source.oclIsKindOf(Pseudostate) and source.oclAsType(Pseudostate).kind = PseudostateKind::fork) implies (guard = null and trigger->isEmpty())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Transition-transition_vertices",
                    "name": "transition_vertices"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Transition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-transition_vertices-_ownedComment.0",
                      "body": "The source and target Vertices of a Transition must be contained in the same StateMachine as the Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-transition_vertices"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Transition-transition_vertices-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let stateMachine = self.containingStateMachine() in \nsource.containingStateMachine() = stateMachine and \ntarget.containingStateMachine() = stateMachine"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Transition-_generalization.0",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Transition-_generalization.1",
                    "general": "RedefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-container",
                    "name": "container",
                    "type": "Region",
                    "association": "A_transition_container"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-container-_ownedComment.0",
                      "body": "Designates the Region that owns this Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-container"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-effect",
                    "name": "effect",
                    "aggregation": "composite",
                    "type": "Behavior",
                    "association": "A_effect_transition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-effect-_ownedComment.0",
                      "body": "Specifies an optional behavior to be performed when the Transition fires."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-effect"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Transition-effect-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-guard",
                    "name": "guard",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_guard_transition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-guard-_ownedComment.0",
                      "body": "A guard is a Constraint that provides a fine-grained control over the firing of the Transition. The guard is evaluated when an Event occurrence is dispatched by the StateMachine. If the guard is true at that time, the Transition may be enabled, otherwise, it is disabled. Guards should be pure expressions without side effects. Guard expressions with side effects are ill formed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-guard"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Transition-guard-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-kind",
                    "name": "kind",
                    "type": "TransitionKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-kind-_ownedComment.0",
                      "body": "Indicates the precise type of the Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-kind"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "Transition-kind-_defaultValue",
                      "type": "TransitionKind",
                      "instance": "TransitionKind-external"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-redefinedTransition",
                    "name": "redefinedTransition",
                    "type": "Transition",
                    "association": "A_redefinedTransition_transition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-redefinedTransition-_ownedComment.0",
                      "body": "The Transition that is redefined by this Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-redefinedTransition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Transition-redefinedTransition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-redefinitionContext",
                    "name": "redefinitionContext",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Classifier",
                    "association": "A_redefinitionContext_transition"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-redefinitionContext-_ownedComment.0",
                      "body": "References the Classifier in which context this element may be redefined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-source",
                    "name": "source",
                    "type": "Vertex",
                    "association": "A_outgoing_source_vertex"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-source-_ownedComment.0",
                      "body": "Designates the originating Vertex (State or Pseudostate) of the Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-source"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-target",
                    "name": "target",
                    "type": "Vertex",
                    "association": "A_incoming_target_vertex"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-target-_ownedComment.0",
                      "body": "Designates the target Vertex that is reached when the Transition is taken."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-target"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Transition-trigger",
                    "name": "trigger",
                    "aggregation": "composite",
                    "type": "Trigger",
                    "association": "A_trigger_transition"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-trigger-_ownedComment.0",
                      "body": "Specifies the Triggers that may fire the transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-trigger"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Transition-trigger-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Transition-trigger-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Transition-containingStateMachine",
                    "name": "containingStateMachine",
                    "isQuery": true,
                    "bodyCondition": "Transition-containingStateMachine-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-containingStateMachine-_ownedComment.0",
                      "body": "The query containingStateMachine() returns the StateMachine that contains the Transition either directly or transitively."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-containingStateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Transition-containingStateMachine-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-containingStateMachine"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Transition-containingStateMachine-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (container.containingStateMachine())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Transition-containingStateMachine-result",
                      "name": "result",
                      "direction": "return",
                      "type": "StateMachine"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Transition-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "Transition-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Transition-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith specifies that a redefining Transition is consistent with a redefined Transition provided that the source Vertex of the redefining Transition redefines the source Vertex of the redefined Transition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Transition-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Transition-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Transition-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefiningElement.oclIsKindOf(Transition) and\n  redefiningElement.oclAsType(Transition).source.redefinedTransition = source)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Transition-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Transition-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Transition-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Transition-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Transition-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Transition-redefinitionContext.1",
                    "name": "redefinitionContext",
                    "isQuery": true,
                    "bodyCondition": "Transition-redefinitionContext.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Transition-redefinitionContext.1-_ownedComment.0",
                      "body": "The redefinition context of a Transition is the nearest containing StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Transition-redefinitionContext.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Transition-redefinitionContext.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Transition-redefinitionContext.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Transition-redefinitionContext"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Transition-redefinitionContext.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = containingStateMachine()"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Transition-redefinitionContext.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Vertex",
                "name": "Vertex",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Vertex-_ownedComment.0",
                  "body": "A Vertex is an abstraction of a node in a StateMachine graph. It can be the source or destination of any number of Transitions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Vertex"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Vertex-_generalization.0",
                    "general": "NamedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Vertex-_generalization.1",
                    "general": "RedefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Vertex-container",
                    "name": "container",
                    "type": "Region",
                    "association": "A_subvertex_container"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-container-_ownedComment.0",
                      "body": "The Region that contains this Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-container"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Vertex-container-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Vertex-incoming",
                    "name": "incoming",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Transition",
                    "association": "A_incoming_target_vertex"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-incoming-_ownedComment.0",
                      "body": "Specifies the Transitions entering this Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Vertex-incoming-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Vertex-incoming-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Vertex-outgoing",
                    "name": "outgoing",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Transition",
                    "association": "A_outgoing_source_vertex"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-outgoing-_ownedComment.0",
                      "body": "Specifies the Transitions departing from this Vertex."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-outgoing"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Vertex-outgoing-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Vertex-outgoing-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-redefinitionContext",
                    "name": "redefinitionContext",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Classifier",
                    "association": "A_redefinitionContext_state"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-redefinitionContext-_ownedComment.0",
                      "body": "References the Classifier in which context this element may be redefined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "State-redefinedState",
                    "name": "redefinedVertex",
                    "type": "Vertex",
                    "association": "A_redefinedState_state"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-redefinedState-_ownedComment.0",
                      "body": "The Vertex of which this Vertex is a redefinition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-redefinedState"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "State-redefinedState-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Vertex-containingStateMachine",
                    "name": "containingStateMachine",
                    "isQuery": true,
                    "bodyCondition": "Vertex-containingStateMachine-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-containingStateMachine-_ownedComment.0",
                      "body": "The operation containingStateMachine() returns the StateMachine in which this Vertex is defined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-containingStateMachine"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Vertex-containingStateMachine-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-containingStateMachine"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Vertex-containingStateMachine-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if container <> null\nthen\n-- the container is a region\n   container.containingStateMachine()\nelse \n   if (self.oclIsKindOf(Pseudostate)) and ((self.oclAsType(Pseudostate).kind = PseudostateKind::entryPoint) or (self.oclAsType(Pseudostate).kind = PseudostateKind::exitPoint)) then\n      self.oclAsType(Pseudostate).stateMachine\n   else \n      if (self.oclIsKindOf(ConnectionPointReference)) then\n          self.oclAsType(ConnectionPointReference).state.containingStateMachine() -- no other valid cases possible\n      else \n          null\n      endif\n   endif\nendif\n\n)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Vertex-containingStateMachine-result",
                      "name": "result",
                      "direction": "return",
                      "type": "StateMachine"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Vertex-incoming.1",
                    "name": "incoming",
                    "isQuery": true,
                    "bodyCondition": "Vertex-incoming.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-incoming.1-_ownedComment.0",
                      "body": "Derivation for Vertex::/incoming."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-incoming.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Vertex-incoming.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Vertex-incoming.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Vertex-incoming"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Vertex-incoming.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (Transition.allInstances()->select(target=self))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Vertex-incoming.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Transition"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Vertex-incoming.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Vertex-incoming.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Vertex-outgoing.1",
                    "name": "outgoing",
                    "isQuery": true,
                    "bodyCondition": "Vertex-outgoing.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-outgoing.1-_ownedComment.0",
                      "body": "Derivation for Vertex::/outgoing"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-outgoing.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Vertex-outgoing.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Vertex-outgoing.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Vertex-outgoing"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Vertex-outgoing.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (Transition.allInstances()->select(source=self))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Vertex-outgoing.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Transition"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Vertex-outgoing.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Vertex-outgoing.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Vertex-isContainedInState",
                    "name": "isContainedInState",
                    "isQuery": true,
                    "bodyCondition": "Vertex-isContainedInState-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-isContainedInState-_ownedComment.0",
                      "body": "This utility operation returns true if the Vertex is contained in the State s (input argument)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-isContainedInState"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Vertex-isContainedInState-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-isContainedInState"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Vertex-isContainedInState-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if not s.isComposite() or container->isEmpty() then\n\tfalse\nelse\n\tif container.state = s then \n\t\ttrue\n\telse\n\t\tcontainer.state.isContainedInState(s)\n\tendif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Vertex-isContainedInState-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Vertex-isContainedInState-s",
                        "name": "s",
                        "type": "State"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Vertex-isContainedInRegion",
                    "name": "isContainedInRegion",
                    "isQuery": true,
                    "bodyCondition": "Vertex-isContainedInRegion-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Vertex-isContainedInRegion-_ownedComment.0",
                      "body": "This utility query returns true if the Vertex is contained in the Region r (input argument)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-isContainedInRegion"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Vertex-isContainedInRegion-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Vertex-isContainedInRegion"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Vertex-isContainedInRegion-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if (container = r) then\n\ttrue\nelse\n\tif (r.state->isEmpty()) then\n\t\tfalse\n\telse\n\t\tcontainer.state.isContainedInRegion(r)\n\tendif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Vertex-isContainedInRegion-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Vertex-isContainedInRegion-r",
                        "name": "r",
                        "type": "Region"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-redefinitionContext.1",
                    "name": "redefinitionContext",
                    "isQuery": true,
                    "bodyCondition": "State-redefinitionContext.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-redefinitionContext.1-_ownedComment.0",
                      "body": "The redefinition context of a Vertex is the nearest containing StateMachine."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-redefinitionContext.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "State-redefinitionContext.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "State-redefinitionContext.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "State-redefinitionContext"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "State-redefinitionContext.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = containingStateMachine()"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "State-redefinitionContext.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "State-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "State-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "State-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "State-isConsistentWith-_ownedComment.0",
                      "body": "The query isRedefinitionContextValid specifies that the redefinition context of a redefining Vertex is properly related to the redefinition context of the redefined Vertex if the owner of the redefining Vertex is a redefinition of the owner of the redefined Vertex. Note that the owner of a Vertex may be a Region, a StateMachine (for a connectionPoint Pseudostate), or a State (for a connectionPoint Pseudostate or a connection ConnectionPointReference), all of which are RedefinableElements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "State-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "State-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "State-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "State-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "State-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "State-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "State-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefinedElement.oclIsKindOf(Vertex) and\n  owner.oclAsType(RedefinableElement).redefinedElement->includes(redefinedElement.owner))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "State-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "State-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "PseudostateKind",
                "name": "PseudostateKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PseudostateKind-_ownedComment.0",
                  "body": "PseudostateKind is an Enumeration type that is used to differentiate various kinds of Pseudostates."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PseudostateKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-initial",
                    "name": "initial"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-deepHistory",
                    "name": "deepHistory"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-shallowHistory",
                    "name": "shallowHistory"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-join",
                    "name": "join"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-fork",
                    "name": "fork"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-junction",
                    "name": "junction"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-choice",
                    "name": "choice"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-entryPoint",
                    "name": "entryPoint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-exitPoint",
                    "name": "exitPoint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "PseudostateKind-terminate",
                    "name": "terminate"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "TransitionKind",
                "name": "TransitionKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TransitionKind-_ownedComment.0",
                  "body": "TransitionKind is an Enumeration type used to differentiate the various kinds of Transitions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TransitionKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "TransitionKind-internal",
                    "name": "internal"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TransitionKind-internal-_ownedComment.0",
                      "body": "Implies that the Transition, if triggered, occurs without exiting or entering the source State (i.e., it does not cause a state change). This means that the entry or exit condition of the source State will not be invoked. An internal Transition can be taken even if the SateMachine is in one or more Regions nested within the associated State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TransitionKind-internal"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "TransitionKind-local",
                    "name": "local"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TransitionKind-local-_ownedComment.0",
                      "body": "Implies that the Transition, if triggered, will not exit the composite (source) State, but it will exit and re-enter any state within the composite State that is in the current state configuration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TransitionKind-local"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "TransitionKind-external",
                    "name": "external"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TransitionKind-external-_ownedComment.0",
                      "body": "Implies that the Transition, if triggered, will exit the composite (source) State."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TransitionKind-external"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_incoming_target_vertex",
                "name": "A_incoming_target_vertex"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Vertex-incoming"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Transition-target"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_outgoing_source_vertex",
                "name": "A_outgoing_source_vertex"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Vertex-outgoing"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Transition-source"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_trigger_transition",
                "name": "A_trigger_transition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Transition-trigger"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_trigger_transition-transition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_trigger_transition-transition",
                  "name": "transition",
                  "type": "Transition",
                  "association": "A_trigger_transition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_trigger_transition-transition-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_guard_transition",
                "name": "A_guard_transition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Transition-guard"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_guard_transition-transition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_guard_transition-transition",
                  "name": "transition",
                  "type": "Transition",
                  "association": "A_guard_transition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_guard_transition-transition-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedTransition_transition",
                "name": "A_redefinedTransition_transition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Transition-redefinedTransition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedTransition_transition-transition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedTransition_transition-transition",
                  "name": "transition",
                  "type": "Transition",
                  "association": "A_redefinedTransition_transition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedTransition_transition-transition-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedTransition_transition-transition-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinitionContext_transition",
                "name": "A_redefinitionContext_transition",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Transition-redefinitionContext"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_transition-transition"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_redefinitionContext_transition-_generalization.0",
                  "general": "A_redefinitionContext_redefinableElement"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinitionContext_transition-transition",
                  "name": "transition",
                  "type": "Transition",
                  "association": "A_redefinitionContext_transition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinitionContext_transition-transition-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinitionContext_transition-transition-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_effect_transition",
                "name": "A_effect_transition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Transition-effect"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_effect_transition-transition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_effect_transition-transition",
                  "name": "transition",
                  "type": "Transition",
                  "association": "A_effect_transition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_effect_transition-transition-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_submachineState_submachine",
                "name": "A_submachineState_submachine"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateMachine-submachineState"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "State-submachine"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_connectionPoint_stateMachine",
                "name": "A_connectionPoint_stateMachine"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateMachine-connectionPoint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Pseudostate-stateMachine"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_region_stateMachine",
                "name": "A_region_stateMachine"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateMachine-region"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Region-stateMachine"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extendedStateMachine_stateMachine",
                "name": "A_extendedStateMachine_stateMachine"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateMachine-extendedStateMachine"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_extendedStateMachine_stateMachine-stateMachine"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_extendedStateMachine_stateMachine-stateMachine",
                  "name": "stateMachine",
                  "type": "StateMachine",
                  "association": "A_extendedStateMachine_stateMachine"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedBehavior_behavior-behavior"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_extendedStateMachine_stateMachine-stateMachine-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_extendedStateMachine_stateMachine-stateMachine-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinitionContext_state",
                "name": "A_redefinitionContext_vertex",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-redefinitionContext"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_redefinitionContext_state-_generalization.0",
                  "general": "A_redefinitionContext_redefinableElement"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinitionContext_state-state",
                  "name": "vertex",
                  "type": "Vertex",
                  "association": "A_redefinitionContext_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinitionContext_state-state-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinitionContext_state-state-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_region_state",
                "name": "A_region_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-region"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Region-state"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_stateInvariant_owningState",
                "name": "A_stateInvariant_owningState"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-stateInvariant"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_stateInvariant_owningState-owningState"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_stateInvariant_owningState-owningState",
                  "name": "owningState",
                  "type": "State",
                  "association": "A_stateInvariant_owningState"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_stateInvariant_owningState-owningState-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedState_state",
                "name": "A_redefinedVertex_vertex"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-redefinedState"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedState_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedState_state-state",
                  "name": "vertex",
                  "type": "Vertex",
                  "association": "A_redefinedState_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedState_state-state-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedState_state-state-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_deferrableTrigger_state",
                "name": "A_deferrableTrigger_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-deferrableTrigger"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_deferrableTrigger_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_deferrableTrigger_state-state",
                  "name": "state",
                  "type": "State",
                  "association": "A_deferrableTrigger_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_deferrableTrigger_state-state-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_connection_state",
                "name": "A_connection_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-connection"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ConnectionPointReference-state"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_entry_state",
                "name": "A_entry_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-entry"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_entry_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_entry_state-state",
                  "name": "state",
                  "type": "State",
                  "association": "A_entry_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_entry_state-state-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_connectionPoint_state",
                "name": "A_connectionPoint_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-connectionPoint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Pseudostate-state"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_doActivity_state",
                "name": "A_doActivity_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-doActivity"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_doActivity_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_doActivity_state-state",
                  "name": "state",
                  "type": "State",
                  "association": "A_doActivity_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_doActivity_state-state-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_exit_state",
                "name": "A_exit_state"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "State-exit"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_exit_state-state"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_exit_state-state",
                  "name": "state",
                  "type": "State",
                  "association": "A_exit_state"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_exit_state-state-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extendedRegion_region",
                "name": "A_extendedRegion_region"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Region-extendedRegion"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_extendedRegion_region-region"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_extendedRegion_region-region",
                  "name": "region",
                  "type": "Region",
                  "association": "A_extendedRegion_region"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_extendedRegion_region-region-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_extendedRegion_region-region-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subvertex_container",
                "name": "A_subvertex_container"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Region-subvertex"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Vertex-container"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinitionContext_region",
                "name": "A_redefinitionContext_region",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Region-redefinitionContext"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_region-region"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_redefinitionContext_region-_generalization.0",
                  "general": "A_redefinitionContext_redefinableElement"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinitionContext_region-region",
                  "name": "region",
                  "type": "Region",
                  "association": "A_redefinitionContext_region"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinitionContext_region-region-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinitionContext_region-region-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_transition_container",
                "name": "A_transition_container"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Region-transition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Transition-container"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_referred_protocolTransition",
                "name": "A_referred_protocolTransition",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolTransition-referred"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_referred_protocolTransition-protocolTransition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_referred_protocolTransition-protocolTransition",
                  "name": "protocolTransition",
                  "type": "ProtocolTransition",
                  "association": "A_referred_protocolTransition"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_referred_protocolTransition-protocolTransition-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_referred_protocolTransition-protocolTransition-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_preCondition_protocolTransition",
                "name": "A_preCondition_protocolTransition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolTransition-preCondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_preCondition_protocolTransition-protocolTransition"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_preCondition_protocolTransition-_generalization.0",
                  "general": "A_guard_transition"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_preCondition_protocolTransition-protocolTransition",
                  "name": "protocolTransition",
                  "type": "ProtocolTransition",
                  "association": "A_preCondition_protocolTransition"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_guard_transition-transition"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_preCondition_protocolTransition-protocolTransition-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_postCondition_owningTransition",
                "name": "A_postCondition_owningTransition"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolTransition-postCondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_postCondition_owningTransition-owningTransition"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_postCondition_owningTransition-owningTransition",
                  "name": "owningTransition",
                  "type": "ProtocolTransition",
                  "association": "A_postCondition_owningTransition"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_postCondition_owningTransition-owningTransition-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_conformance_specificMachine",
                "name": "A_conformance_specificMachine"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolStateMachine-conformance"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolConformance-specificMachine"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_generalMachine_protocolConformance",
                "name": "A_generalMachine_protocolConformance"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProtocolConformance-generalMachine"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_generalMachine_protocolConformance-protocolConformance"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_generalMachine_protocolConformance-protocolConformance",
                  "name": "protocolConformance",
                  "type": "ProtocolConformance",
                  "association": "A_generalMachine_protocolConformance"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_generalMachine_protocolConformance-protocolConformance-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_generalMachine_protocolConformance-protocolConformance-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_entry_connectionPointReference",
                "name": "A_entry_connectionPointReference"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectionPointReference-entry"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_entry_connectionPointReference-connectionPointReference"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_entry_connectionPointReference-connectionPointReference",
                  "name": "connectionPointReference",
                  "type": "ConnectionPointReference",
                  "association": "A_entry_connectionPointReference"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_entry_connectionPointReference-connectionPointReference-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_exit_connectionPointReference",
                "name": "A_exit_connectionPointReference"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConnectionPointReference-exit"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_exit_connectionPointReference-connectionPointReference"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_exit_connectionPointReference-connectionPointReference",
                  "name": "connectionPointReference",
                  "type": "ConnectionPointReference",
                  "association": "A_exit_connectionPointReference"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_exit_connectionPointReference-connectionPointReference-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "SimpleClassifiers",
            "name": "SimpleClassifiers"
          },
          "_parent": "_",
          "packageImport": {
            "_attributes": {
              "xmi:type": "uml:PackageImport",
              "xmi:id": "SimpleClassifiers-_packageImport.0",
              "importedPackage": "Classification"
            },
            "_parent": "_"
          },
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "BehavioredClassifier",
                "name": "BehavioredClassifier",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "BehavioredClassifier-_ownedComment.0",
                  "body": "A BehavioredClassifier may have InterfaceRealizations, and owns a set of Behaviors one of which may specify the behavior of the BehavioredClassifier itself."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "BehavioredClassifier"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "BehavioredClassifier-class_behavior",
                  "name": "class_behavior"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "BehavioredClassifier"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "BehavioredClassifier-class_behavior-_ownedComment.0",
                    "body": "If a behavior is classifier behavior, it does not have a specification."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "BehavioredClassifier-class_behavior"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "BehavioredClassifier-class_behavior-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "classifierBehavior->notEmpty() implies classifierBehavior.specification->isEmpty()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "BehavioredClassifier-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioredClassifier-classifierBehavior",
                    "name": "classifierBehavior",
                    "type": "Behavior",
                    "association": "A_classifierBehavior_behavioredClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "BehavioredClassifier-ownedBehavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioredClassifier-classifierBehavior-_ownedComment.0",
                      "body": "A Behavior that specifies the behavior of the BehavioredClassifier itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioredClassifier-classifierBehavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioredClassifier-classifierBehavior-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioredClassifier-interfaceRealization",
                    "name": "interfaceRealization",
                    "aggregation": "composite",
                    "type": "InterfaceRealization",
                    "association": "A_interfaceRealization_implementingClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-clientDependency"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioredClassifier-interfaceRealization-_ownedComment.0",
                      "body": "The set of InterfaceRealizations owned by the BehavioredClassifier. Interface realizations reference the Interfaces of which the BehavioredClassifier is an implementation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioredClassifier-interfaceRealization"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioredClassifier-interfaceRealization-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioredClassifier-interfaceRealization-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioredClassifier-ownedBehavior",
                    "name": "ownedBehavior",
                    "aggregation": "composite",
                    "type": "Behavior",
                    "association": "A_ownedBehavior_behavioredClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioredClassifier-ownedBehavior-_ownedComment.0",
                      "body": "Behaviors owned by a BehavioredClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioredClassifier-ownedBehavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioredClassifier-ownedBehavior-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioredClassifier-ownedBehavior-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DataType",
                "name": "DataType"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DataType-_ownedComment.0",
                  "body": "A DataType is a type whose instances are identified only by their value."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DataType"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DataType-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DataType-ownedAttribute",
                    "name": "ownedAttribute",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedAttribute_datatype"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DataType-ownedAttribute-_ownedComment.0",
                      "body": "The attributes owned by the DataType."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DataType-ownedAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DataType-ownedAttribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DataType-ownedAttribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DataType-ownedOperation",
                    "name": "ownedOperation",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Operation",
                    "association": "A_ownedOperation_datatype"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DataType-ownedOperation-_ownedComment.0",
                      "body": "The Operations owned by the DataType."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DataType-ownedOperation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DataType-ownedOperation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DataType-ownedOperation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Enumeration",
                "name": "Enumeration"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Enumeration-_ownedComment.0",
                  "body": "An Enumeration is a DataType whose values are enumerated in the model as EnumerationLiterals."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Enumeration"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Enumeration-immutable",
                  "name": "immutable"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Enumeration"
                  },
                  "_parent": "_"
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Enumeration-immutable-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "ownedAttribute->forAll(isReadOnly)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Enumeration-_generalization.0",
                  "general": "DataType"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Enumeration-ownedLiteral",
                  "name": "ownedLiteral",
                  "isOrdered": true,
                  "aggregation": "composite",
                  "type": "EnumerationLiteral",
                  "association": "A_ownedLiteral_enumeration"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Namespace-ownedMember"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Enumeration-ownedLiteral-_ownedComment.0",
                    "body": "The ordered set of literals owned by this Enumeration."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Enumeration-ownedLiteral"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Enumeration-ownedLiteral-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "Enumeration-ownedLiteral-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "EnumerationLiteral",
                "name": "EnumerationLiteral"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "EnumerationLiteral-_ownedComment.0",
                  "body": "An EnumerationLiteral is a user-defined data value for an Enumeration."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "EnumerationLiteral"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "EnumerationLiteral-_generalization.0",
                  "general": "InstanceSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "EnumerationLiteral-classifier",
                    "name": "classifier",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Enumeration",
                    "association": "A_classifier_enumerationLiteral"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "InstanceSpecification-classifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "EnumerationLiteral-classifier-_ownedComment.0",
                      "body": "The classifier of this EnumerationLiteral derived to be equal to its Enumeration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "EnumerationLiteral-classifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "EnumerationLiteral-enumeration",
                    "name": "enumeration",
                    "type": "Enumeration",
                    "association": "A_ownedLiteral_enumeration"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "EnumerationLiteral-enumeration-_ownedComment.0",
                      "body": "The Enumeration that this EnumerationLiteral is a member of."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "EnumerationLiteral-enumeration"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "EnumerationLiteral-classifier.1",
                  "name": "classifier",
                  "isQuery": true,
                  "bodyCondition": "EnumerationLiteral-classifier.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "EnumerationLiteral-classifier.1-_ownedComment.0",
                    "body": "Derivation of Enumeration::/classifier"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "EnumerationLiteral-classifier.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "EnumerationLiteral-classifier.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "EnumerationLiteral-classifier.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "EnumerationLiteral-classifier"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "EnumerationLiteral-classifier.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (enumeration)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "EnumerationLiteral-classifier.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Enumeration"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Interface",
                "name": "Interface"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Interface-_ownedComment.0",
                  "body": "Interfaces declare coherent services that are implemented by BehavioredClassifiers that implement the Interfaces via InterfaceRealizations."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Interface"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Interface-visibility",
                  "name": "visibility"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Interface"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Interface-visibility-_ownedComment.0",
                    "body": "The visibility of all Features owned by an Interface must be public."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Interface-visibility"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Interface-visibility-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "feature->forAll(visibility = VisibilityKind::public)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Interface-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-nestedClassifier",
                    "name": "nestedClassifier",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Classifier",
                    "association": "A_nestedClassifier_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-nestedClassifier-_ownedComment.0",
                      "body": "References all the Classifiers that are defined (nested) within the Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-nestedClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-nestedClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interface-nestedClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-ownedAttribute",
                    "name": "ownedAttribute",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedAttribute_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-ownedAttribute-_ownedComment.0",
                      "body": "The attributes (i.e., the Properties) owned by the Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-ownedAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-ownedAttribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interface-ownedAttribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-ownedOperation",
                    "name": "ownedOperation",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Operation",
                    "association": "A_ownedOperation_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-ownedOperation-_ownedComment.0",
                      "body": "The Operations owned by the Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-ownedOperation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-ownedOperation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interface-ownedOperation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-ownedReception",
                    "name": "ownedReception",
                    "aggregation": "composite",
                    "type": "Reception",
                    "association": "A_ownedReception_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-ownedReception-_ownedComment.0",
                      "body": "Receptions that objects providing this Interface are willing to accept."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-ownedReception"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-ownedReception-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interface-ownedReception-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-protocol",
                    "name": "protocol",
                    "aggregation": "composite",
                    "type": "ProtocolStateMachine",
                    "association": "A_protocol_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-protocol-_ownedComment.0",
                      "body": "References a ProtocolStateMachine specifying the legal sequences of the invocation of the BehavioralFeatures described in the Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-protocol"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-protocol-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interface-redefinedInterface",
                    "name": "redefinedInterface",
                    "type": "Interface",
                    "association": "A_redefinedInterface_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Classifier-redefinedClassifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interface-redefinedInterface-_ownedComment.0",
                      "body": "References all the Interfaces redefined by this Interface."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interface-redefinedInterface"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interface-redefinedInterface-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interface-redefinedInterface-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InterfaceRealization",
                "name": "InterfaceRealization"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InterfaceRealization-_ownedComment.0",
                  "body": "An InterfaceRealization is a specialized realization relationship between a BehavioredClassifier and an Interface. This relationship signifies that the realizing BehavioredClassifier conforms to the contract specified by the Interface."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InterfaceRealization"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InterfaceRealization-_generalization.0",
                  "general": "Realization"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InterfaceRealization-contract",
                    "name": "contract",
                    "type": "Interface",
                    "association": "A_contract_interfaceRealization"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Dependency-supplier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InterfaceRealization-contract-_ownedComment.0",
                      "body": "References the Interface specifying the conformance contract."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InterfaceRealization-contract"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InterfaceRealization-implementingClassifier",
                    "name": "implementingClassifier",
                    "type": "BehavioredClassifier",
                    "association": "A_interfaceRealization_implementingClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Dependency-client"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InterfaceRealization-implementingClassifier-_ownedComment.0",
                      "body": "References the BehavioredClassifier that owns this InterfaceRealization, i.e., the BehavioredClassifier that realizes the Interface to which it refers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InterfaceRealization-implementingClassifier"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "PrimitiveType",
                "name": "PrimitiveType"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PrimitiveType-_ownedComment.0",
                  "body": "A PrimitiveType defines a predefined DataType, without any substructure. A PrimitiveType may have an algebra and operations defined outside of UML, for example, mathematically."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PrimitiveType"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "PrimitiveType-_generalization.0",
                  "general": "DataType"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Reception",
                "name": "Reception"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Reception-_ownedComment.0",
                  "body": "A Reception is a declaration stating that a Classifier is prepared to react to the receipt of a Signal."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Reception"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Reception-same_name_as_signal",
                    "name": "same_name_as_signal"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Reception"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Reception-same_name_as_signal-_ownedComment.0",
                      "body": "A Reception has the same name as its signal"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Reception-same_name_as_signal"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Reception-same_name_as_signal-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "name = signal.name"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Reception-same_structure_as_signal",
                    "name": "same_structure_as_signal"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Reception"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Reception-same_structure_as_signal-_ownedComment.0",
                      "body": "A Reception's parameters match the ownedAttributes of its signal by name, type, and multiplicity"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Reception-same_structure_as_signal"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Reception-same_structure_as_signal-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "signal.ownedAttribute->size() = ownedParameter->size() and\nSequence{1..signal.ownedAttribute->size()}->forAll( i | \n    ownedParameter->at(i).direction = ParameterDirectionKind::_'in' and \n    ownedParameter->at(i).name = signal.ownedAttribute->at(i).name and\n    ownedParameter->at(i).type = signal.ownedAttribute->at(i).type and\n    ownedParameter->at(i).lowerBound() = signal.ownedAttribute->at(i).lowerBound() and\n    ownedParameter->at(i).upperBound() = signal.ownedAttribute->at(i).upperBound()\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Reception-_generalization.0",
                  "general": "BehavioralFeature"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Reception-signal",
                  "name": "signal",
                  "type": "Signal",
                  "association": "A_signal_reception"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Reception-signal-_ownedComment.0",
                    "body": "The Signal that this Reception handles."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Reception-signal"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Signal",
                "name": "Signal"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Signal-_ownedComment.0",
                  "body": "A Signal is a specification of a kind of communication between objects in which a reaction is asynchronously triggered in the receiver without a reply."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Signal"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Signal-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Signal-ownedAttribute",
                  "name": "ownedAttribute",
                  "isOrdered": true,
                  "aggregation": "composite",
                  "type": "Property",
                  "association": "A_ownedAttribute_owningSignal"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Classifier-attribute"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  }
                ],
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Signal-ownedAttribute-_ownedComment.0",
                    "body": "The attributes owned by the Signal."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Signal-ownedAttribute"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Signal-ownedAttribute-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "Signal-ownedAttribute-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_owningSignal",
                "name": "A_ownedAttribute_owningSignal"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Signal-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedAttribute_owningSignal-owningSignal"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedAttribute_owningSignal-owningSignal",
                  "name": "owningSignal",
                  "type": "Signal",
                  "association": "A_ownedAttribute_owningSignal"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "A_attribute_classifier-classifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedAttribute_owningSignal-owningSignal-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signal_reception",
                "name": "A_signal_reception"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Reception-signal"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signal_reception-reception"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signal_reception-reception",
                  "name": "reception",
                  "type": "Reception",
                  "association": "A_signal_reception"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signal_reception-reception-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signal_reception-reception-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_contract_interfaceRealization",
                "name": "A_contract_interfaceRealization"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InterfaceRealization-contract"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_contract_interfaceRealization-interfaceRealization"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_contract_interfaceRealization-interfaceRealization",
                  "name": "interfaceRealization",
                  "type": "InterfaceRealization",
                  "association": "A_contract_interfaceRealization"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_contract_interfaceRealization-interfaceRealization-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_contract_interfaceRealization-interfaceRealization-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_protocol_interface",
                "name": "A_protocol_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-protocol"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_protocol_interface-interface"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_protocol_interface-interface",
                  "name": "interface",
                  "type": "Interface",
                  "association": "A_protocol_interface"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "A_protocol_interface-interface-_ownedComment.0",
                    "body": "Specifies the namespace in which the protocol state machine is defined."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "A_protocol_interface-interface"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_protocol_interface-interface-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedReception_interface",
                "name": "A_ownedReception_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-ownedReception"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedReception_interface-interface"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedReception_interface-interface",
                  "name": "interface",
                  "type": "Interface",
                  "association": "A_ownedReception_interface"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Feature-featuringClassifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedReception_interface-interface-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedInterface_interface",
                "name": "A_redefinedInterface_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-redefinedInterface"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedInterface_interface-interface"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedInterface_interface-interface",
                  "name": "interface",
                  "type": "Interface",
                  "association": "A_redefinedInterface_interface"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedClassifier_classifier-classifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedInterface_interface-interface-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedInterface_interface-interface-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nestedClassifier_interface",
                "name": "A_nestedClassifier_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-nestedClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_nestedClassifier_interface-interface"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_nestedClassifier_interface-interface",
                  "name": "interface",
                  "type": "Interface",
                  "association": "A_nestedClassifier_interface"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_nestedClassifier_interface-interface-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedOperation_interface",
                "name": "A_ownedOperation_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-ownedOperation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Operation-interface"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_interface",
                "name": "A_ownedAttribute_interface"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interface-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-interface"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_enumerationLiteral",
                "name": "A_classifier_enumerationLiteral",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "EnumerationLiteral-classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifier_enumerationLiteral-enumerationLiteral"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_classifier_enumerationLiteral-_generalization.0",
                  "general": "A_classifier_instanceSpecification"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifier_enumerationLiteral-enumerationLiteral",
                  "name": "enumerationLiteral",
                  "type": "EnumerationLiteral",
                  "association": "A_classifier_enumerationLiteral"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_classifier_instanceSpecification-instanceSpecification"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifier_enumerationLiteral-enumerationLiteral-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_classifier_enumerationLiteral-enumerationLiteral-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedLiteral_enumeration",
                "name": "A_ownedLiteral_enumeration"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Enumeration-ownedLiteral"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "EnumerationLiteral-enumeration"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_datatype",
                "name": "A_ownedAttribute_datatype"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DataType-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-datatype"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedOperation_datatype",
                "name": "A_ownedOperation_datatype"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DataType-ownedOperation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Operation-datatype"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedBehavior_behavioredClassifier",
                "name": "A_ownedBehavior_behavioredClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioredClassifier-ownedBehavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedBehavior_behavioredClassifier-behavioredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedBehavior_behavioredClassifier-behavioredClassifier",
                  "name": "behavioredClassifier",
                  "type": "BehavioredClassifier",
                  "association": "A_ownedBehavior_behavioredClassifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedBehavior_behavioredClassifier-behavioredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifierBehavior_behavioredClassifier",
                "name": "A_classifierBehavior_behavioredClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioredClassifier-classifierBehavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifierBehavior_behavioredClassifier-behavioredClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_classifierBehavior_behavioredClassifier-_generalization.0",
                  "general": "A_ownedBehavior_behavioredClassifier"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifierBehavior_behavioredClassifier-behavioredClassifier",
                  "name": "behavioredClassifier",
                  "type": "BehavioredClassifier",
                  "association": "A_classifierBehavior_behavioredClassifier"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_ownedBehavior_behavioredClassifier-behavioredClassifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifierBehavior_behavioredClassifier-behavioredClassifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_interfaceRealization_implementingClassifier",
                "name": "A_interfaceRealization_implementingClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioredClassifier-interfaceRealization"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "InterfaceRealization-implementingClassifier"
                  },
                  "_parent": "_"
                }
              ]
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Packages",
            "name": "Packages"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Packages-_packageImport.0",
                "importedPackage": "StructuredClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Packages-_packageImport.1",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Packages-_packageImport.2",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Extension",
                "name": "Extension"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Extension-_ownedComment.0",
                  "body": "An extension is used to indicate that the properties of a metaclass are extended through a stereotype, and gives the ability to flexibly add (and later remove) stereotypes to classes."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Extension"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Extension-non_owned_end",
                    "name": "non_owned_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Extension"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-non_owned_end-_ownedComment.0",
                      "body": "The non-owned end of an Extension is typed by a Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-non_owned_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Extension-non_owned_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "metaclassEnd()->notEmpty() and metaclassEnd().type.oclIsKindOf(Class)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Extension-is_binary",
                    "name": "is_binary"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Extension"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-is_binary-_ownedComment.0",
                      "body": "An Extension is binary, i.e., it has only two memberEnds."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-is_binary"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Extension-is_binary-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "memberEnd->size() = 2"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Extension-_generalization.0",
                  "general": "Association"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extension-isRequired",
                    "name": "isRequired",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-isRequired-_ownedComment.0",
                      "body": "Indicates whether an instance of the extending stereotype must be created when an instance of the extended class is created. The attribute value is derived from the value of the lower property of the ExtensionEnd referenced by Extension::ownedEnd; a lower value of 1 means that isRequired is true, but otherwise it is false. Since the default value of ExtensionEnd::lower is 0, the default value of isRequired is false."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-isRequired"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extension-metaclass",
                    "name": "metaclass",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Class",
                    "association": "A_extension_metaclass"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-metaclass-_ownedComment.0",
                      "body": "References the Class that is extended through an Extension. The property is derived from the type of the memberEnd that is not the ownedEnd."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-metaclass"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Extension-ownedEnd",
                    "name": "ownedEnd",
                    "aggregation": "composite",
                    "type": "ExtensionEnd",
                    "association": "A_ownedEnd_extension"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "Association-ownedEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-ownedEnd-_ownedComment.0",
                      "body": "References the end of the extension that is typed by a Stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-ownedEnd"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Extension-isRequired.1",
                    "name": "isRequired",
                    "isQuery": true,
                    "bodyCondition": "Extension-isRequired.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-isRequired.1-_ownedComment.0",
                      "body": "The query isRequired() is true if the owned end has a multiplicity with the lower bound of 1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-isRequired.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Extension-isRequired.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Extension-isRequired.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Extension-isRequired"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Extension-isRequired.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedEnd.lowerBound() = 1)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Extension-isRequired.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Extension-metaclass.1",
                    "name": "metaclass",
                    "isQuery": true,
                    "bodyCondition": "Extension-metaclass.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-metaclass.1-_ownedComment.0",
                      "body": "The query metaclass() returns the metaclass that is being extended (as opposed to the extending stereotype)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-metaclass.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Extension-metaclass.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Extension-metaclass.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Extension-metaclass"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Extension-metaclass.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (metaclassEnd().type.oclAsType(Class))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Extension-metaclass.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Class"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Extension-metaclassEnd",
                    "name": "metaclassEnd",
                    "isQuery": true,
                    "bodyCondition": "Extension-metaclassEnd-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Extension-metaclassEnd-_ownedComment.0",
                      "body": "The query metaclassEnd() returns the Property that is typed by a metaclass (as opposed to a stereotype)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-metaclassEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Extension-metaclassEnd-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Extension-metaclassEnd"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Extension-metaclassEnd-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (memberEnd->reject(p | ownedEnd->includes(p.oclAsType(ExtensionEnd)))->any(true))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Extension-metaclassEnd-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Property"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExtensionEnd",
                "name": "ExtensionEnd"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExtensionEnd-_ownedComment.0",
                  "body": "An extension end is used to tie an extension to a stereotype when extending a metaclass.\nThe default multiplicity of an extension end is 0..1."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExtensionEnd"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExtensionEnd-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExtensionEnd-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of ExtensionEnd is 0..1 or 1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExtensionEnd-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExtensionEnd-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(lowerBound() = 0 or lowerBound() = 1) and upperBound() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExtensionEnd-aggregation",
                    "name": "aggregation"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExtensionEnd-aggregation-_ownedComment.0",
                      "body": "The aggregation of an ExtensionEnd is composite."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExtensionEnd-aggregation"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExtensionEnd-aggregation-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.aggregation = AggregationKind::composite"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExtensionEnd-_generalization.0",
                  "general": "Property"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExtensionEnd-lower",
                    "name": "lower",
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                    },
                    "_parent": "_"
                  },
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement-lower"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExtensionEnd-lower-_ownedComment.0",
                      "body": "This redefinition changes the default multiplicity of association ends, since model elements are usually extended by 0 or 1 instance of the extension stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExtensionEnd-lower"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ExtensionEnd-lower-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExtensionEnd-type",
                    "name": "type",
                    "type": "Stereotype",
                    "association": "A_type_extensionEnd"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "TypedElement-type"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExtensionEnd-type-_ownedComment.0",
                      "body": "References the type of the ExtensionEnd. Note that this association restricts the possible types of an ExtensionEnd to only be Stereotypes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExtensionEnd-type"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ExtensionEnd-lowerBound",
                  "name": "lowerBound",
                  "isQuery": true,
                  "bodyCondition": "ExtensionEnd-lowerBound-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "MultiplicityElement-lowerBound"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExtensionEnd-lowerBound-_ownedComment.0",
                    "body": "The query lowerBound() returns the lower bound of the multiplicity as an Integer. This is a redefinition of the default lower bound, which normally, for MultiplicityElements, evaluates to 1 if empty."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionEnd-lowerBound"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ExtensionEnd-lowerBound-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ExtensionEnd-lowerBound"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ExtensionEnd-lowerBound-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if lowerValue=null then 0 else lowerValue.integerValue() endif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ExtensionEnd-lowerBound-result",
                    "name": "result",
                    "direction": "return"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                    },
                    "_parent": "_"
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ExtensionEnd-lowerBound-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Image",
                "name": "Image"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Image-_ownedComment.0",
                  "body": "Physical definition of a graphical image."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Image"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Image-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Image-content",
                    "name": "content"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Image-content-_ownedComment.0",
                      "body": "This contains the serialization of the image according to the format. The value could represent a bitmap, image such as a GIF file, or drawing 'instructions' using a standard such as Scalable Vector Graphic (SVG) (which is XML based)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Image-content"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Image-content-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Image-format",
                    "name": "format"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Image-format-_ownedComment.0",
                      "body": "This indicates the format of the content, which is how the string content should be interpreted. The following values are reserved: SVG, GIF, PNG, JPG, WMF, EMF, BMP. In addition the prefix 'MIME: ' is also reserved. This option can be used as an alternative to express the reserved values above, for example \"SVG\" could instead be expressed as \"MIME: image/svg+xml\"."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Image-format"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Image-format-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Image-location",
                    "name": "location"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Image-location-_ownedComment.0",
                      "body": "This contains a location that can be used by a tool to locate the image as an alternative to embedding it in the stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Image-location"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Image-location-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Model",
                "name": "Model"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Model-_ownedComment.0",
                  "body": "A model captures a view of a physical system. It is an abstraction of the physical system, with a certain purpose. This purpose determines what is to be included in the model and what is irrelevant. Thus the model completely describes those aspects of the physical system that are relevant to the purpose of the model, at the appropriate level of detail."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Model"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Model-_generalization.0",
                  "general": "Package"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Model-viewpoint",
                  "name": "viewpoint"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Model-viewpoint-_ownedComment.0",
                    "body": "The name of the viewpoint that is expressed by a model (this name may refer to a profile definition)."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Model-viewpoint"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Model-viewpoint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Package",
                "name": "Package"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Package-_ownedComment.0",
                  "body": "A package can have one or more profile applications to indicate which profiles have been applied. Because a profile is a package, it is possible to apply a profile not only to packages, but also to profiles.\nPackage specializes TemplateableElement and PackageableElement specializes ParameterableElement to specify that a package can be used as a template and a PackageableElement as a template parameter.\nA package is used to group elements, and provides a namespace for the grouped elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Package"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Package-elements_public_or_private",
                  "name": "elements_public_or_private"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Package"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Package-elements_public_or_private-_ownedComment.0",
                    "body": "If an element that is owned by a package has visibility, it is public or private."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Package-elements_public_or_private"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Package-elements_public_or_private-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "packagedElement->forAll(e | e.visibility<> null implies e.visibility = VisibilityKind::public or e.visibility = VisibilityKind::private)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Package-_generalization.2",
                    "general": "PackageableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Package-_generalization.0",
                    "general": "TemplateableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Package-_generalization.1",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-URI",
                    "name": "URI"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-URI-_ownedComment.0",
                      "body": "Provides an identifier for the package that can be used for many purposes. A URI is the universally unique identification of the package following the IETF URI specification, RFC 2396 http://www.ietf.org/rfc/rfc2396.txt and it must comply with those syntax rules."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-URI"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-URI-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-nestedPackage",
                    "name": "nestedPackage",
                    "aggregation": "composite",
                    "isDerived": true,
                    "type": "Package",
                    "association": "A_nestedPackage_nestingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Package-packagedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-nestedPackage-_ownedComment.0",
                      "body": "References the packaged elements that are Packages."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-nestedPackage"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-nestedPackage-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-nestedPackage-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-nestingPackage",
                    "name": "nestingPackage",
                    "type": "Package",
                    "association": "A_nestedPackage_nestingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_packagedElement_owningPackage-owningPackage"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-nestingPackage-_ownedComment.0",
                      "body": "References the Package that owns this Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-nestingPackage"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-nestingPackage-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-ownedStereotype",
                    "name": "ownedStereotype",
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "type": "Stereotype",
                    "association": "A_ownedStereotype_owningPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Package-packagedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-ownedStereotype-_ownedComment.0",
                      "body": "References the Stereotypes that are owned by the Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-ownedStereotype"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-ownedStereotype-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-ownedStereotype-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-ownedType",
                    "name": "ownedType",
                    "aggregation": "composite",
                    "isDerived": true,
                    "type": "Type",
                    "association": "A_ownedType_package"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Package-packagedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-ownedType-_ownedComment.0",
                      "body": "References the packaged elements that are Types."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-ownedType"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-ownedType-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-ownedType-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-packageMerge",
                    "name": "packageMerge",
                    "aggregation": "composite",
                    "type": "PackageMerge",
                    "association": "A_packageMerge_receivingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-packageMerge-_ownedComment.0",
                      "body": "References the PackageMerges that are owned by this Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-packageMerge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-packageMerge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-packageMerge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-packagedElement",
                    "name": "packagedElement",
                    "aggregation": "composite",
                    "type": "PackageableElement",
                    "association": "A_packagedElement_owningPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-packagedElement-_ownedComment.0",
                      "body": "Specifies the packageable elements that are owned by this Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-packagedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-packagedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-packagedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Package-profileApplication",
                    "name": "profileApplication",
                    "aggregation": "composite",
                    "type": "ProfileApplication",
                    "association": "A_profileApplication_applyingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-profileApplication-_ownedComment.0",
                      "body": "References the ProfileApplications that indicate which profiles have been applied to the Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-profileApplication"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Package-profileApplication-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Package-profileApplication-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-allApplicableStereotypes",
                    "name": "allApplicableStereotypes",
                    "isQuery": true,
                    "bodyCondition": "Package-allApplicableStereotypes-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-allApplicableStereotypes-_ownedComment.0",
                      "body": "The query allApplicableStereotypes() returns all the directly or indirectly owned stereotypes, including stereotypes contained in sub-profiles."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-allApplicableStereotypes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-allApplicableStereotypes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-allApplicableStereotypes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-allApplicableStereotypes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (let ownedPackages : Bag(Package) = ownedMember->select(oclIsKindOf(Package))->collect(oclAsType(Package)) in\n ownedStereotype->union(ownedPackages.allApplicableStereotypes())->flatten()->asSet()\n)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-allApplicableStereotypes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Stereotype"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-allApplicableStereotypes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Package-allApplicableStereotypes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-containingProfile",
                    "name": "containingProfile",
                    "isQuery": true,
                    "bodyCondition": "Package-containingProfile-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-containingProfile-_ownedComment.0",
                      "body": "The query containingProfile() returns the closest profile directly or indirectly containing this package (or this package itself, if it is a profile)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-containingProfile"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-containingProfile-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-containingProfile"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-containingProfile-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if self.oclIsKindOf(Profile) then \n\tself.oclAsType(Profile)\nelse\n\tself.namespace.oclAsType(Package).containingProfile()\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-containingProfile-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Profile"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-containingProfile-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-makesVisible",
                    "name": "makesVisible",
                    "isQuery": true,
                    "bodyCondition": "Package-makesVisible-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Package-makesVisible-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-makesVisible-_ownedComment.0",
                      "body": "The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-makesVisible"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Package-makesVisible-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Package-makesVisible"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Package-makesVisible-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "member->includes(el)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Package-makesVisible-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Package-makesVisible"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Package-makesVisible-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (ownedMember->includes(el) or\n(elementImport->select(ei|ei.importedElement = VisibilityKind::public)->collect(importedElement.oclAsType(NamedElement))->includes(el)) or\n(packageImport->select(visibility = VisibilityKind::public)->collect(importedPackage.member->includes(el))->notEmpty()))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Package-makesVisible-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Package-makesVisible-el",
                        "name": "el",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-mustBeOwned",
                    "name": "mustBeOwned",
                    "isQuery": true,
                    "bodyCondition": "Package-mustBeOwned-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Element-mustBeOwned"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-mustBeOwned-_ownedComment.0",
                      "body": "The query mustBeOwned() indicates whether elements of this type must have an owner."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-mustBeOwned"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-mustBeOwned-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-mustBeOwned"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-mustBeOwned-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (false)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-mustBeOwned-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-nestedPackage.1",
                    "name": "nestedPackage",
                    "isQuery": true,
                    "bodyCondition": "Package-nestedPackage.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-nestedPackage.1-_ownedComment.0",
                      "body": "Derivation for Package::/nestedPackage "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-nestedPackage.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-nestedPackage.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Package-nestedPackage.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Package-nestedPackage"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-nestedPackage.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (packagedElement->select(oclIsKindOf(Package))->collect(oclAsType(Package))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-nestedPackage.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Package"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-nestedPackage.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Package-nestedPackage.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-ownedStereotype.1",
                    "name": "ownedStereotype",
                    "isQuery": true,
                    "bodyCondition": "Package-ownedStereotype.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-ownedStereotype.1-_ownedComment.0",
                      "body": "Derivation for Package::/ownedStereotype "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-ownedStereotype.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-ownedStereotype.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Package-ownedStereotype.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Package-ownedStereotype"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-ownedStereotype.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (packagedElement->select(oclIsKindOf(Stereotype))->collect(oclAsType(Stereotype))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-ownedStereotype.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Stereotype"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-ownedStereotype.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Package-ownedStereotype.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-ownedType.1",
                    "name": "ownedType",
                    "isQuery": true,
                    "bodyCondition": "Package-ownedType.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-ownedType.1-_ownedComment.0",
                      "body": "Derivation for Package::/ownedType"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-ownedType.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-ownedType.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Package-ownedType.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Package-ownedType"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-ownedType.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (packagedElement->select(oclIsKindOf(Type))->collect(oclAsType(Type))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-ownedType.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Type"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-ownedType.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Package-ownedType.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Package-visibleMembers",
                    "name": "visibleMembers",
                    "isQuery": true,
                    "bodyCondition": "Package-visibleMembers-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Package-visibleMembers-_ownedComment.0",
                      "body": "The query visibleMembers() defines which members of a Package can be accessed outside it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-visibleMembers"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Package-visibleMembers-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Package-visibleMembers"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Package-visibleMembers-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (member->select( m | m.oclIsKindOf(PackageableElement) and self.makesVisible(m))->collect(oclAsType(PackageableElement))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Package-visibleMembers-result",
                      "name": "result",
                      "direction": "return",
                      "type": "PackageableElement"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Package-visibleMembers-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Package-visibleMembers-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "PackageMerge",
                "name": "PackageMerge"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PackageMerge-_ownedComment.0",
                  "body": "A package merge defines how the contents of one package are extended by the contents of another package."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PackageMerge"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "PackageMerge-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "PackageMerge-mergedPackage",
                    "name": "mergedPackage",
                    "type": "Package",
                    "association": "A_mergedPackage_packageMerge"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PackageMerge-mergedPackage-_ownedComment.0",
                      "body": "References the Package that is to be merged with the receiving package of the PackageMerge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PackageMerge-mergedPackage"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "PackageMerge-receivingPackage",
                    "name": "receivingPackage",
                    "type": "Package",
                    "association": "A_packageMerge_receivingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PackageMerge-receivingPackage-_ownedComment.0",
                      "body": "References the Package that is being extended with the contents of the merged package of the PackageMerge."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PackageMerge-receivingPackage"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Profile",
                "name": "Profile"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Profile-_ownedComment.0",
                  "body": "A profile defines limited extensions to a reference metamodel with the purpose of adapting the metamodel to a specific platform or domain."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Profile"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Profile-metaclass_reference_not_specialized",
                    "name": "metaclass_reference_not_specialized"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Profile"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Profile-metaclass_reference_not_specialized-_ownedComment.0",
                      "body": "An element imported as a metaclassReference is not specialized or generalized in a Profile."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Profile-metaclass_reference_not_specialized"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Profile-metaclass_reference_not_specialized-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "metaclassReference.importedElement->\n\tselect(c | c.oclIsKindOf(Classifier) and\n\t\t(c.oclAsType(Classifier).allParents()->collect(namespace)->includes(self)))->isEmpty()\nand \npackagedElement->\n    select(oclIsKindOf(Classifier))->collect(oclAsType(Classifier).allParents())->\n       intersection(metaclassReference.importedElement->select(oclIsKindOf(Classifier))->collect(oclAsType(Classifier)))->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Profile-references_same_metamodel",
                    "name": "references_same_metamodel"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Profile"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Profile-references_same_metamodel-_ownedComment.0",
                      "body": "All elements imported either as metaclassReferences or through metamodelReferences are members of the same base reference metamodel."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Profile-references_same_metamodel"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Profile-references_same_metamodel-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "metamodelReference.importedPackage.elementImport.importedElement.allOwningPackages()->\n  union(metaclassReference.importedElement.allOwningPackages() )->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Profile-_generalization.0",
                  "general": "Package"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Profile-metaclassReference",
                    "name": "metaclassReference",
                    "aggregation": "composite",
                    "type": "ElementImport",
                    "association": "A_metaclassReference_profile"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-elementImport"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Profile-metaclassReference-_ownedComment.0",
                      "body": "References a metaclass that may be extended."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Profile-metaclassReference"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Profile-metaclassReference-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Profile-metaclassReference-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Profile-metamodelReference",
                    "name": "metamodelReference",
                    "aggregation": "composite",
                    "type": "PackageImport",
                    "association": "A_metamodelReference_profile"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-packageImport"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Profile-metamodelReference-_ownedComment.0",
                      "body": "References a package containing (directly or indirectly) metaclasses that may be extended."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Profile-metamodelReference"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Profile-metamodelReference-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Profile-metamodelReference-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ProfileApplication",
                "name": "ProfileApplication"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ProfileApplication-_ownedComment.0",
                  "body": "A profile application is used to show which profiles have been applied to a package."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ProfileApplication"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ProfileApplication-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProfileApplication-appliedProfile",
                    "name": "appliedProfile",
                    "type": "Profile",
                    "association": "A_appliedProfile_profileApplication"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProfileApplication-appliedProfile-_ownedComment.0",
                      "body": "References the Profiles that are applied to a Package through this ProfileApplication."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProfileApplication-appliedProfile"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProfileApplication-applyingPackage",
                    "name": "applyingPackage",
                    "type": "Package",
                    "association": "A_profileApplication_applyingPackage"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProfileApplication-applyingPackage-_ownedComment.0",
                      "body": "The package that owns the profile application."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProfileApplication-applyingPackage"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ProfileApplication-isStrict",
                    "name": "isStrict"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ProfileApplication-isStrict-_ownedComment.0",
                      "body": "Specifies that the Profile filtering rules for the metaclasses of the referenced metamodel shall be strictly applied."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ProfileApplication-isStrict"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ProfileApplication-isStrict-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Stereotype",
                "name": "Stereotype"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Stereotype-_ownedComment.0",
                  "body": "A stereotype defines how an existing metaclass may be extended, and enables the use of platform or domain specific terminology or notation in place of, or in addition to, the ones used for the extended metaclass."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Stereotype"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-binaryAssociationsOnly",
                    "name": "binaryAssociationsOnly"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-binaryAssociationsOnly-_ownedComment.0",
                      "body": "Stereotypes may only participate in binary associations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-binaryAssociationsOnly"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-binaryAssociationsOnly-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedAttribute.association->forAll(memberEnd->size()=2)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-generalize",
                    "name": "generalize"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-generalize-_ownedComment.0",
                      "body": "A Stereotype may only generalize or specialize another Stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-generalize"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-generalize-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "allParents()->forAll(oclIsKindOf(Stereotype)) \nand Classifier.allInstances()->forAll(c | c.allParents()->exists(oclIsKindOf(Stereotype)) implies c.oclIsKindOf(Stereotype))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-name_not_clash",
                    "name": "name_not_clash"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-name_not_clash-_ownedComment.0",
                      "body": "Stereotype names should not clash with keyword names for the extended model element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-name_not_clash"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-name_not_clash-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-associationEndOwnership",
                    "name": "associationEndOwnership"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-associationEndOwnership-_ownedComment.0",
                      "body": "Where a stereotype’s property is an association end for an association other than a kind of extension, and the other end is not a stereotype, the other end must be owned by the association itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-associationEndOwnership"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-associationEndOwnership-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedAttribute\n->select(association->notEmpty() and not association.oclIsKindOf(Extension) and not type.oclIsKindOf(Stereotype))\n->forAll(opposite.owner = association)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-base_property_upper_bound",
                    "name": "base_property_upper_bound"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-base_property_upper_bound-_ownedComment.0",
                      "body": "The upper bound of base-properties is exactly 1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-base_property_upper_bound"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-base_property_upper_bound-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-base_property_multiplicity_single_extension",
                    "name": "base_property_multiplicity_single_extension"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-base_property_multiplicity_single_extension-_ownedComment.0",
                      "body": "If a Stereotype extends only one metaclass, the multiplicity of the corresponding base-property shall be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-base_property_multiplicity_single_extension"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-base_property_multiplicity_single_extension-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Stereotype-base_property_multiplicity_multiple_extension",
                    "name": "base_property_multiplicity_multiple_extension"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Stereotype"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-base_property_multiplicity_multiple_extension-_ownedComment.0",
                      "body": "If a Stereotype extends more than one metaclass, the multiplicity of the corresponding base-properties shall be [0..1]. At any point in time, only one of these base-properties can contain a metaclass instance during runtime."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-base_property_multiplicity_multiple_extension"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Stereotype-base_property_multiplicity_multiple_extension-_specification"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Stereotype-_generalization.0",
                  "general": "Class"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Stereotype-icon",
                    "name": "icon",
                    "aggregation": "composite",
                    "type": "Image",
                    "association": "A_icon_stereotype"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-icon-_ownedComment.0",
                      "body": "Stereotype can change the graphical appearance of the extended model element by using attached icons. When this association is not null, it references the location of the icon content to be displayed within diagrams presenting the extended model elements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-icon"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Stereotype-icon-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Stereotype-icon-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Stereotype-profile",
                    "name": "profile",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Profile",
                    "association": "A_profile_stereotype"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-profile-_ownedComment.0",
                      "body": "The profile that directly or indirectly contains this stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-profile"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Stereotype-containingProfile",
                    "name": "containingProfile",
                    "isQuery": true,
                    "bodyCondition": "Stereotype-containingProfile-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-containingProfile-_ownedComment.0",
                      "body": "The query containingProfile returns the closest profile directly or indirectly containing this stereotype."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-containingProfile"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Stereotype-containingProfile-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-containingProfile"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Stereotype-containingProfile-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.namespace.oclAsType(Package).containingProfile())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Stereotype-containingProfile-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Profile"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Stereotype-profile.1",
                    "name": "profile",
                    "isQuery": true,
                    "bodyCondition": "Stereotype-profile.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Stereotype-profile.1-_ownedComment.0",
                      "body": "A stereotype must be contained, directly or indirectly, in a profile."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Stereotype-profile.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Stereotype-profile.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Stereotype-profile.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Stereotype-profile"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Stereotype-profile.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.containingProfile())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Stereotype-profile.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Profile"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_profile_stereotype",
                "name": "A_profile_stereotype",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Stereotype-profile"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_profile_stereotype-stereotype"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_profile_stereotype-stereotype",
                  "name": "stereotype",
                  "type": "Stereotype",
                  "association": "A_profile_stereotype"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_profile_stereotype-stereotype-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_profile_stereotype-stereotype-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_icon_stereotype",
                "name": "A_icon_stereotype"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Stereotype-icon"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_icon_stereotype-stereotype"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_icon_stereotype-stereotype",
                  "name": "stereotype",
                  "type": "Stereotype",
                  "association": "A_icon_stereotype"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_icon_stereotype-stereotype-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_appliedProfile_profileApplication",
                "name": "A_appliedProfile_profileApplication"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ProfileApplication-appliedProfile"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_appliedProfile_profileApplication-profileApplication"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_appliedProfile_profileApplication-profileApplication",
                  "name": "profileApplication",
                  "type": "ProfileApplication",
                  "association": "A_appliedProfile_profileApplication"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_appliedProfile_profileApplication-profileApplication-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_appliedProfile_profileApplication-profileApplication-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_metaclassReference_profile",
                "name": "A_metaclassReference_profile"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Profile-metaclassReference"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_metaclassReference_profile-profile"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_metaclassReference_profile-profile",
                  "name": "profile",
                  "type": "Profile",
                  "association": "A_metaclassReference_profile"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "ElementImport-importingNamespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_metaclassReference_profile-profile-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_metamodelReference_profile",
                "name": "A_metamodelReference_profile"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Profile-metamodelReference"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_metamodelReference_profile-profile"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_metamodelReference_profile-profile",
                  "name": "profile",
                  "type": "Profile",
                  "association": "A_metamodelReference_profile"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "PackageImport-importingNamespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_metamodelReference_profile-profile-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_mergedPackage_packageMerge",
                "name": "A_mergedPackage_packageMerge"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "PackageMerge-mergedPackage"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_mergedPackage_packageMerge-packageMerge"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_mergedPackage_packageMerge-packageMerge",
                  "name": "packageMerge",
                  "type": "PackageMerge",
                  "association": "A_mergedPackage_packageMerge"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_mergedPackage_packageMerge-packageMerge-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_mergedPackage_packageMerge-packageMerge-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_packagedElement_owningPackage",
                "name": "A_packagedElement_owningPackage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-packagedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_packagedElement_owningPackage-owningPackage"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_packagedElement_owningPackage-owningPackage",
                  "name": "owningPackage",
                  "type": "Package",
                  "association": "A_packagedElement_owningPackage"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_packagedElement_owningPackage-owningPackage-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_packageMerge_receivingPackage",
                "name": "A_packageMerge_receivingPackage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-packageMerge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "PackageMerge-receivingPackage"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nestedPackage_nestingPackage",
                "name": "A_nestedPackage_nestingPackage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-nestedPackage"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Package-nestingPackage"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_profileApplication_applyingPackage",
                "name": "A_profileApplication_applyingPackage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-profileApplication"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ProfileApplication-applyingPackage"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedType_package",
                "name": "A_ownedType_package"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-ownedType"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Type-package"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedStereotype_owningPackage",
                "name": "A_ownedStereotype_owningPackage",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Package-ownedStereotype"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedStereotype_owningPackage-owningPackage"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_ownedStereotype_owningPackage-_generalization.0",
                  "general": "A_packagedElement_owningPackage"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedStereotype_owningPackage-owningPackage",
                  "name": "owningPackage",
                  "type": "Package",
                  "association": "A_ownedStereotype_owningPackage"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_packagedElement_owningPackage-owningPackage"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_type_extensionEnd",
                "name": "A_type_extensionEnd"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExtensionEnd-type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_type_extensionEnd-extensionEnd"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_type_extensionEnd-extensionEnd",
                  "name": "extensionEnd",
                  "type": "ExtensionEnd",
                  "association": "A_type_extensionEnd"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_type_typedElement-typedElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_type_extensionEnd-extensionEnd-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_type_extensionEnd-extensionEnd-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedEnd_extension",
                "name": "A_ownedEnd_extension"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Extension-ownedEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedEnd_extension-extension"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedEnd_extension-extension",
                  "name": "extension",
                  "type": "Extension",
                  "association": "A_ownedEnd_extension"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Property-owningAssociation"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Interactions",
            "name": "Interactions"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Interactions-_packageImport.0",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Interactions-_packageImport.1",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Interactions-_packageImport.2",
                "importedPackage": "SimpleClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Interactions-_packageImport.3",
                "importedPackage": "Values"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActionExecutionSpecification",
                "name": "ActionExecutionSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActionExecutionSpecification-_ownedComment.0",
                  "body": "An ActionExecutionSpecification is a kind of ExecutionSpecification representing the execution of an Action."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActionExecutionSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ActionExecutionSpecification-action_referenced",
                  "name": "action_referenced"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ActionExecutionSpecification"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActionExecutionSpecification-action_referenced-_ownedComment.0",
                    "body": "The Action referenced by the ActionExecutionSpecification must be owned by the Interaction owning that ActionExecutionSpecification."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionExecutionSpecification-action_referenced"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ActionExecutionSpecification-action_referenced-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "(enclosingInteraction->notEmpty() or enclosingOperand.combinedFragment->notEmpty()) and\nlet parentInteraction : Set(Interaction) = enclosingInteraction.oclAsType(Interaction)->asSet()->union(\nenclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()) in\n(parentInteraction->size() = 1) and self.action.interaction->asSet() = parentInteraction"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActionExecutionSpecification-_generalization.0",
                  "general": "ExecutionSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ActionExecutionSpecification-action",
                  "name": "action",
                  "type": "Action",
                  "association": "A_action_actionExecutionSpecification"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActionExecutionSpecification-action-_ownedComment.0",
                    "body": "Action whose execution is occurring."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionExecutionSpecification-action"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "BehaviorExecutionSpecification",
                "name": "BehaviorExecutionSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "BehaviorExecutionSpecification-_ownedComment.0",
                  "body": "A BehaviorExecutionSpecification is a kind of ExecutionSpecification representing the execution of a Behavior."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "BehaviorExecutionSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "BehaviorExecutionSpecification-_generalization.0",
                  "general": "ExecutionSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "BehaviorExecutionSpecification-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_behavior_behaviorExecutionSpecification"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "BehaviorExecutionSpecification-behavior-_ownedComment.0",
                    "body": "Behavior whose execution is occurring."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "BehaviorExecutionSpecification-behavior"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "BehaviorExecutionSpecification-behavior-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CombinedFragment",
                "name": "CombinedFragment"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CombinedFragment-_ownedComment.0",
                  "body": "A CombinedFragment defines an expression of InteractionFragments. A CombinedFragment is defined by an interaction operator and corresponding InteractionOperands. Through the use of CombinedFragments the user will be able to describe a number of traces in a compact and concise manner."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CombinedFragment"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CombinedFragment-break",
                    "name": "break"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CombinedFragment"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-break-_ownedComment.0",
                      "body": "If the interactionOperator is break, the corresponding InteractionOperand must cover all Lifelines covered by the enclosing InteractionFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-break"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CombinedFragment-break-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "interactionOperator=InteractionOperatorKind::break  implies   \nenclosingInteraction.oclAsType(InteractionFragment)->asSet()->union(\n   enclosingOperand.oclAsType(InteractionFragment)->asSet()).covered->asSet() = self.covered->asSet()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CombinedFragment-consider_and_ignore",
                    "name": "consider_and_ignore"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CombinedFragment"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-consider_and_ignore-_ownedComment.0",
                      "body": "The interaction operators 'consider' and 'ignore' can only be used for the ConsiderIgnoreFragment subtype of CombinedFragment"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-consider_and_ignore"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CombinedFragment-consider_and_ignore-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "((interactionOperator = InteractionOperatorKind::consider) or (interactionOperator =  InteractionOperatorKind::ignore)) implies oclIsKindOf(ConsiderIgnoreFragment)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CombinedFragment-opt_loop_break_neg",
                    "name": "opt_loop_break_neg"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CombinedFragment"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-opt_loop_break_neg-_ownedComment.0",
                      "body": "If the interactionOperator is opt, loop, break, assert or neg, there must be exactly one operand."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-opt_loop_break_neg"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CombinedFragment-opt_loop_break_neg-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(interactionOperator =  InteractionOperatorKind::opt or interactionOperator = InteractionOperatorKind::loop or\ninteractionOperator = InteractionOperatorKind::break or interactionOperator = InteractionOperatorKind::assert or\ninteractionOperator = InteractionOperatorKind::neg)\nimplies operand->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CombinedFragment-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CombinedFragment-cfragmentGate",
                    "name": "cfragmentGate",
                    "aggregation": "composite",
                    "type": "Gate",
                    "association": "A_cfragmentGate_combinedFragment"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-cfragmentGate-_ownedComment.0",
                      "body": "Specifies the gates that form the interface between this CombinedFragment and its surroundings"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-cfragmentGate"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "CombinedFragment-cfragmentGate-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "CombinedFragment-cfragmentGate-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CombinedFragment-interactionOperator",
                    "name": "interactionOperator",
                    "type": "InteractionOperatorKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-interactionOperator-_ownedComment.0",
                      "body": "Specifies the operation which defines the semantics of this combination of InteractionFragments."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-interactionOperator"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "CombinedFragment-interactionOperator-_defaultValue",
                      "type": "InteractionOperatorKind",
                      "instance": "InteractionOperatorKind-seq"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CombinedFragment-operand",
                    "name": "operand",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InteractionOperand",
                    "association": "A_operand_combinedFragment"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CombinedFragment-operand-_ownedComment.0",
                      "body": "The set of operands of the combined fragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CombinedFragment-operand"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "CombinedFragment-operand-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConsiderIgnoreFragment",
                "name": "ConsiderIgnoreFragment"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConsiderIgnoreFragment-_ownedComment.0",
                  "body": "A ConsiderIgnoreFragment is a kind of CombinedFragment that is used for the consider and ignore cases, which require lists of pertinent Messages to be specified."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConsiderIgnoreFragment"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConsiderIgnoreFragment-consider_or_ignore",
                    "name": "consider_or_ignore"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConsiderIgnoreFragment"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConsiderIgnoreFragment-consider_or_ignore-_ownedComment.0",
                      "body": "The interaction operator of a ConsiderIgnoreFragment must be either 'consider' or 'ignore'."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConsiderIgnoreFragment-consider_or_ignore"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConsiderIgnoreFragment-consider_or_ignore-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(interactionOperator =  InteractionOperatorKind::consider) or (interactionOperator =  InteractionOperatorKind::ignore)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConsiderIgnoreFragment-type",
                    "name": "type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConsiderIgnoreFragment"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConsiderIgnoreFragment-type-_ownedComment.0",
                      "body": "The NamedElements must be of a type of element that can be a signature for a message (i.e.., an Operation, or a Signal)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConsiderIgnoreFragment-type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConsiderIgnoreFragment-type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "message->forAll(m | m.oclIsKindOf(Operation) or m.oclIsKindOf(Signal))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ConsiderIgnoreFragment-_generalization.0",
                  "general": "CombinedFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ConsiderIgnoreFragment-message",
                  "name": "message",
                  "type": "NamedElement",
                  "association": "A_message_considerIgnoreFragment"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConsiderIgnoreFragment-message-_ownedComment.0",
                    "body": "The set of messages that apply to this fragment."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConsiderIgnoreFragment-message"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "ConsiderIgnoreFragment-message-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "ConsiderIgnoreFragment-message-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Continuation",
                "name": "Continuation"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Continuation-_ownedComment.0",
                  "body": "A Continuation is a syntactic way to define continuations of different branches of an alternative CombinedFragment. Continuations are intuitively similar to labels representing intermediate points in a flow of control."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Continuation"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Continuation-first_or_last_interaction_fragment",
                    "name": "first_or_last_interaction_fragment"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Continuation"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Continuation-first_or_last_interaction_fragment-_ownedComment.0",
                      "body": "Continuations always occur as the very first InteractionFragment or the very last InteractionFragment of the enclosing InteractionOperand."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Continuation-first_or_last_interaction_fragment"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Continuation-first_or_last_interaction_fragment-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": " enclosingOperand->notEmpty() and \n let peerFragments : OrderedSet(InteractionFragment) =  enclosingOperand.fragment in \n   ( peerFragments->notEmpty() and \n   ((peerFragments->first() = self) or  (peerFragments->last() = self)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Continuation-same_name",
                    "name": "same_name"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Continuation"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Continuation-same_name-_ownedComment.0",
                      "body": "Across all Interaction instances having the same context value, every Lifeline instance covered by a Continuation (self) must be common with one covered Lifeline instance of all other Continuation instances with the same name as self, and every Lifeline instance covered by a Continuation instance with the same name as self must be common with one covered Lifeline instance of self. Lifeline instances are common if they have the same selector and represents associationEnd values."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Continuation-same_name"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Continuation-same_name-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "enclosingOperand.combinedFragment->notEmpty() and\nlet parentInteraction : Set(Interaction) = \nenclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()\nin \n(parentInteraction->size() = 1) \nand let peerInteractions : Set(Interaction) =\n (parentInteraction->union(parentInteraction->collect(_'context')->collect(behavior)->\n select(oclIsKindOf(Interaction)).oclAsType(Interaction)->asSet())->asSet()) in\n (peerInteractions->notEmpty()) and \n  let combinedFragments1 : Set(CombinedFragment) = peerInteractions.fragment->\n select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet() in\n   combinedFragments1->notEmpty() and  combinedFragments1->closure(operand.fragment->\n   select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment))->asSet().operand.fragment->\n   select(oclIsKindOf(Continuation)).oclAsType(Continuation)->asSet()->\n   forAll(c : Continuation |  (c.name = self.name) implies \n  (c.covered->asSet()->forAll(cl : Lifeline | --  cl must be common to one lifeline covered by self\n  self.covered->asSet()->\n  select(represents = cl.represents and selector = cl.selector)->asSet()->size()=1))\n   and\n (self.covered->asSet()->forAll(cl : Lifeline | --  cl must be common to one lifeline covered by c\n c.covered->asSet()->\n  select(represents = cl.represents and selector = cl.selector)->asSet()->size()=1))\n  )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Continuation-global",
                    "name": "global"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Continuation"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Continuation-global-_ownedComment.0",
                      "body": "Continuations are always global in the enclosing InteractionFragment e.g., it always covers all Lifelines covered by the enclosing InteractionOperator."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Continuation-global"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Continuation-global-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "enclosingOperand->notEmpty() and\n  let operandLifelines : Set(Lifeline) =  enclosingOperand.covered in \n    (operandLifelines->notEmpty() and \n    operandLifelines->forAll(ol :Lifeline |self.covered->includes(ol)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Continuation-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Continuation-setting",
                  "name": "setting"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Continuation-setting-_ownedComment.0",
                    "body": "True: when the Continuation is at the end of the enclosing InteractionFragment and False when it is in the beginning."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Continuation-setting"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralBoolean",
                    "xmi:id": "Continuation-setting-_defaultValue",
                    "value": true
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DestructionOccurrenceSpecification",
                "name": "DestructionOccurrenceSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DestructionOccurrenceSpecification-_ownedComment.0",
                  "body": "A DestructionOccurenceSpecification models the destruction of an object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DestructionOccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "DestructionOccurrenceSpecification-no_occurrence_specifications_below",
                  "name": "no_occurrence_specifications_below"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "DestructionOccurrenceSpecification"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "DestructionOccurrenceSpecification-no_occurrence_specifications_below-_ownedComment.0",
                    "body": "No other OccurrenceSpecifications on a given Lifeline in an InteractionOperand may appear below a DestructionOccurrenceSpecification."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "DestructionOccurrenceSpecification-no_occurrence_specifications_below"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "DestructionOccurrenceSpecification-no_occurrence_specifications_below-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "let o : InteractionOperand = enclosingOperand in o->notEmpty() and \nlet peerEvents : OrderedSet(OccurrenceSpecification) = covered.events->select(enclosingOperand = o)\nin peerEvents->last() = self"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DestructionOccurrenceSpecification-_generalization.0",
                  "general": "MessageOccurrenceSpecification"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExecutionOccurrenceSpecification",
                "name": "ExecutionOccurrenceSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExecutionOccurrenceSpecification-_ownedComment.0",
                  "body": "An ExecutionOccurrenceSpecification represents moments in time at which Actions or Behaviors start or finish."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExecutionOccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExecutionOccurrenceSpecification-_generalization.0",
                  "general": "OccurrenceSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ExecutionOccurrenceSpecification-execution",
                  "name": "execution",
                  "type": "ExecutionSpecification",
                  "association": "A_execution_executionOccurrenceSpecification"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExecutionOccurrenceSpecification-execution-_ownedComment.0",
                    "body": "References the execution specification describing the execution that is started or finished at this execution event."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExecutionOccurrenceSpecification-execution"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExecutionSpecification",
                "name": "ExecutionSpecification",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExecutionSpecification-_ownedComment.0",
                  "body": "An ExecutionSpecification is a specification of the execution of a unit of Behavior or Action within the Lifeline. The duration of an ExecutionSpecification is represented by two OccurrenceSpecifications, the start OccurrenceSpecification and the finish OccurrenceSpecification."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExecutionSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ExecutionSpecification-same_lifeline",
                  "name": "same_lifeline"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ExecutionSpecification"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExecutionSpecification-same_lifeline-_ownedComment.0",
                    "body": "The startEvent and the finishEvent must be on the same Lifeline."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExecutionSpecification-same_lifeline"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ExecutionSpecification-same_lifeline-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "start.covered = finish.covered"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExecutionSpecification-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExecutionSpecification-finish",
                    "name": "finish",
                    "type": "OccurrenceSpecification",
                    "association": "A_finish_executionSpecification"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExecutionSpecification-finish-_ownedComment.0",
                      "body": "References the OccurrenceSpecification that designates the finish of the Action or Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExecutionSpecification-finish"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExecutionSpecification-start",
                    "name": "start",
                    "type": "OccurrenceSpecification",
                    "association": "A_start_executionSpecification"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExecutionSpecification-start-_ownedComment.0",
                      "body": "References the OccurrenceSpecification that designates the start of the Action or Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExecutionSpecification-start"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Gate",
                "name": "Gate"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Gate-_ownedComment.0",
                  "body": "A Gate is a MessageEnd which serves as a connection point for relating a Message which has a MessageEnd (sendEvent / receiveEvent) outside an InteractionFragment with another Message which has a MessageEnd (receiveEvent / sendEvent)  inside that InteractionFragment."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Gate"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-actual_gate_matched",
                    "name": "actual_gate_matched"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-actual_gate_matched-_ownedComment.0",
                      "body": "If this Gate is an actualGate, it must have exactly one matching formalGate within the referred Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-actual_gate_matched"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-actual_gate_matched-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "interactionUse->notEmpty() implies interactionUse.refersTo.formalGate->select(matches(self))->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-inside_cf_matched",
                    "name": "inside_cf_matched"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-inside_cf_matched-_ownedComment.0",
                      "body": "If this Gate is inside a CombinedFragment, it must have exactly one matching Gate which is outside of that CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-inside_cf_matched"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-inside_cf_matched-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isInsideCF() implies combinedFragment.cfragmentGate->select(isOutsideCF() and matches(self))->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-outside_cf_matched",
                    "name": "outside_cf_matched"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-outside_cf_matched-_ownedComment.0",
                      "body": "If this Gate is outside an 'alt' CombinedFragment,  for every InteractionOperator inside that CombinedFragment there must be exactly one matching Gate inside the CombindedFragment with its opposing end enclosed by that InteractionOperator. If this Gate is outside CombinedFragment with operator other than 'alt',   there must be exactly one matching Gate inside that CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-outside_cf_matched"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-outside_cf_matched-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isOutsideCF() implies\n if self.combinedFragment.interactionOperator->asOrderedSet()->first() = InteractionOperatorKind::alt\n then self.combinedFragment.operand->forAll(op : InteractionOperand |\n self.combinedFragment.cfragmentGate->select(isInsideCF() and \n oppositeEnd().enclosingFragment()->includes(self.combinedFragment) and matches(self))->size()=1)\n else  self.combinedFragment.cfragmentGate->select(isInsideCF() and matches(self))->size()=1\n endif"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-formal_gate_distinguishable",
                    "name": "formal_gate_distinguishable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-formal_gate_distinguishable-_ownedComment.0",
                      "body": "isFormal() implies that no other formalGate of the parent Interaction returns the same getName() as returned for self"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-formal_gate_distinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-formal_gate_distinguishable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isFormal() implies interaction.formalGate->select(getName() = self.getName())->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-actual_gate_distinguishable",
                    "name": "actual_gate_distinguishable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-actual_gate_distinguishable-_ownedComment.0",
                      "body": "isActual() implies that no other actualGate of the parent InteractionUse returns the same getName() as returned for self"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-actual_gate_distinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-actual_gate_distinguishable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isActual() implies interactionUse.actualGate->select(getName() = self.getName())->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-outside_cf_gate_distinguishable",
                    "name": "outside_cf_gate_distinguishable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-outside_cf_gate_distinguishable-_ownedComment.0",
                      "body": "isOutsideCF() implies that no other outside cfragmentGate of the parent CombinedFragment returns the same getName() as returned for self"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-outside_cf_gate_distinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-outside_cf_gate_distinguishable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isOutsideCF() implies combinedFragment.cfragmentGate->select(getName() = self.getName())->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Gate-inside_cf_gate_distinguishable",
                    "name": "inside_cf_gate_distinguishable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Gate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-inside_cf_gate_distinguishable-_ownedComment.0",
                      "body": "isInsideCF() implies that no other inside cfragmentGate attached to a message with its other end in the same InteractionOperator as self, returns the same getName() as returned for self"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-inside_cf_gate_distinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Gate-inside_cf_gate_distinguishable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isInsideCF() implies\nlet selfOperand : InteractionOperand = self.getOperand() in\n  combinedFragment.cfragmentGate->select(isInsideCF() and getName() = self.getName())->select(getOperand() = selfOperand)->size()=1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Gate-_generalization.0",
                  "general": "MessageEnd"
                },
                "_parent": "_"
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-isOutsideCF",
                    "name": "isOutsideCF",
                    "isQuery": true,
                    "bodyCondition": "Gate-isOutsideCF-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-isOutsideCF-_ownedComment.0",
                      "body": "This query returns true if this Gate is attached to the boundary of a CombinedFragment, and its other end (if present)  is outside of the same CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isOutsideCF"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-isOutsideCF-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isOutsideCF"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-isOutsideCF-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oppositeEnd()-> notEmpty() and combinedFragment->notEmpty() implies\nlet oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\nif oppEnd.oclIsKindOf(MessageOccurrenceSpecification) \nthen let oppMOS : MessageOccurrenceSpecification = oppEnd.oclAsType(MessageOccurrenceSpecification)\nin  self.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(self.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet()) =\n     oppMOS.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(oppMOS.enclosingOperand.oclAsType(InteractionFragment)->asSet())\nelse let oppGate : Gate = oppEnd.oclAsType(Gate) \nin self.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(self.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet()) =\n     oppGate.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(oppGate.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet())\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-isOutsideCF-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-isInsideCF",
                    "name": "isInsideCF",
                    "isQuery": true,
                    "bodyCondition": "Gate-isInsideCF-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-isInsideCF-_ownedComment.0",
                      "body": "This query returns true if this Gate is attached to the boundary of a CombinedFragment, and its other end (if present) is inside of an InteractionOperator of the same CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isInsideCF"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-isInsideCF-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isInsideCF"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-isInsideCF-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oppositeEnd()-> notEmpty() and combinedFragment->notEmpty() implies\nlet oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\nif oppEnd.oclIsKindOf(MessageOccurrenceSpecification)\nthen let oppMOS : MessageOccurrenceSpecification\n= oppEnd.oclAsType(MessageOccurrenceSpecification)\nin combinedFragment = oppMOS.enclosingOperand.combinedFragment\nelse let oppGate : Gate = oppEnd.oclAsType(Gate)\nin combinedFragment = oppGate.combinedFragment.enclosingOperand.combinedFragment\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-isInsideCF-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-isActual",
                    "name": "isActual",
                    "isQuery": true,
                    "bodyCondition": "Gate-isActual-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-isActual-_ownedComment.0",
                      "body": "This query returns true value if this Gate is an actualGate of an InteractionUse."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isActual"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-isActual-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isActual"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-isActual-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (interactionUse->notEmpty())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-isActual-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-isFormal",
                    "name": "isFormal",
                    "isQuery": true,
                    "bodyCondition": "Gate-isFormal-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-isFormal-_ownedComment.0",
                      "body": "This query returns true if this Gate is a formalGate of an Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isFormal"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-isFormal-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isFormal"
                      },
                      "_parent": "_"
                    },
                    "ownedComment": {
                      "_attributes": {
                        "xmi:type": "uml:Comment",
                        "xmi:id": "Gate-isFormal-spec-_ownedComment.0",
                        "body": "<p>interaction-&gt;notEmpty()</p>"
                      },
                      "_parent": "_",
                      "annotatedElement": {
                        "_attributes": {
                          "xmi:idref": "Gate-isFormal-spec"
                        },
                        "_parent": "_"
                      }
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-isFormal-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (interaction->notEmpty())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-isFormal-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-getName",
                    "name": "getName",
                    "isQuery": true,
                    "bodyCondition": "Gate-getName-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-getName-_ownedComment.0",
                      "body": "This query returns the name of the gate, either the explicit name (.name) or the constructed name ('out_\" or 'in_' concatenated in front of .message.name) if the explicit name is not present."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-getName"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-getName-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-getName"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-getName-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if name->notEmpty() then name->asOrderedSet()->first()\nelse  if isActual() or isOutsideCF() \n  then if isSend() \n    then 'out_'.concat(self.message.name->asOrderedSet()->first())\n    else 'in_'.concat(self.message.name->asOrderedSet()->first())\n    endif\n  else if isSend()\n    then 'in_'.concat(self.message.name->asOrderedSet()->first())\n    else 'out_'.concat(self.message.name->asOrderedSet()->first())\n    endif\n  endif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-getName-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-matches",
                    "name": "matches",
                    "isQuery": true,
                    "bodyCondition": "Gate-matches-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-matches-_ownedComment.0",
                      "body": "This query returns true if the name of this Gate matches the name of the in parameter Gate, and the messages for the two Gates correspond. The Message for one Gate (say A) corresponds to the Message for another Gate (say B) if (A and B have the same name value) and (if A is a sendEvent then B is a receiveEvent) and (if A is a receiveEvent then B is a sendEvent) and (A and B have the same messageSort value) and (A and B have the same signature value)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-matches"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-matches-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-matches"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-matches-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.getName() = gateToMatch.getName() and \nself.message.messageSort = gateToMatch.message.messageSort and\nself.message.name = gateToMatch.message.name and\nself.message.sendEvent->includes(self) implies gateToMatch.message.receiveEvent->includes(gateToMatch)  and\nself.message.receiveEvent->includes(self) implies gateToMatch.message.sendEvent->includes(gateToMatch) and\nself.message.signature = gateToMatch.message.signature)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Gate-matches-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Gate-matches-gateToMatch",
                        "name": "gateToMatch",
                        "type": "Gate"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-isDistinguishableFrom",
                    "name": "isDistinguishableFrom",
                    "isQuery": true,
                    "bodyCondition": "Gate-isDistinguishableFrom-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-isDistinguishableFrom"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-isDistinguishableFrom-_ownedComment.0",
                      "body": "The query isDistinguishableFrom() specifies that two Gates may coexist in the same Namespace, without an explicit name property. The association end formalGate subsets ownedElement, and since the Gate name attribute\r\nis optional, it is allowed to have two formal gates without an explicit name, but having derived names which are distinct."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-isDistinguishableFrom-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-isDistinguishableFrom-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Gate-isDistinguishableFrom-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Gate-isDistinguishableFrom-n",
                        "name": "n",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Gate-isDistinguishableFrom-ns",
                        "name": "ns",
                        "type": "Namespace"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Gate-getOperand",
                    "name": "getOperand",
                    "isQuery": true,
                    "bodyCondition": "Gate-getOperand-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Gate-getOperand-_ownedComment.0",
                      "body": "If the Gate is an inside Combined Fragment Gate, this operation returns the InteractionOperand that the opposite end of this Gate is included within."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-getOperand"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Gate-getOperand-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Gate-getOperand"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Gate-getOperand-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if isInsideCF() then\n  let oppEnd : MessageEnd = self.oppositeEnd()->asOrderedSet()->first() in\n    if oppEnd.oclIsKindOf(MessageOccurrenceSpecification)\n    then let oppMOS : MessageOccurrenceSpecification = oppEnd.oclAsType(MessageOccurrenceSpecification)\n        in oppMOS.enclosingOperand->asOrderedSet()->first()\n    else let oppGate : Gate = oppEnd.oclAsType(Gate)\n        in oppGate.combinedFragment.enclosingOperand->asOrderedSet()->first()\n    endif\n  else null\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Gate-getOperand-result",
                      "name": "result",
                      "direction": "return",
                      "type": "InteractionOperand"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "GeneralOrdering",
                "name": "GeneralOrdering"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "GeneralOrdering-_ownedComment.0",
                  "body": "A GeneralOrdering represents a binary relation between two OccurrenceSpecifications, to describe that one OccurrenceSpecification must occur before the other in a valid trace. This mechanism provides the ability to define partial orders of OccurrenceSpecifications that may otherwise not have a specified order."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "GeneralOrdering"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "GeneralOrdering-irreflexive_transitive_closure",
                  "name": "irreflexive_transitive_closure"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "GeneralOrdering"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "GeneralOrdering-irreflexive_transitive_closure-_ownedComment.0",
                    "body": "An occurrence specification must not be ordered relative to itself through a series of general orderings. (In other words, the transitive closure of the general orderings is irreflexive.)"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "GeneralOrdering-irreflexive_transitive_closure"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "GeneralOrdering-irreflexive_transitive_closure-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "after->closure(toAfter.after)->excludes(before)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "GeneralOrdering-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralOrdering-after",
                    "name": "after",
                    "type": "OccurrenceSpecification",
                    "association": "A_toBefore_after"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralOrdering-after-_ownedComment.0",
                      "body": "The OccurrenceSpecification referenced comes after the OccurrenceSpecification referenced by before."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralOrdering-after"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralOrdering-before",
                    "name": "before",
                    "type": "OccurrenceSpecification",
                    "association": "A_before_toAfter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralOrdering-before-_ownedComment.0",
                      "body": "The OccurrenceSpecification referenced comes before the OccurrenceSpecification referenced by after."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralOrdering-before"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Interaction",
                "name": "Interaction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Interaction-_ownedComment.0",
                  "body": "An Interaction is a unit of Behavior that focuses on the observable exchange of information between connectable elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Interaction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Interaction-not_contained",
                  "name": "not_contained"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Interaction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Interaction-not_contained-_ownedComment.0",
                    "body": "An Interaction instance must not be contained within another Interaction instance."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Interaction-not_contained"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Interaction-not_contained-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "enclosingInteraction->isEmpty()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Interaction-_generalization.0",
                    "general": "InteractionFragment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Interaction-_generalization.1",
                    "general": "Behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interaction-action",
                    "name": "action",
                    "aggregation": "composite",
                    "type": "Action",
                    "association": "A_action_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interaction-action-_ownedComment.0",
                      "body": "Actions owned by the Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interaction-action"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interaction-action-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interaction-action-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interaction-formalGate",
                    "name": "formalGate",
                    "aggregation": "composite",
                    "type": "Gate",
                    "association": "A_formalGate_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interaction-formalGate-_ownedComment.0",
                      "body": "Specifies the gates that form the message interface between this Interaction and any InteractionUses which reference it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interaction-formalGate"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interaction-formalGate-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interaction-formalGate-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interaction-fragment",
                    "name": "fragment",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InteractionFragment",
                    "association": "A_fragment_enclosingInteraction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interaction-fragment-_ownedComment.0",
                      "body": "The ordered set of fragments in the Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interaction-fragment"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interaction-fragment-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interaction-fragment-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interaction-lifeline",
                    "name": "lifeline",
                    "aggregation": "composite",
                    "type": "Lifeline",
                    "association": "A_lifeline_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interaction-lifeline-_ownedComment.0",
                      "body": "Specifies the participants in this Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interaction-lifeline"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interaction-lifeline-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interaction-lifeline-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Interaction-message",
                    "name": "message",
                    "aggregation": "composite",
                    "type": "Message",
                    "association": "A_message_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Interaction-message-_ownedComment.0",
                      "body": "The Messages contained in this Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Interaction-message"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Interaction-message-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Interaction-message-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InteractionConstraint",
                "name": "InteractionConstraint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InteractionConstraint-_ownedComment.0",
                  "body": "An InteractionConstraint is a Boolean expression that guards an operand in a CombinedFragment."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InteractionConstraint"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-minint_maxint",
                    "name": "minint_maxint"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-minint_maxint-_ownedComment.0",
                      "body": "Minint/maxint can only be present if the InteractionConstraint is associated with the operand of a loop CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-minint_maxint"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-minint_maxint-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "maxint->notEmpty() or minint->notEmpty() implies\ninteractionOperand.combinedFragment.interactionOperator =\nInteractionOperatorKind::loop"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-minint_non_negative",
                    "name": "minint_non_negative"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-minint_non_negative-_ownedComment.0",
                      "body": "If minint is specified, then the expression must evaluate to a non-negative integer."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-minint_non_negative"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-minint_non_negative-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "minint->notEmpty() implies \nminint->asSequence()->first().integerValue() >= 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-maxint_positive",
                    "name": "maxint_positive"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-maxint_positive-_ownedComment.0",
                      "body": "If maxint is specified, then the expression must evaluate to a positive integer."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-maxint_positive"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-maxint_positive-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "maxint->notEmpty() implies \nmaxint->asSequence()->first().integerValue() > 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-dynamic_variables",
                    "name": "dynamic_variables"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-dynamic_variables-_ownedComment.0",
                      "body": "The dynamic variables that take part in the constraint must be owned by the ConnectableElement corresponding to the covered Lifeline."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-dynamic_variables"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-dynamic_variables-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-global_data",
                    "name": "global_data"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-global_data-_ownedComment.0",
                      "body": "The constraint may contain references to global data or write-once data."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-global_data"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-global_data-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionConstraint-maxint_greater_equal_minint",
                    "name": "maxint_greater_equal_minint"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionConstraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-maxint_greater_equal_minint-_ownedComment.0",
                      "body": "If maxint is specified, then minint must be specified and the evaluation of maxint must be >= the evaluation of minint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-maxint_greater_equal_minint"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionConstraint-maxint_greater_equal_minint-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "maxint->notEmpty() implies (minint->notEmpty() and \nmaxint->asSequence()->first().integerValue() >=\nminint->asSequence()->first().integerValue() )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InteractionConstraint-_generalization.0",
                  "general": "Constraint"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionConstraint-maxint",
                    "name": "maxint",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_maxint_interactionConstraint"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-maxint-_ownedComment.0",
                      "body": "The maximum number of iterations of a loop"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-maxint"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionConstraint-maxint-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionConstraint-minint",
                    "name": "minint",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_minint_interactionConstraint"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionConstraint-minint-_ownedComment.0",
                      "body": "The minimum number of iterations of a loop"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionConstraint-minint"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionConstraint-minint-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InteractionFragment",
                "name": "InteractionFragment",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InteractionFragment-_ownedComment.0",
                  "body": "InteractionFragment is an abstract notion of the most general interaction unit. An InteractionFragment is a piece of an Interaction. Each InteractionFragment is conceptually like an Interaction by itself."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InteractionFragment"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InteractionFragment-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionFragment-covered",
                    "name": "covered",
                    "type": "Lifeline",
                    "association": "A_covered_coveredBy"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionFragment-covered-_ownedComment.0",
                      "body": "References the Lifelines that the InteractionFragment involves."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionFragment-covered"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionFragment-covered-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InteractionFragment-covered-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionFragment-enclosingInteraction",
                    "name": "enclosingInteraction",
                    "type": "Interaction",
                    "association": "A_fragment_enclosingInteraction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionFragment-enclosingInteraction-_ownedComment.0",
                      "body": "The Interaction enclosing this InteractionFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionFragment-enclosingInteraction"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionFragment-enclosingInteraction-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionFragment-enclosingOperand",
                    "name": "enclosingOperand",
                    "type": "InteractionOperand",
                    "association": "A_fragment_enclosingOperand"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionFragment-enclosingOperand-_ownedComment.0",
                      "body": "The operand enclosing this InteractionFragment (they may nest recursively)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionFragment-enclosingOperand"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionFragment-enclosingOperand-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionFragment-generalOrdering",
                    "name": "generalOrdering",
                    "aggregation": "composite",
                    "type": "GeneralOrdering",
                    "association": "A_generalOrdering_interactionFragment"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionFragment-generalOrdering-_ownedComment.0",
                      "body": "The general ordering relationships contained in this fragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionFragment-generalOrdering"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionFragment-generalOrdering-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InteractionFragment-generalOrdering-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InteractionOperand",
                "name": "InteractionOperand"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InteractionOperand-_ownedComment.0",
                  "body": "An InteractionOperand is contained in a CombinedFragment. An InteractionOperand represents one operand of the expression given by the enclosing CombinedFragment."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InteractionOperand"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionOperand-guard_contain_references",
                    "name": "guard_contain_references"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionOperand"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperand-guard_contain_references-_ownedComment.0",
                      "body": "The guard must contain only references to values local to the Lifeline on which it resides, or values global to the whole Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperand-guard_contain_references"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionOperand-guard_contain_references-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionOperand-guard_directly_prior",
                    "name": "guard_directly_prior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionOperand"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperand-guard_directly_prior-_ownedComment.0",
                      "body": "The guard must be placed directly prior to (above) the OccurrenceSpecification that will become the first OccurrenceSpecification within this InteractionOperand."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperand-guard_directly_prior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionOperand-guard_directly_prior-_specification"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InteractionOperand-_generalization.0",
                    "general": "InteractionFragment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InteractionOperand-_generalization.1",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionOperand-fragment",
                    "name": "fragment",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InteractionFragment",
                    "association": "A_fragment_enclosingOperand"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperand-fragment-_ownedComment.0",
                      "body": "The fragments of the operand."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperand-fragment"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionOperand-fragment-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InteractionOperand-fragment-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionOperand-guard",
                    "name": "guard",
                    "aggregation": "composite",
                    "type": "InteractionConstraint",
                    "association": "A_guard_interactionOperand"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperand-guard-_ownedComment.0",
                      "body": "Constraint of the operand."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperand-guard"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionOperand-guard-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InteractionUse",
                "name": "InteractionUse"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InteractionUse-_ownedComment.0",
                  "body": "An InteractionUse refers to an Interaction. The InteractionUse is a shorthand for copying the contents of the referenced Interaction where the InteractionUse is. To be accurate the copying must take into account substituting parameters with arguments and connect the formal Gates with the actual ones."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InteractionUse"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-gates_match",
                    "name": "gates_match"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-gates_match-_ownedComment.0",
                      "body": "Actual Gates of the InteractionUse must match Formal Gates of the referred Interaction. Gates match when their names are equal and their messages correspond."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-gates_match"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-gates_match-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "actualGate->notEmpty() implies \nrefersTo.formalGate->forAll( fg : Gate | self.actualGate->select(matches(fg))->size()=1) and\nself.actualGate->forAll(ag : Gate | refersTo.formalGate->select(matches(ag))->size()=1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-arguments_are_constants",
                    "name": "arguments_are_constants"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-arguments_are_constants-_ownedComment.0",
                      "body": "The arguments must only be constants, parameters of the enclosing Interaction or attributes of the classifier owning the enclosing Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-arguments_are_constants"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-arguments_are_constants-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-returnValueRecipient_coverage",
                    "name": "returnValueRecipient_coverage"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-returnValueRecipient_coverage-_ownedComment.0",
                      "body": "The returnValueRecipient must be a Property of a ConnectableElement that is represented by a Lifeline covered by this InteractionUse."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-returnValueRecipient_coverage"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-returnValueRecipient_coverage-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "returnValueRecipient->asSet()->notEmpty() implies\nlet covCE : Set(ConnectableElement) = covered.represents->asSet() in \ncovCE->notEmpty() and let classes:Set(Classifier) = covCE.type.oclIsKindOf(Classifier).oclAsType(Classifier)->asSet() in \nlet allProps : Set(Property) = classes.attribute->union(classes.allParents().attribute)->asSet() in \nallProps->includes(returnValueRecipient)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-arguments_correspond_to_parameters",
                    "name": "arguments_correspond_to_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-arguments_correspond_to_parameters-_ownedComment.0",
                      "body": "The arguments of the InteractionUse must correspond to parameters of the referred Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-arguments_correspond_to_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-arguments_correspond_to_parameters-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-returnValue_type_recipient_correspondence",
                    "name": "returnValue_type_recipient_correspondence"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-returnValue_type_recipient_correspondence-_ownedComment.0",
                      "body": "The type of the returnValue must correspond to the type of the returnValueRecipient."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-returnValue_type_recipient_correspondence"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-returnValue_type_recipient_correspondence-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "returnValue.type->asSequence()->notEmpty() implies returnValue.type->asSequence()->first() = returnValueRecipient.type->asSequence()->first()\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InteractionUse-all_lifelines",
                    "name": "all_lifelines"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InteractionUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-all_lifelines-_ownedComment.0",
                      "body": "The InteractionUse must cover all Lifelines of the enclosing Interaction that are common with the lifelines covered by the referred Interaction. Lifelines are common if they have the same selector and represents associationEnd values."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-all_lifelines"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InteractionUse-all_lifelines-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let parentInteraction : Set(Interaction) = enclosingInteraction->asSet()->\nunion(enclosingOperand.combinedFragment->closure(enclosingOperand.combinedFragment)->\ncollect(enclosingInteraction).oclAsType(Interaction)->asSet()) in\nparentInteraction->size()=1 and let refInteraction : Interaction = refersTo in\nparentInteraction.covered-> forAll(intLifeline : Lifeline | refInteraction.covered->\nforAll( refLifeline : Lifeline | refLifeline.represents = intLifeline.represents and \n(\n( refLifeline.selector.oclIsKindOf(LiteralString) implies\n  intLifeline.selector.oclIsKindOf(LiteralString) and \n  refLifeline.selector.oclAsType(LiteralString).value = intLifeline.selector.oclAsType(LiteralString).value ) and\n( refLifeline.selector.oclIsKindOf(LiteralInteger) implies\n  intLifeline.selector.oclIsKindOf(LiteralInteger) and \n  refLifeline.selector.oclAsType(LiteralInteger).value = intLifeline.selector.oclAsType(LiteralInteger).value )\n)\n implies self.covered->asSet()->includes(intLifeline)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InteractionUse-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionUse-actualGate",
                    "name": "actualGate",
                    "aggregation": "composite",
                    "type": "Gate",
                    "association": "A_actualGate_interactionUse"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-actualGate-_ownedComment.0",
                      "body": "The actual gates of the InteractionUse."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-actualGate"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionUse-actualGate-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InteractionUse-actualGate-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionUse-argument",
                    "name": "argument",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_argument_interactionUse"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-argument-_ownedComment.0",
                      "body": "The actual arguments of the Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-argument"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionUse-argument-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InteractionUse-argument-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionUse-refersTo",
                    "name": "refersTo",
                    "type": "Interaction",
                    "association": "A_refersTo_interactionUse"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-refersTo-_ownedComment.0",
                      "body": "Refers to the Interaction that defines its meaning."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-refersTo"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionUse-returnValue",
                    "name": "returnValue",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_returnValue_interactionUse"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-returnValue-_ownedComment.0",
                      "body": "The value of the executed Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-returnValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionUse-returnValue-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InteractionUse-returnValueRecipient",
                    "name": "returnValueRecipient",
                    "type": "Property",
                    "association": "A_returnValueRecipient_interactionUse"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionUse-returnValueRecipient-_ownedComment.0",
                      "body": "The recipient of the return value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionUse-returnValueRecipient"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InteractionUse-returnValueRecipient-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Lifeline",
                "name": "Lifeline"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Lifeline-_ownedComment.0",
                  "body": "A Lifeline represents an individual participant in the Interaction. While parts and structural features may have multiplicity greater than 1, Lifelines represent only one interacting entity."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Lifeline"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Lifeline-selector_specified",
                    "name": "selector_specified"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Lifeline"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-selector_specified-_ownedComment.0",
                      "body": "The selector for a Lifeline must only be specified if the referenced Part is multivalued."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-selector_specified"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Lifeline-selector_specified-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": " self.selector->notEmpty() = (self.represents.oclIsKindOf(MultiplicityElement) and self.represents.oclAsType(MultiplicityElement).isMultivalued())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Lifeline-interaction_uses_share_lifeline",
                    "name": "interaction_uses_share_lifeline"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Lifeline"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-interaction_uses_share_lifeline-_ownedComment.0",
                      "body": "If a lifeline is in an Interaction referred to by an InteractionUse in an enclosing Interaction,  and that lifeline is common with another lifeline in an Interaction referred to by another InteractonUse within that same enclosing Interaction, it must be common to a lifeline within that enclosing Interaction. By common Lifelines we mean Lifelines with the same selector and represents associations.\r\n"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-interaction_uses_share_lifeline"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Lifeline-interaction_uses_share_lifeline-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let intUses : Set(InteractionUse) = interaction.interactionUse  in \nintUses->forAll\n( iuse : InteractionUse | \nlet usingInteraction : Set(Interaction)  = iuse.enclosingInteraction->asSet()\n->union(\niuse.enclosingOperand.combinedFragment->asSet()->closure(enclosingOperand.combinedFragment).enclosingInteraction->asSet()\n               ) \nin\nlet peerUses : Set(InteractionUse) = usingInteraction.fragment->select(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\n->union(\nusingInteraction.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)->asSet()\n->closure(operand.fragment->select(oclIsKindOf(CombinedFragment)).oclAsType(CombinedFragment)).operand.fragment->\nselect(oclIsKindOf(InteractionUse)).oclAsType(InteractionUse)->asSet()\n               )->excluding(iuse)\n in\npeerUses->forAll( peerUse : InteractionUse |\n peerUse.refersTo.lifeline->forAll( l : Lifeline | (l.represents = self.represents and \n ( self.selector.oclIsKindOf(LiteralString) implies\n  l.selector.oclIsKindOf(LiteralString) and \n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\n  and \n( self.selector.oclIsKindOf(LiteralInteger) implies\n  l.selector.oclIsKindOf(LiteralInteger) and \n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\n)  \nimplies\n usingInteraction.lifeline->select(represents = self.represents and\n ( self.selector.oclIsKindOf(LiteralString) implies\n  l.selector.oclIsKindOf(LiteralString) and \n  self.selector.oclAsType(LiteralString).value = l.selector.oclAsType(LiteralString).value )\nand \n( self.selector.oclIsKindOf(LiteralInteger) implies\n  l.selector.oclIsKindOf(LiteralInteger) and \n  self.selector.oclAsType(LiteralInteger).value = l.selector.oclAsType(LiteralInteger).value )\n)\n                                                )\n                    )\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Lifeline-same_classifier",
                    "name": "same_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Lifeline"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-same_classifier-_ownedComment.0",
                      "body": "The classifier containing the referenced ConnectableElement must be the same classifier, or an ancestor, of the classifier that contains the interaction enclosing this lifeline."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-same_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Lifeline-same_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "represents.namespace->closure(namespace)->includes(interaction._'context')"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Lifeline-selector_int_or_string",
                    "name": "selector_int_or_string"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Lifeline"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-selector_int_or_string-_ownedComment.0",
                      "body": "The selector value, if present, must be a LiteralString or a LiteralInteger "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-selector_int_or_string"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Lifeline-selector_int_or_string-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.selector->notEmpty() implies \nself.selector.oclIsKindOf(LiteralInteger) or \nself.selector.oclIsKindOf(LiteralString)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Lifeline-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Lifeline-coveredBy",
                    "name": "coveredBy",
                    "type": "InteractionFragment",
                    "association": "A_covered_coveredBy"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-coveredBy-_ownedComment.0",
                      "body": "References the InteractionFragments in which this Lifeline takes part."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-coveredBy"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Lifeline-coveredBy-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Lifeline-coveredBy-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Lifeline-decomposedAs",
                    "name": "decomposedAs",
                    "type": "PartDecomposition",
                    "association": "A_decomposedAs_lifeline"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-decomposedAs-_ownedComment.0",
                      "body": "References the Interaction that represents the decomposition."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-decomposedAs"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Lifeline-decomposedAs-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Lifeline-interaction",
                    "name": "interaction",
                    "type": "Interaction",
                    "association": "A_lifeline_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-interaction-_ownedComment.0",
                      "body": "References the Interaction enclosing this Lifeline."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-interaction"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Lifeline-represents",
                    "name": "represents",
                    "type": "ConnectableElement",
                    "association": "A_represents_lifeline"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-represents-_ownedComment.0",
                      "body": "References the ConnectableElement within the classifier that contains the enclosing interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-represents"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Lifeline-represents-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Lifeline-selector",
                    "name": "selector",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_selector_lifeline"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Lifeline-selector-_ownedComment.0",
                      "body": "If the referenced ConnectableElement is multivalued, then this specifies the specific individual part within that set."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Lifeline-selector"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Lifeline-selector-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Message",
                "name": "Message"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Message-_ownedComment.0",
                  "body": "A Message defines a particular communication between Lifelines of an Interaction."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Message"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-sending_receiving_message_event",
                    "name": "sending_receiving_message_event"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-sending_receiving_message_event-_ownedComment.0",
                      "body": "If the sendEvent and the receiveEvent of the same Message are on the same Lifeline, the sendEvent must be ordered before the receiveEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-sending_receiving_message_event"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-sending_receiving_message_event-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "receiveEvent.oclIsKindOf(MessageOccurrenceSpecification)\nimplies\nlet f :  Lifeline = sendEvent->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first().covered in\nf = receiveEvent->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first().covered  implies\nf.events->indexOf(sendEvent.oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() ) < \nf.events->indexOf(receiveEvent.oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-arguments",
                    "name": "arguments"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-arguments-_ownedComment.0",
                      "body": "Arguments of a Message must only be: i) attributes of the sending lifeline, ii) constants, iii) symbolic values (which are wildcard values representing any legal value), iv) explicit parameters of the enclosing Interaction, v) attributes of the class owning the Interaction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-arguments"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-arguments-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-cannot_cross_boundaries",
                    "name": "cannot_cross_boundaries"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-cannot_cross_boundaries-_ownedComment.0",
                      "body": "Messages cannot cross boundaries of CombinedFragments or their operands.  This is true if and only if both MessageEnds are enclosed within the same InteractionFragment (i.e., an InteractionOperand or an Interaction)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-cannot_cross_boundaries"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-cannot_cross_boundaries-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "sendEvent->notEmpty() and receiveEvent->notEmpty() implies\nlet sendEnclosingFrag : Set(InteractionFragment) = \nsendEvent->asOrderedSet()->first().enclosingFragment()\nin \nlet receiveEnclosingFrag : Set(InteractionFragment) = \nreceiveEvent->asOrderedSet()->first().enclosingFragment()\nin  sendEnclosingFrag = receiveEnclosingFrag"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-signature_is_signal",
                    "name": "signature_is_signal"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-signature_is_signal-_ownedComment.0",
                      "body": "In the case when the Message signature is a Signal, the arguments of the Message must correspond to the attributes of the Signal. A Message Argument corresponds to a Signal Attribute if the Argument is of the same Class or a specialization of that of the Attribute."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-signature_is_signal"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-signature_is_signal-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(messageSort = MessageSort::asynchSignal ) and signature.oclIsKindOf(Signal) implies\n   let signalAttributes : OrderedSet(Property) = signature.oclAsType(Signal).inheritedMember()->\n             select(n:NamedElement | n.oclIsTypeOf(Property))->collect(oclAsType(Property))->asOrderedSet()\n   in signalAttributes->size() = self.argument->size()\n   and self.argument->forAll( o: ValueSpecification |\n          not (o.oclIsKindOf(Expression)\n          and o.oclAsType(Expression).symbol->size()=0\n          and o.oclAsType(Expression).operand->isEmpty() ) implies\n              let p : Property = signalAttributes->at(self.argument->indexOf(o))\n              in o.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier)))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-occurrence_specifications",
                    "name": "occurrence_specifications"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-occurrence_specifications-_ownedComment.0",
                      "body": "If the MessageEnds are both OccurrenceSpecifications, then the connector must go between the Parts represented by the Lifelines of the two MessageEnds."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-occurrence_specifications"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-occurrence_specifications-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-signature_refer_to",
                    "name": "signature_refer_to"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-signature_refer_to-_ownedComment.0",
                      "body": "The signature must either refer an Operation (in which case messageSort is either synchCall or asynchCall or reply) or a Signal (in which case messageSort is asynchSignal). The name of the NamedElement referenced by signature must be the same as that of the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-signature_refer_to"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-signature_refer_to-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "signature->notEmpty() implies \n((signature.oclIsKindOf(Operation) and \n(messageSort = MessageSort::asynchCall or messageSort = MessageSort::synchCall or messageSort = MessageSort::reply) \n) or (signature.oclIsKindOf(Signal)  and messageSort = MessageSort::asynchSignal )\n ) and name = signature.name"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-signature_is_operation_request",
                    "name": "signature_is_operation_request"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-signature_is_operation_request-_ownedComment.0",
                      "body": "In the case when a Message with messageSort synchCall or asynchCall has a non empty Operation signature, the arguments of the Message must correspond to the in and inout parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-signature_is_operation_request"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-signature_is_operation_request-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(messageSort = MessageSort::asynchCall or messageSort = MessageSort::synchCall) and signature.oclIsKindOf(Operation)  implies \n let requestParms : OrderedSet(Parameter) = signature.oclAsType(Operation).ownedParameter->\n select(direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::_'in'  )\nin requestParms->size() = self.argument->size() and\nself.argument->forAll( o: ValueSpecification | \nnot (o.oclIsKindOf(Expression) and o.oclAsType(Expression).symbol->size()=0 and o.oclAsType(Expression).operand->isEmpty() ) implies \nlet p : Parameter = requestParms->at(self.argument->indexOf(o)) in\no.type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier))\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Message-signature_is_operation_reply",
                    "name": "signature_is_operation_reply"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Message"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-signature_is_operation_reply-_ownedComment.0",
                      "body": "In the case when a Message with messageSort reply has a non empty Operation signature, the arguments of the Message must correspond to the out, inout, and return parameters of the Operation. A Parameter corresponds to an Argument if the Argument is of the same Class or a specialization of that of the Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-signature_is_operation_reply"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Message-signature_is_operation_reply-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(messageSort = MessageSort::reply) and signature.oclIsKindOf(Operation) implies \n let replyParms : OrderedSet(Parameter) = signature.oclAsType(Operation).ownedParameter->\nselect(direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::out or direction = ParameterDirectionKind::return)\nin replyParms->size() = self.argument->size() and\nself.argument->forAll( o: ValueSpecification | o.oclIsKindOf(Expression) and let e : Expression = o.oclAsType(Expression) in\ne.operand->notEmpty()  implies \nlet p : Parameter = replyParms->at(self.argument->indexOf(o)) in\ne.operand->asSequence()->first().type.oclAsType(Classifier).conformsTo(p.type.oclAsType(Classifier))\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Message-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-argument",
                    "name": "argument",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_argument_message"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-argument-_ownedComment.0",
                      "body": "The arguments of the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-argument"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Message-argument-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Message-argument-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-connector",
                    "name": "connector",
                    "type": "Connector",
                    "association": "A_connector_message"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-connector-_ownedComment.0",
                      "body": "The Connector on which this Message is sent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-connector"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Message-connector-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-interaction",
                    "name": "interaction",
                    "type": "Interaction",
                    "association": "A_message_interaction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-interaction-_ownedComment.0",
                      "body": "The enclosing Interaction owning the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-interaction"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-messageKind",
                    "name": "messageKind",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "MessageKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-messageKind-_ownedComment.0",
                      "body": "The derived kind of the Message (complete, lost, found, or unknown)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-messageKind"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-messageSort",
                    "name": "messageSort",
                    "type": "MessageSort"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-messageSort-_ownedComment.0",
                      "body": "The sort of communication reflected by the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-messageSort"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "Message-messageSort-_defaultValue",
                      "type": "MessageSort",
                      "instance": "MessageSort-synchCall"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-receiveEvent",
                    "name": "receiveEvent",
                    "type": "MessageEnd",
                    "association": "A_receiveEvent_endMessage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_message_messageEnd-messageEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-receiveEvent-_ownedComment.0",
                      "body": "References the Receiving of the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-receiveEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Message-receiveEvent-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-sendEvent",
                    "name": "sendEvent",
                    "type": "MessageEnd",
                    "association": "A_sendEvent_endMessage"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_message_messageEnd-messageEnd"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-sendEvent-_ownedComment.0",
                      "body": "References the Sending of the Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-sendEvent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Message-sendEvent-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Message-signature",
                    "name": "signature",
                    "type": "NamedElement",
                    "association": "A_signature_message"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-signature-_ownedComment.0",
                      "body": "The signature of the Message is the specification of its content. It refers either an Operation or a Signal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-signature"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Message-signature-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Message-messageKind.1",
                    "name": "messageKind",
                    "isQuery": true,
                    "bodyCondition": "Message-messageKind.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-messageKind.1-_ownedComment.0",
                      "body": "This query returns the MessageKind value for this Message."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-messageKind.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Message-messageKind.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Message-messageKind.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Message-messageKind"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Message-messageKind.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (messageKind)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Message-messageKind.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "MessageKind"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Message-isDistinguishableFrom",
                    "name": "isDistinguishableFrom",
                    "isQuery": true,
                    "bodyCondition": "Message-isDistinguishableFrom-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-isDistinguishableFrom"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Message-isDistinguishableFrom-_ownedComment.0",
                      "body": "The query isDistinguishableFrom() specifies that any two Messages may coexist in the same Namespace, regardless of their names."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Message-isDistinguishableFrom-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Message-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Message-isDistinguishableFrom-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Message-isDistinguishableFrom-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Message-isDistinguishableFrom-n",
                        "name": "n",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Message-isDistinguishableFrom-ns",
                        "name": "ns",
                        "type": "Namespace"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "MessageEnd",
                "name": "MessageEnd",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MessageEnd-_ownedComment.0",
                  "body": "MessageEnd is an abstract specialization of NamedElement that represents what can occur at the end of a Message."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MessageEnd"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "MessageEnd-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "MessageEnd-message",
                  "name": "message",
                  "type": "Message",
                  "association": "A_message_messageEnd"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "MessageEnd-message-_ownedComment.0",
                    "body": "References a Message."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "MessageEnd-message"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "MessageEnd-message-_lowerValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MessageEnd-oppositeEnd",
                    "name": "oppositeEnd",
                    "isQuery": true,
                    "bodyCondition": "MessageEnd-oppositeEnd-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "MessageEnd-oppositeEnd-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageEnd-oppositeEnd-_ownedComment.0",
                      "body": "This query returns a set including the MessageEnd (if exists) at the opposite end of the Message for this MessageEnd."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageEnd-oppositeEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-oppositeEnd-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-oppositeEnd"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-oppositeEnd-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (message->asSet().messageEnd->asSet()->excluding(self))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-oppositeEnd-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-oppositeEnd"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-oppositeEnd-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "message->notEmpty()\n"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MessageEnd-oppositeEnd-result",
                      "name": "result",
                      "direction": "return",
                      "type": "MessageEnd"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "MessageEnd-oppositeEnd-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "MessageEnd-oppositeEnd-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MessageEnd-isSend",
                    "name": "isSend",
                    "isQuery": true,
                    "bodyCondition": "MessageEnd-isSend-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "MessageEnd-isSend-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageEnd-isSend-_ownedComment.0",
                      "body": "This query returns value true if this MessageEnd is a sendEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageEnd-isSend"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-isSend-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-isSend"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-isSend-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "message->notEmpty()\n"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-isSend-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-isSend"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-isSend-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (message.sendEvent->asSet()->includes(self))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MessageEnd-isSend-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MessageEnd-isReceive",
                    "name": "isReceive",
                    "isQuery": true,
                    "bodyCondition": "MessageEnd-isReceive-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "MessageEnd-isReceive-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageEnd-isReceive-_ownedComment.0",
                      "body": "This query returns value true if this MessageEnd is a receiveEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageEnd-isReceive"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-isReceive-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-isReceive"
                        },
                        "_parent": "_"
                      },
                      "ownedComment": {
                        "_attributes": {
                          "xmi:type": "uml:Comment",
                          "xmi:id": "MessageEnd-isReceive-pre-_ownedComment.0",
                          "body": "<p>message-&gt;notEmpty()</p>"
                        },
                        "_parent": "_",
                        "annotatedElement": {
                          "_attributes": {
                            "xmi:idref": "MessageEnd-isReceive-pre"
                          },
                          "_parent": "_"
                        }
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-isReceive-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "message->notEmpty()\n"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MessageEnd-isReceive-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MessageEnd-isReceive"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MessageEnd-isReceive-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (message.receiveEvent->asSet()->includes(self))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MessageEnd-isReceive-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MessageEnd-enclosingFragment",
                    "name": "enclosingFragment",
                    "isQuery": true,
                    "bodyCondition": "MessageEnd-enclosingFragment-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageEnd-enclosingFragment-_ownedComment.0",
                      "body": "This query returns a set including the enclosing InteractionFragment this MessageEnd is enclosed within."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageEnd-enclosingFragment"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MessageEnd-enclosingFragment-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageEnd-enclosingFragment"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MessageEnd-enclosingFragment-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if self->select(oclIsKindOf(Gate))->notEmpty() \nthen -- it is a Gate\nlet endGate : Gate = \n  self->select(oclIsKindOf(Gate)).oclAsType(Gate)->asOrderedSet()->first()\n  in\n  if endGate.isOutsideCF() \n  then endGate.combinedFragment.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(endGate.combinedFragment.enclosingOperand.oclAsType(InteractionFragment)->asSet())\n  else if endGate.isInsideCF() \n    then endGate.combinedFragment.oclAsType(InteractionFragment)->asSet()\n    else if endGate.isFormal() \n      then endGate.interaction.oclAsType(InteractionFragment)->asSet()\n      else if endGate.isActual() \n        then endGate.interactionUse.enclosingInteraction.oclAsType(InteractionFragment)->asSet()->\n     union(endGate.interactionUse.enclosingOperand.oclAsType(InteractionFragment)->asSet())\n        else null\n        endif\n      endif\n    endif\n  endif\nelse -- it is a MessageOccurrenceSpecification\nlet endMOS : MessageOccurrenceSpecification  = \n  self->select(oclIsKindOf(MessageOccurrenceSpecification)).oclAsType(MessageOccurrenceSpecification)->asOrderedSet()->first() \n  in\n  if endMOS.enclosingInteraction->notEmpty() \n  then endMOS.enclosingInteraction.oclAsType(InteractionFragment)->asSet()\n  else endMOS.enclosingOperand.oclAsType(InteractionFragment)->asSet()\n  endif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MessageEnd-enclosingFragment-result",
                      "name": "result",
                      "direction": "return",
                      "type": "InteractionFragment"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "MessageEnd-enclosingFragment-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "MessageEnd-enclosingFragment-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "MessageOccurrenceSpecification",
                "name": "MessageOccurrenceSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MessageOccurrenceSpecification-_ownedComment.0",
                  "body": "A MessageOccurrenceSpecification specifies the occurrence of Message events, such as sending and receiving of Signals or invoking or receiving of Operation calls. A MessageOccurrenceSpecification is a kind of MessageEnd. Messages are generated either by synchronous Operation calls or asynchronous Signal sends. They are received by the execution of corresponding AcceptEventActions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MessageOccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "MessageOccurrenceSpecification-_generalization.0",
                    "general": "MessageEnd"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "MessageOccurrenceSpecification-_generalization.1",
                    "general": "OccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OccurrenceSpecification",
                "name": "OccurrenceSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OccurrenceSpecification-_ownedComment.0",
                  "body": "An OccurrenceSpecification is the basic semantic unit of Interactions. The sequences of occurrences specified by them are the meanings of Interactions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OccurrenceSpecification-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OccurrenceSpecification-covered",
                    "name": "covered",
                    "type": "Lifeline",
                    "association": "A_covered_events"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "InteractionFragment-covered"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OccurrenceSpecification-covered-_ownedComment.0",
                      "body": "References the Lifeline on which the OccurrenceSpecification appears."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OccurrenceSpecification-covered"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OccurrenceSpecification-toAfter",
                    "name": "toAfter",
                    "type": "GeneralOrdering",
                    "association": "A_before_toAfter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OccurrenceSpecification-toAfter-_ownedComment.0",
                      "body": "References the GeneralOrderings that specify EventOcurrences that must occur after this OccurrenceSpecification."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OccurrenceSpecification-toAfter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OccurrenceSpecification-toAfter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OccurrenceSpecification-toAfter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OccurrenceSpecification-toBefore",
                    "name": "toBefore",
                    "type": "GeneralOrdering",
                    "association": "A_toBefore_after"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OccurrenceSpecification-toBefore-_ownedComment.0",
                      "body": "References the GeneralOrderings that specify EventOcurrences that must occur before this OccurrenceSpecification."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OccurrenceSpecification-toBefore"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OccurrenceSpecification-toBefore-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OccurrenceSpecification-toBefore-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "PartDecomposition",
                "name": "PartDecomposition"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PartDecomposition-_ownedComment.0",
                  "body": "A PartDecomposition is a description of the internal Interactions of one Lifeline relative to an Interaction."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PartDecomposition"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "PartDecomposition-commutativity_of_decomposition",
                    "name": "commutativity_of_decomposition"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "PartDecomposition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PartDecomposition-commutativity_of_decomposition-_ownedComment.0",
                      "body": "Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Assume also that there is within X an InteractionUse (say) U that covers L. According to the constraint above U will have a counterpart CU within D. Within the Interaction referenced by U, L should also be decomposed, and the decomposition should reference CU. (This rule is called commutativity of decomposition.)"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PartDecomposition-commutativity_of_decomposition"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "PartDecomposition-commutativity_of_decomposition-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "PartDecomposition-assume",
                    "name": "assume"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "PartDecomposition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PartDecomposition-assume-_ownedComment.0",
                      "body": "Assume that within Interaction X, Lifeline L is of class C and decomposed to D. Within X there is a sequence of constructs along L (such constructs are CombinedFragments, InteractionUse and (plain) OccurrenceSpecifications). Then a corresponding sequence of constructs must appear within D, matched one-to-one in the same order. i) CombinedFragment covering L are matched with an extra-global CombinedFragment in D. ii) An InteractionUse covering L is matched with a global (i.e., covering all Lifelines) InteractionUse in D. iii) A plain OccurrenceSpecification on L is considered an actualGate that must be matched by a formalGate of D."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PartDecomposition-assume"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "PartDecomposition-assume-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "PartDecomposition-parts_of_internal_structures",
                    "name": "parts_of_internal_structures"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "PartDecomposition"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PartDecomposition-parts_of_internal_structures-_ownedComment.0",
                      "body": "PartDecompositions apply only to Parts that are Parts of Internal Structures not to Parts of Collaborations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PartDecomposition-parts_of_internal_structures"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "PartDecomposition-parts_of_internal_structures-_specification"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "PartDecomposition-_generalization.0",
                  "general": "InteractionUse"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StateInvariant",
                "name": "StateInvariant"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StateInvariant-_ownedComment.0",
                  "body": "A StateInvariant is a runtime constraint on the participants of the Interaction. It may be used to specify a variety of different kinds of Constraints, such as values of Attributes or Variables, internal or external States, and so on. A StateInvariant is an InteractionFragment and it is placed on a Lifeline."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StateInvariant"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StateInvariant-_generalization.0",
                  "general": "InteractionFragment"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateInvariant-covered",
                    "name": "covered",
                    "type": "Lifeline",
                    "association": "A_covered_stateInvariant"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "InteractionFragment-covered"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateInvariant-covered-_ownedComment.0",
                      "body": "References the Lifeline on which the StateInvariant appears."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateInvariant-covered"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StateInvariant-invariant",
                    "name": "invariant",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_invariant_stateInvariant"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StateInvariant-invariant-_ownedComment.0",
                      "body": "A Constraint that should hold at runtime for this StateInvariant."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StateInvariant-invariant"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "InteractionOperatorKind",
                "name": "InteractionOperatorKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InteractionOperatorKind-_ownedComment.0",
                  "body": "InteractionOperatorKind is an enumeration designating the different kinds of operators of CombinedFragments. The InteractionOperand defines the type of operator of a CombinedFragment."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InteractionOperatorKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-seq",
                    "name": "seq"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-seq-_ownedComment.0",
                      "body": "The InteractionOperatorKind seq designates that the CombinedFragment represents a weak sequencing between the behaviors of the operands."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-seq"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-alt",
                    "name": "alt"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-alt-_ownedComment.0",
                      "body": "The InteractionOperatorKind alt designates that the CombinedFragment represents a choice of behavior. At most one of the operands will be chosen. The chosen operand must have an explicit or implicit guard expression that evaluates to true at this point in the interaction. An implicit true guard is implied if the operand has no guard."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-alt"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-opt",
                    "name": "opt"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-opt-_ownedComment.0",
                      "body": "The InteractionOperatorKind opt designates that the CombinedFragment represents a choice of behavior where either the (sole) operand happens or nothing happens. An option is semantically equivalent to an alternative CombinedFragment where there is one operand with non-empty content and the second operand is empty."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-opt"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-break",
                    "name": "break"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-break-_ownedComment.0",
                      "body": "The InteractionOperatorKind break designates that the CombinedFragment represents a breaking scenario in the sense that the operand is a scenario that is performed instead of the remainder of the enclosing InteractionFragment. A break operator with a guard is chosen when the guard is true and the rest of the enclosing Interaction Fragment is ignored. When the guard of the break operand is false, the break operand is ignored and the rest of the enclosing InteractionFragment is chosen. The choice between a break operand without a guard and the rest of the enclosing InteractionFragment is done non-deterministically."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-break"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-par",
                    "name": "par"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-par-_ownedComment.0",
                      "body": "The InteractionOperatorKind par designates that the CombinedFragment represents a parallel merge between the behaviors of the operands. The OccurrenceSpecifications of the different operands can be interleaved in any way as long as the ordering imposed by each operand as such is preserved."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-par"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-strict",
                    "name": "strict"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-strict-_ownedComment.0",
                      "body": "The InteractionOperatorKind strict designates that the CombinedFragment represents a strict sequencing between the behaviors of the operands. The semantics of strict sequencing defines a strict ordering of the operands on the first level within the CombinedFragment with interactionOperator strict. Therefore OccurrenceSpecifications within contained CombinedFragment will not directly be compared with other OccurrenceSpecifications of the enclosing CombinedFragment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-strict"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-loop",
                    "name": "loop"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-loop-_ownedComment.0",
                      "body": "The InteractionOperatorKind loop designates that the CombinedFragment represents a loop. The loop operand will be repeated a number of times."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-loop"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-critical",
                    "name": "critical"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-critical-_ownedComment.0",
                      "body": "The InteractionOperatorKind critical designates that the CombinedFragment represents a critical region. A critical region means that the traces of the region cannot be interleaved by other OccurrenceSpecifications (on those Lifelines covered by the region). This means that the region is treated atomically by the enclosing fragment when determining the set of valid traces. Even though enclosing CombinedFragments may imply that some OccurrenceSpecifications may interleave into the region, such as with par-operator, this is prevented by defining a region."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-critical"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-neg",
                    "name": "neg"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-neg-_ownedComment.0",
                      "body": "The InteractionOperatorKind neg designates that the CombinedFragment represents traces that are defined to be invalid."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-neg"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-assert",
                    "name": "assert"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-assert-_ownedComment.0",
                      "body": "The InteractionOperatorKind assert designates that the CombinedFragment represents an assertion. The sequences of the operand of the assertion are the only valid continuations. All other continuations result in an invalid trace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-assert"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-ignore",
                    "name": "ignore"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-ignore-_ownedComment.0",
                      "body": "The InteractionOperatorKind ignore designates that there are some message types that are not shown within this combined fragment. These message types can be considered insignificant and are implicitly ignored if they appear in a corresponding execution. Alternatively, one can understand ignore to mean that the message types that are ignored can appear anywhere in the traces."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-ignore"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "InteractionOperatorKind-consider",
                    "name": "consider"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InteractionOperatorKind-consider-_ownedComment.0",
                      "body": "The InteractionOperatorKind consider designates which messages should be considered within this combined fragment. This is equivalent to defining every other message to be ignored."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InteractionOperatorKind-consider"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "MessageKind",
                "name": "MessageKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MessageKind-_ownedComment.0",
                  "body": "This is an enumerated type that identifies the type of Message."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MessageKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageKind-complete",
                    "name": "complete"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageKind-complete-_ownedComment.0",
                      "body": "sendEvent and receiveEvent are present"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageKind-complete"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageKind-lost",
                    "name": "lost"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageKind-lost-_ownedComment.0",
                      "body": "sendEvent present and receiveEvent absent"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageKind-lost"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageKind-found",
                    "name": "found"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageKind-found-_ownedComment.0",
                      "body": "sendEvent absent and receiveEvent present"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageKind-found"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageKind-unknown",
                    "name": "unknown"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageKind-unknown-_ownedComment.0",
                      "body": "sendEvent and receiveEvent absent (should not appear)"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageKind-unknown"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "MessageSort",
                "name": "MessageSort"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MessageSort-_ownedComment.0",
                  "body": "This is an enumerated type that identifies the type of communication action that was used to generate the Message."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MessageSort"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-synchCall",
                    "name": "synchCall"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-synchCall-_ownedComment.0",
                      "body": "The message was generated by a synchronous call to an operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-synchCall"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-asynchCall",
                    "name": "asynchCall"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-asynchCall-_ownedComment.0",
                      "body": "The message was generated by an asynchronous call to an operation; i.e., a CallAction with isSynchronous = false."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-asynchCall"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-asynchSignal",
                    "name": "asynchSignal"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-asynchSignal-_ownedComment.0",
                      "body": "The message was generated by an asynchronous send action."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-asynchSignal"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-createMessage",
                    "name": "createMessage"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-createMessage-_ownedComment.0",
                      "body": "The message designating the creation of another lifeline object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-createMessage"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-deleteMessage",
                    "name": "deleteMessage"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-deleteMessage-_ownedComment.0",
                      "body": "The message designating the termination of another lifeline."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-deleteMessage"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "MessageSort-reply",
                    "name": "reply"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MessageSort-reply-_ownedComment.0",
                      "body": "The message is a reply message to an operation call."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MessageSort-reply"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_invariant_stateInvariant",
                "name": "A_invariant_stateInvariant"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateInvariant-invariant"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_invariant_stateInvariant-stateInvariant"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_invariant_stateInvariant-stateInvariant",
                  "name": "stateInvariant",
                  "type": "StateInvariant",
                  "association": "A_invariant_stateInvariant"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_invariant_stateInvariant-stateInvariant-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_covered_stateInvariant",
                "name": "A_covered_stateInvariant"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StateInvariant-covered"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_covered_stateInvariant-stateInvariant"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_covered_stateInvariant-stateInvariant",
                  "name": "stateInvariant",
                  "type": "StateInvariant",
                  "association": "A_covered_stateInvariant"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Lifeline-coveredBy"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_covered_stateInvariant-stateInvariant-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_covered_stateInvariant-stateInvariant-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_covered_events",
                "name": "A_covered_events"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OccurrenceSpecification-covered"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_covered_events-events"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_covered_events-events",
                  "name": "events",
                  "isOrdered": true,
                  "type": "OccurrenceSpecification",
                  "association": "A_covered_events"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Lifeline-coveredBy"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_covered_events-events-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_covered_events-events-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_toBefore_after",
                "name": "A_toBefore_after"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OccurrenceSpecification-toBefore"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "GeneralOrdering-after"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_message_messageEnd",
                "name": "A_message_messageEnd"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "MessageEnd-message"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_message_messageEnd-messageEnd"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_message_messageEnd-messageEnd",
                  "name": "messageEnd",
                  "type": "MessageEnd",
                  "association": "A_message_messageEnd"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_message_messageEnd-messageEnd-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_message_messageEnd-messageEnd-_upperValue",
                    "value": 2
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signature_message",
                "name": "A_signature_message"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Message-signature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signature_message-message"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signature_message-message",
                  "name": "message",
                  "type": "Message",
                  "association": "A_signature_message"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signature_message-message-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signature_message-message-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_connector_message",
                "name": "A_connector_message"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Message-connector"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_connector_message-message"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_connector_message-message",
                  "name": "message",
                  "type": "Message",
                  "association": "A_connector_message"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_connector_message-message-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_connector_message-message-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_receiveEvent_endMessage",
                "name": "A_receiveEvent_endMessage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Message-receiveEvent"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_receiveEvent_endMessage-endMessage"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_receiveEvent_endMessage-endMessage",
                  "name": "endMessage",
                  "type": "Message",
                  "association": "A_receiveEvent_endMessage"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "MessageEnd-message"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_receiveEvent_endMessage-endMessage-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_sendEvent_endMessage",
                "name": "A_sendEvent_endMessage"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Message-sendEvent"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_sendEvent_endMessage-endMessage"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_sendEvent_endMessage-endMessage",
                  "name": "endMessage",
                  "type": "Message",
                  "association": "A_sendEvent_endMessage"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "MessageEnd-message"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_sendEvent_endMessage-endMessage-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_argument_message",
                "name": "A_argument_message"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Message-argument"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_argument_message-message"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_argument_message-message",
                  "name": "message",
                  "type": "Message",
                  "association": "A_argument_message"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_argument_message-message-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_selector_lifeline",
                "name": "A_selector_lifeline"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Lifeline-selector"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_selector_lifeline-lifeline"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_selector_lifeline-lifeline",
                  "name": "lifeline",
                  "type": "Lifeline",
                  "association": "A_selector_lifeline"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_selector_lifeline-lifeline-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_decomposedAs_lifeline",
                "name": "A_decomposedAs_lifeline"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Lifeline-decomposedAs"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_decomposedAs_lifeline-lifeline"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_decomposedAs_lifeline-lifeline",
                  "name": "lifeline",
                  "type": "Lifeline",
                  "association": "A_decomposedAs_lifeline"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_represents_lifeline",
                "name": "A_represents_lifeline"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Lifeline-represents"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_represents_lifeline-lifeline"
                  },
                  "_parent": "_"
                }
              ],
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "A_represents_lifeline-_ownedComment.0",
                  "body": "If a Part has multiplicity, multiple lifelines might be used to show it."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "A_represents_lifeline"
                  },
                  "_parent": "_"
                }
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_represents_lifeline-lifeline",
                  "name": "lifeline",
                  "type": "Lifeline",
                  "association": "A_represents_lifeline"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_represents_lifeline-lifeline-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_represents_lifeline-lifeline-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_returnValueRecipient_interactionUse",
                "name": "A_returnValueRecipient_interactionUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionUse-returnValueRecipient"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_returnValueRecipient_interactionUse-interactionUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_returnValueRecipient_interactionUse-interactionUse",
                  "name": "interactionUse",
                  "type": "InteractionUse",
                  "association": "A_returnValueRecipient_interactionUse"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_returnValueRecipient_interactionUse-interactionUse-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_returnValueRecipient_interactionUse-interactionUse-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_refersTo_interactionUse",
                "name": "A_refersTo_interactionUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionUse-refersTo"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_refersTo_interactionUse-interactionUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_refersTo_interactionUse-interactionUse",
                  "name": "interactionUse",
                  "type": "InteractionUse",
                  "association": "A_refersTo_interactionUse"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_refersTo_interactionUse-interactionUse-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_refersTo_interactionUse-interactionUse-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_returnValue_interactionUse",
                "name": "A_returnValue_interactionUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionUse-returnValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_returnValue_interactionUse-interactionUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_returnValue_interactionUse-interactionUse",
                  "name": "interactionUse",
                  "type": "InteractionUse",
                  "association": "A_returnValue_interactionUse"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_returnValue_interactionUse-interactionUse-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_argument_interactionUse",
                "name": "A_argument_interactionUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionUse-argument"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_argument_interactionUse-interactionUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_argument_interactionUse-interactionUse",
                  "name": "interactionUse",
                  "type": "InteractionUse",
                  "association": "A_argument_interactionUse"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_argument_interactionUse-interactionUse-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_actualGate_interactionUse",
                "name": "A_actualGate_interactionUse"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionUse-actualGate"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_actualGate_interactionUse-interactionUse"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_actualGate_interactionUse-interactionUse",
                  "name": "interactionUse",
                  "type": "InteractionUse",
                  "association": "A_actualGate_interactionUse"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_actualGate_interactionUse-interactionUse-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_fragment_enclosingOperand",
                "name": "A_fragment_enclosingOperand"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionOperand-fragment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "InteractionFragment-enclosingOperand"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_guard_interactionOperand",
                "name": "A_guard_interactionOperand"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionOperand-guard"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_guard_interactionOperand-interactionOperand"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_guard_interactionOperand-interactionOperand",
                  "name": "interactionOperand",
                  "type": "InteractionOperand",
                  "association": "A_guard_interactionOperand"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_generalOrdering_interactionFragment",
                "name": "A_generalOrdering_interactionFragment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionFragment-generalOrdering"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_generalOrdering_interactionFragment-interactionFragment"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_generalOrdering_interactionFragment-interactionFragment",
                  "name": "interactionFragment",
                  "type": "InteractionFragment",
                  "association": "A_generalOrdering_interactionFragment"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_generalOrdering_interactionFragment-interactionFragment-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_covered_coveredBy",
                "name": "A_covered_coveredBy"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionFragment-covered"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Lifeline-coveredBy"
                  },
                  "_parent": "_"
                }
              ],
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "A_covered_coveredBy-_ownedComment.0",
                  "body": "This association shows the lifelines that make up an interaction. A lifeline may be part of more than one interaction use."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "A_covered_coveredBy"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_minint_interactionConstraint",
                "name": "A_minint_interactionConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionConstraint-minint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_minint_interactionConstraint-interactionConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_minint_interactionConstraint-interactionConstraint",
                  "name": "interactionConstraint",
                  "type": "InteractionConstraint",
                  "association": "A_minint_interactionConstraint"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_minint_interactionConstraint-interactionConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_maxint_interactionConstraint",
                "name": "A_maxint_interactionConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InteractionConstraint-maxint"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_maxint_interactionConstraint-interactionConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_maxint_interactionConstraint-interactionConstraint",
                  "name": "interactionConstraint",
                  "type": "InteractionConstraint",
                  "association": "A_maxint_interactionConstraint"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_maxint_interactionConstraint-interactionConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_action_interaction",
                "name": "A_action_interaction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interaction-action"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_action_interaction-interaction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_action_interaction-interaction",
                  "name": "interaction",
                  "type": "Interaction",
                  "association": "A_action_interaction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_action_interaction-interaction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_formalGate_interaction",
                "name": "A_formalGate_interaction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interaction-formalGate"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_formalGate_interaction-interaction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_formalGate_interaction-interaction",
                  "name": "interaction",
                  "type": "Interaction",
                  "association": "A_formalGate_interaction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_formalGate_interaction-interaction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_lifeline_interaction",
                "name": "A_lifeline_interaction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interaction-lifeline"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Lifeline-interaction"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_fragment_enclosingInteraction",
                "name": "A_fragment_enclosingInteraction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interaction-fragment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "InteractionFragment-enclosingInteraction"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_message_interaction",
                "name": "A_message_interaction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Interaction-message"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Message-interaction"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_before_toAfter",
                "name": "A_before_toAfter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "GeneralOrdering-before"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "OccurrenceSpecification-toAfter"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_finish_executionSpecification",
                "name": "A_finish_executionSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExecutionSpecification-finish"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_finish_executionSpecification-executionSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "A_finish_executionSpecification-_ownedComment.0",
                  "body": "The event shows the time point at which the action completes execution."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "A_finish_executionSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_finish_executionSpecification-executionSpecification",
                  "name": "executionSpecification",
                  "type": "ExecutionSpecification",
                  "association": "A_finish_executionSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_finish_executionSpecification-executionSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_finish_executionSpecification-executionSpecification-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_start_executionSpecification",
                "name": "A_start_executionSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExecutionSpecification-start"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_start_executionSpecification-executionSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "A_start_executionSpecification-_ownedComment.0",
                  "body": "The event shows the time point at which the action begins execution."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "A_start_executionSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_start_executionSpecification-executionSpecification",
                  "name": "executionSpecification",
                  "type": "ExecutionSpecification",
                  "association": "A_start_executionSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_start_executionSpecification-executionSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_start_executionSpecification-executionSpecification-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_execution_executionOccurrenceSpecification",
                "name": "A_execution_executionOccurrenceSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExecutionOccurrenceSpecification-execution"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification",
                  "name": "executionOccurrenceSpecification",
                  "type": "ExecutionOccurrenceSpecification",
                  "association": "A_execution_executionOccurrenceSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_execution_executionOccurrenceSpecification-executionOccurrenceSpecification-_upperValue",
                    "value": 2
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_message_considerIgnoreFragment",
                "name": "A_message_considerIgnoreFragment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConsiderIgnoreFragment-message"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_message_considerIgnoreFragment-considerIgnoreFragment"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_message_considerIgnoreFragment-considerIgnoreFragment",
                  "name": "considerIgnoreFragment",
                  "type": "ConsiderIgnoreFragment",
                  "association": "A_message_considerIgnoreFragment"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_message_considerIgnoreFragment-considerIgnoreFragment-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_message_considerIgnoreFragment-considerIgnoreFragment-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_cfragmentGate_combinedFragment",
                "name": "A_cfragmentGate_combinedFragment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CombinedFragment-cfragmentGate"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_cfragmentGate_combinedFragment-combinedFragment"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_cfragmentGate_combinedFragment-combinedFragment",
                  "name": "combinedFragment",
                  "type": "CombinedFragment",
                  "association": "A_cfragmentGate_combinedFragment"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_cfragmentGate_combinedFragment-combinedFragment-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_operand_combinedFragment",
                "name": "A_operand_combinedFragment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CombinedFragment-operand"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_operand_combinedFragment-combinedFragment"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_operand_combinedFragment-combinedFragment",
                  "name": "combinedFragment",
                  "type": "CombinedFragment",
                  "association": "A_operand_combinedFragment"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_operand_combinedFragment-combinedFragment-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_behavior_behaviorExecutionSpecification",
                "name": "A_behavior_behaviorExecutionSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehaviorExecutionSpecification-behavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification",
                  "name": "behaviorExecutionSpecification",
                  "type": "BehaviorExecutionSpecification",
                  "association": "A_behavior_behaviorExecutionSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_behavior_behaviorExecutionSpecification-behaviorExecutionSpecification-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_action_actionExecutionSpecification",
                "name": "A_action_actionExecutionSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActionExecutionSpecification-action"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_action_actionExecutionSpecification-actionExecutionSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_action_actionExecutionSpecification-actionExecutionSpecification",
                  "name": "actionExecutionSpecification",
                  "type": "ActionExecutionSpecification",
                  "association": "A_action_actionExecutionSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_action_actionExecutionSpecification-actionExecutionSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_action_actionExecutionSpecification-actionExecutionSpecification-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "InformationFlows",
            "name": "InformationFlows"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.0",
                "importedPackage": "UseCases"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.1",
                "importedPackage": "Deployments"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.2",
                "importedPackage": "StructuredClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.3",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.4",
                "importedPackage": "SimpleClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.5",
                "importedPackage": "Packages"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "InformationFlows-_packageImport.6",
                "importedPackage": "Activities"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InformationFlow",
                "name": "InformationFlow"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InformationFlow-_ownedComment.0",
                  "body": "InformationFlows describe circulation of information through a system in a general manner. They do not specify the nature of the information, mechanisms by which it is conveyed, sequences of exchange or any control conditions. During more detailed modeling, representation and realization links may be added to specify which model elements implement an InformationFlow and to show how information is conveyed.  InformationFlows require some kind of “information channel” for unidirectional transmission of information items from sources to targets.  They specify the information channel’s realizations, if any, and identify the information that flows along them.  Information moving along the information channel may be represented by abstract InformationItems and by concrete Classifiers."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InformationFlow"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationFlow-must_conform",
                    "name": "must_conform"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-must_conform-_ownedComment.0",
                      "body": "The sources and targets of the information flow must conform to the sources and targets or conversely the targets and sources of the realization relationships."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-must_conform"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationFlow-must_conform-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationFlow-sources_and_targets_kind",
                    "name": "sources_and_targets_kind"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-sources_and_targets_kind-_ownedComment.0",
                      "body": "The sources and targets of the information flow can only be one of the following kind: Actor, Node, UseCase, Artifact, Class, Component, Port, Property, Interface, Package, ActivityNode, ActivityPartition,\r\nBehavior and InstanceSpecification except when its classifier is a relationship (i.e. it represents a link)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-sources_and_targets_kind"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationFlow-sources_and_targets_kind-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(self.informationSource->forAll( sis |\n  oclIsKindOf(Actor) or oclIsKindOf(Node) or oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or \n  oclIsKindOf(Class) or oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or \n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or oclIsKindOf(ActivityPartition) or \n  (oclIsKindOf(InstanceSpecification) and not sis.oclAsType(InstanceSpecification).classifier->exists(oclIsKindOf(Relationship))))) \n\nand\n\n(self.informationTarget->forAll( sit | \n  oclIsKindOf(Actor) or oclIsKindOf(Node) or oclIsKindOf(UseCase) or oclIsKindOf(Artifact) or \n  oclIsKindOf(Class) or oclIsKindOf(Component) or oclIsKindOf(Port) or oclIsKindOf(Property) or \n  oclIsKindOf(Interface) or oclIsKindOf(Package) or oclIsKindOf(ActivityNode) or oclIsKindOf(ActivityPartition) or \n(oclIsKindOf(InstanceSpecification) and not sit.oclAsType(InstanceSpecification).classifier->exists(oclIsKindOf(Relationship)))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationFlow-convey_classifiers",
                    "name": "convey_classifiers"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationFlow"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-convey_classifiers-_ownedComment.0",
                      "body": "An information flow can only convey classifiers that are allowed to represent an information item."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-convey_classifiers"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationFlow-convey_classifiers-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.conveyed->forAll(oclIsKindOf(Class) or oclIsKindOf(Interface)\n  or oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InformationFlow-_generalization.0",
                    "general": "DirectedRelationship"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InformationFlow-_generalization.1",
                    "general": "PackageableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-conveyed",
                    "name": "conveyed",
                    "type": "Classifier",
                    "association": "A_conveyed_conveyingFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-conveyed-_ownedComment.0",
                      "body": "Specifies the information items that may circulate on this information flow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-conveyed"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-conveyed-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-informationSource",
                    "name": "informationSource",
                    "type": "NamedElement",
                    "association": "A_informationSource_informationFlow"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-source"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-informationSource-_ownedComment.0",
                      "body": "Defines from which source the conveyed InformationItems are initiated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-informationSource"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-informationSource-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-informationTarget",
                    "name": "informationTarget",
                    "type": "NamedElement",
                    "association": "A_informationTarget_informationFlow"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-informationTarget-_ownedComment.0",
                      "body": "Defines to which target the conveyed InformationItems are directed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-informationTarget"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-informationTarget-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-realization",
                    "name": "realization",
                    "type": "Relationship",
                    "association": "A_realization_abstraction_flow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-realization-_ownedComment.0",
                      "body": "Determines which Relationship will realize the specified flow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-realization"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InformationFlow-realization-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-realization-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-realizingActivityEdge",
                    "name": "realizingActivityEdge",
                    "type": "ActivityEdge",
                    "association": "A_realizingActivityEdge_informationFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-realizingActivityEdge-_ownedComment.0",
                      "body": "Determines which ActivityEdges will realize the specified flow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-realizingActivityEdge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InformationFlow-realizingActivityEdge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-realizingActivityEdge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-realizingConnector",
                    "name": "realizingConnector",
                    "type": "Connector",
                    "association": "A_realizingConnector_informationFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-realizingConnector-_ownedComment.0",
                      "body": "Determines which Connectors will realize the specified flow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-realizingConnector"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InformationFlow-realizingConnector-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-realizingConnector-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InformationFlow-realizingMessage",
                    "name": "realizingMessage",
                    "type": "Message",
                    "association": "A_realizingMessage_informationFlow"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationFlow-realizingMessage-_ownedComment.0",
                      "body": "Determines which Messages will realize the specified flow."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationFlow-realizingMessage"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InformationFlow-realizingMessage-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InformationFlow-realizingMessage-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InformationItem",
                "name": "InformationItem"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InformationItem-_ownedComment.0",
                  "body": "InformationItems represent many kinds of information that can flow from sources to targets in very abstract ways.  They represent the kinds of information that may move within a system, but do not elaborate details of the transferred information.  Details of transferred information are the province of other Classifiers that may ultimately define InformationItems.  Consequently, InformationItems cannot be instantiated and do not themselves have features, generalizations, or associations. An important use of InformationItems is to represent information during early design stages, possibly before the detailed modeling decisions that will ultimately define them have been made. Another purpose of InformationItems is to abstract portions of complex models in less precise, but perhaps more general and communicable, ways. "
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InformationItem"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationItem-sources_and_targets",
                    "name": "sources_and_targets"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationItem"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationItem-sources_and_targets-_ownedComment.0",
                      "body": "The sources and targets of an information item (its related information flows) must designate subsets of the sources and targets of the representation information item, if any. The Classifiers that can realize an information item can only be of the following kind: Class, Interface, InformationItem, Signal, Component."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationItem-sources_and_targets"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationItem-sources_and_targets-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(self.represented->select(oclIsKindOf(InformationItem))->forAll(p |\n  p.conveyingFlow.source->forAll(q | self.conveyingFlow.source->includes(q)) and\n    p.conveyingFlow.target->forAll(q | self.conveyingFlow.target->includes(q)))) and\n      (self.represented->forAll(oclIsKindOf(Class) or oclIsKindOf(Interface) or\n        oclIsKindOf(InformationItem) or oclIsKindOf(Signal) or oclIsKindOf(Component)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationItem-has_no",
                    "name": "has_no"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationItem"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationItem-has_no-_ownedComment.0",
                      "body": "An informationItem has no feature, no generalization, and no associations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationItem-has_no"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationItem-has_no-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.generalization->isEmpty() and self.feature->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InformationItem-not_instantiable",
                    "name": "not_instantiable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationItem"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InformationItem-not_instantiable-_ownedComment.0",
                      "body": "It is not instantiable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InformationItem-not_instantiable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InformationItem-not_instantiable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isAbstract"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InformationItem-_generalization.0",
                  "general": "Classifier"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "InformationItem-represented",
                  "name": "represented",
                  "type": "Classifier",
                  "association": "A_represented_representation"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "InformationItem-represented-_ownedComment.0",
                    "body": "Determines the classifiers that will specify the structure and nature of the information. An information item represents all its represented classifiers."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "InformationItem-represented"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "InformationItem-represented-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "InformationItem-represented-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_represented_representation",
                "name": "A_represented_representation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationItem-represented"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_represented_representation-representation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_represented_representation-representation",
                  "name": "representation",
                  "type": "InformationItem",
                  "association": "A_represented_representation"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_represented_representation-representation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_represented_representation-representation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_conveyed_conveyingFlow",
                "name": "A_conveyed_conveyingFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-conveyed"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_conveyed_conveyingFlow-conveyingFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_conveyed_conveyingFlow-conveyingFlow",
                  "name": "conveyingFlow",
                  "type": "InformationFlow",
                  "association": "A_conveyed_conveyingFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_conveyed_conveyingFlow-conveyingFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_conveyed_conveyingFlow-conveyingFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realizingActivityEdge_informationFlow",
                "name": "A_realizingActivityEdge_informationFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-realizingActivityEdge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_realizingActivityEdge_informationFlow-informationFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_realizingActivityEdge_informationFlow-informationFlow",
                  "name": "informationFlow",
                  "type": "InformationFlow",
                  "association": "A_realizingActivityEdge_informationFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_realizingActivityEdge_informationFlow-informationFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_realizingActivityEdge_informationFlow-informationFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realizingMessage_informationFlow",
                "name": "A_realizingMessage_informationFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-realizingMessage"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_realizingMessage_informationFlow-informationFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_realizingMessage_informationFlow-informationFlow",
                  "name": "informationFlow",
                  "type": "InformationFlow",
                  "association": "A_realizingMessage_informationFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_realizingMessage_informationFlow-informationFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_realizingMessage_informationFlow-informationFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_informationSource_informationFlow",
                "name": "A_informationSource_informationFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-informationSource"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_informationSource_informationFlow-informationFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_informationSource_informationFlow-informationFlow",
                  "name": "informationFlow",
                  "type": "InformationFlow",
                  "association": "A_informationSource_informationFlow"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_source_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_informationSource_informationFlow-informationFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_informationSource_informationFlow-informationFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realization_abstraction_flow",
                "name": "A_realization_abstraction_flow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-realization"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_realization_abstraction_flow-abstraction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_realization_abstraction_flow-abstraction",
                  "name": "abstraction",
                  "type": "InformationFlow",
                  "association": "A_realization_abstraction_flow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_realization_abstraction_flow-abstraction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_realization_abstraction_flow-abstraction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_realizingConnector_informationFlow",
                "name": "A_realizingConnector_informationFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-realizingConnector"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_realizingConnector_informationFlow-informationFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_realizingConnector_informationFlow-informationFlow",
                  "name": "informationFlow",
                  "type": "InformationFlow",
                  "association": "A_realizingConnector_informationFlow"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_realizingConnector_informationFlow-informationFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_realizingConnector_informationFlow-informationFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_informationTarget_informationFlow",
                "name": "A_informationTarget_informationFlow"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InformationFlow-informationTarget"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_informationTarget_informationFlow-informationFlow"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_informationTarget_informationFlow-informationFlow",
                  "name": "informationFlow",
                  "type": "InformationFlow",
                  "association": "A_informationTarget_informationFlow"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_informationTarget_informationFlow-informationFlow-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_informationTarget_informationFlow-informationFlow-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Deployments",
            "name": "Deployments"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Deployments-_packageImport.0",
                "importedPackage": "StructuredClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Deployments-_packageImport.1",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Artifact",
                "name": "Artifact"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Artifact-_ownedComment.0",
                  "body": "An artifact is the specification of a physical piece of information that is used or produced by a software development process, or by deployment and operation of a system. Examples of artifacts include model files, source files, scripts, and binary executable files, a table in a database system, a development deliverable, or a word-processing document, a mail message.\nAn artifact is the source of a deployment to a node."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Artifact"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Artifact-_generalization.0",
                    "general": "Classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Artifact-_generalization.1",
                    "general": "DeployedArtifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Artifact-fileName",
                    "name": "fileName"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Artifact-fileName-_ownedComment.0",
                      "body": "A concrete name that is used to refer to the Artifact in a physical context. Example: file system name, universal resource locator."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Artifact-fileName"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Artifact-fileName-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Artifact-manifestation",
                    "name": "manifestation",
                    "aggregation": "composite",
                    "type": "Manifestation",
                    "association": "A_manifestation_artifact"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-clientDependency"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Artifact-manifestation-_ownedComment.0",
                      "body": "The set of model elements that are manifested in the Artifact. That is, these model elements are utilized in the construction (or generation) of the artifact."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Artifact-manifestation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Artifact-manifestation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Artifact-manifestation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Artifact-nestedArtifact",
                    "name": "nestedArtifact",
                    "aggregation": "composite",
                    "type": "Artifact",
                    "association": "A_nestedArtifact_artifact"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Artifact-nestedArtifact-_ownedComment.0",
                      "body": "The Artifacts that are defined (nested) within the Artifact. The association is a specialization of the ownedMember association from Namespace to NamedElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Artifact-nestedArtifact"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Artifact-nestedArtifact-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Artifact-nestedArtifact-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Artifact-ownedAttribute",
                    "name": "ownedAttribute",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_ownedAttribute_artifact"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Artifact-ownedAttribute-_ownedComment.0",
                      "body": "The attributes or association ends defined for the Artifact. The association is a specialization of the ownedMember association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Artifact-ownedAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Artifact-ownedAttribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Artifact-ownedAttribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Artifact-ownedOperation",
                    "name": "ownedOperation",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Operation",
                    "association": "A_ownedOperation_artifact"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Artifact-ownedOperation-_ownedComment.0",
                      "body": "The Operations defined for the Artifact. The association is a specialization of the ownedMember association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Artifact-ownedOperation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Artifact-ownedOperation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Artifact-ownedOperation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CommunicationPath",
                "name": "CommunicationPath"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CommunicationPath-_ownedComment.0",
                  "body": "A communication path is an association between two deployment targets, through which they are able to exchange signals and messages."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CommunicationPath"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "CommunicationPath-association_ends",
                  "name": "association_ends"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "CommunicationPath"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CommunicationPath-association_ends-_ownedComment.0",
                    "body": "The association ends of a CommunicationPath are typed by DeploymentTargets."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CommunicationPath-association_ends"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "CommunicationPath-association_ends-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "endType->forAll (oclIsKindOf(DeploymentTarget))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CommunicationPath-_generalization.0",
                  "general": "Association"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DeployedArtifact",
                "name": "DeployedArtifact",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DeployedArtifact-_ownedComment.0",
                  "body": "A deployed artifact is an artifact or artifact instance that has been deployed to a deployment target."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DeployedArtifact"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DeployedArtifact-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Deployment",
                "name": "Deployment"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Deployment-_ownedComment.0",
                  "body": "A deployment is the allocation of an artifact or artifact instance to a deployment target.\nA component deployment is the deployment of one or more artifacts or artifact instances to a deployment target, optionally parameterized by a deployment specification. Examples are executables and configuration files."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Deployment"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Deployment-_generalization.0",
                  "general": "Dependency"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Deployment-configuration",
                    "name": "configuration",
                    "aggregation": "composite",
                    "type": "DeploymentSpecification",
                    "association": "A_configuration_deployment"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Deployment-configuration-_ownedComment.0",
                      "body": "The specification of properties that parameterize the deployment and execution of one or more Artifacts."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Deployment-configuration"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Deployment-configuration-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Deployment-configuration-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Deployment-deployedArtifact",
                    "name": "deployedArtifact",
                    "type": "DeployedArtifact",
                    "association": "A_deployedArtifact_deploymentForArtifact"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Dependency-supplier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Deployment-deployedArtifact-_ownedComment.0",
                      "body": "The Artifacts that are deployed onto a Node. This association specializes the supplier association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Deployment-deployedArtifact"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Deployment-deployedArtifact-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Deployment-deployedArtifact-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Deployment-location",
                    "name": "location",
                    "type": "DeploymentTarget",
                    "association": "A_deployment_location"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Dependency-client"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Deployment-location-_ownedComment.0",
                      "body": "The DeployedTarget which is the target of a Deployment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Deployment-location"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DeploymentSpecification",
                "name": "DeploymentSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DeploymentSpecification-_ownedComment.0",
                  "body": "A deployment specification specifies a set of properties that determine execution parameters of a component artifact that is deployed on a node. A deployment specification can be aimed at a specific type of container. An artifact that reifies or implements deployment specification properties is a deployment descriptor."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DeploymentSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DeploymentSpecification-deployment_target",
                    "name": "deployment_target"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DeploymentSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentSpecification-deployment_target-_ownedComment.0",
                      "body": "The DeploymentTarget of a DeploymentSpecification is a kind of ExecutionEnvironment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentSpecification-deployment_target"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DeploymentSpecification-deployment_target-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "deployment->forAll (location.oclIsKindOf(ExecutionEnvironment))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DeploymentSpecification-deployed_elements",
                    "name": "deployed_elements"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DeploymentSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentSpecification-deployed_elements-_ownedComment.0",
                      "body": "The deployedElements of a DeploymentTarget that are involved in a Deployment that has an associated Deployment-Specification is a kind of Component (i.e., the configured components)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentSpecification-deployed_elements"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DeploymentSpecification-deployed_elements-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "deployment->forAll (location.deployedElement->forAll (oclIsKindOf(Component)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DeploymentSpecification-_generalization.0",
                  "general": "Artifact"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DeploymentSpecification-deployment",
                    "name": "deployment",
                    "type": "Deployment",
                    "association": "A_configuration_deployment"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentSpecification-deployment-_ownedComment.0",
                      "body": "The deployment with which the DeploymentSpecification is associated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentSpecification-deployment"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentSpecification-deployment-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DeploymentSpecification-deploymentLocation",
                    "name": "deploymentLocation"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentSpecification-deploymentLocation-_ownedComment.0",
                      "body": "The location where an Artifact is deployed onto a Node. This is typically a 'directory' or 'memory address.'"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentSpecification-deploymentLocation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentSpecification-deploymentLocation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DeploymentSpecification-executionLocation",
                    "name": "executionLocation"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentSpecification-executionLocation-_ownedComment.0",
                      "body": "The location where a component Artifact executes. This may be a local or remote location."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentSpecification-executionLocation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentSpecification-executionLocation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DeploymentTarget",
                "name": "DeploymentTarget",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DeploymentTarget-_ownedComment.0",
                  "body": "A deployment target is the location for a deployed artifact."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DeploymentTarget"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DeploymentTarget-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DeploymentTarget-deployedElement",
                    "name": "deployedElement",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "PackageableElement",
                    "association": "A_deployedElement_deploymentTarget"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentTarget-deployedElement-_ownedComment.0",
                      "body": "The set of elements that are manifested in an Artifact that is involved in Deployment to a DeploymentTarget."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentTarget-deployedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentTarget-deployedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DeploymentTarget-deployedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DeploymentTarget-deployment",
                    "name": "deployment",
                    "aggregation": "composite",
                    "type": "Deployment",
                    "association": "A_deployment_location"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-clientDependency"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DeploymentTarget-deployment-_ownedComment.0",
                      "body": "The set of Deployments for a DeploymentTarget."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DeploymentTarget-deployment"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentTarget-deployment-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DeploymentTarget-deployment-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "DeploymentTarget-deployedElement.1",
                  "name": "deployedElement",
                  "isQuery": true,
                  "bodyCondition": "DeploymentTarget-deployedElement.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "DeploymentTarget-deployedElement.1-_ownedComment.0",
                    "body": "Derivation for DeploymentTarget::/deployedElement"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "DeploymentTarget-deployedElement.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DeploymentTarget-deployedElement.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "DeploymentTarget-deployedElement.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "DeploymentTarget-deployedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DeploymentTarget-deployedElement.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (deployment.deployedArtifact->select(oclIsKindOf(Artifact))->collect(oclAsType(Artifact).manifestation)->collect(utilizedElement)->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "DeploymentTarget-deployedElement.1-result",
                    "name": "result",
                    "direction": "return",
                    "type": "PackageableElement"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "DeploymentTarget-deployedElement.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DeploymentTarget-deployedElement.1-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Device",
                "name": "Device"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Device-_ownedComment.0",
                  "body": "A device is a physical computational resource with processing capability upon which artifacts may be deployed for execution. Devices may be complex (i.e., they may consist of other devices)."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Device"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Device-_generalization.0",
                  "general": "Node"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExecutionEnvironment",
                "name": "ExecutionEnvironment"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExecutionEnvironment-_ownedComment.0",
                  "body": "An execution environment is a node that offers an execution environment for specific types of components that are deployed on it in the form of executable artifacts."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExecutionEnvironment"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExecutionEnvironment-_generalization.0",
                  "general": "Node"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Manifestation",
                "name": "Manifestation"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Manifestation-_ownedComment.0",
                  "body": "A manifestation is the concrete physical rendering of one or more model elements by an artifact."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Manifestation"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Manifestation-_generalization.0",
                  "general": "Abstraction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Manifestation-utilizedElement",
                  "name": "utilizedElement",
                  "type": "PackageableElement",
                  "association": "A_utilizedElement_manifestation"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Dependency-supplier"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Manifestation-utilizedElement-_ownedComment.0",
                    "body": "The model element that is utilized in the manifestation in an Artifact."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Manifestation-utilizedElement"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Node",
                "name": "Node"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Node-_ownedComment.0",
                  "body": "A Node is computational resource upon which artifacts may be deployed for execution. Nodes can be interconnected through communication paths to define network structures."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Node"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Node-internal_structure",
                  "name": "internal_structure"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Node"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Node-internal_structure-_ownedComment.0",
                    "body": "The internal structure of a Node (if defined) consists solely of parts of type Node."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Node-internal_structure"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Node-internal_structure-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "part->forAll(oclIsKindOf(Node))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Node-_generalization.1",
                    "general": "Class"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Node-_generalization.0",
                    "general": "DeploymentTarget"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Node-nestedNode",
                  "name": "nestedNode",
                  "aggregation": "composite",
                  "type": "Node",
                  "association": "A_nestedNode_node"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Namespace-ownedMember"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Node-nestedNode-_ownedComment.0",
                    "body": "The Nodes that are defined (nested) within the Node."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Node-nestedNode"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Node-nestedNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "Node-nestedNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nestedNode_node",
                "name": "A_nestedNode_node"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Node-nestedNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_nestedNode_node-node"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_nestedNode_node-node",
                  "name": "node",
                  "type": "Node",
                  "association": "A_nestedNode_node"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_nestedNode_node-node-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_utilizedElement_manifestation",
                "name": "A_utilizedElement_manifestation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Manifestation-utilizedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_utilizedElement_manifestation-manifestation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_utilizedElement_manifestation-manifestation",
                  "name": "manifestation",
                  "type": "Manifestation",
                  "association": "A_utilizedElement_manifestation"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_utilizedElement_manifestation-manifestation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_utilizedElement_manifestation-manifestation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_deployedElement_deploymentTarget",
                "name": "A_deployedElement_deploymentTarget",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DeploymentTarget-deployedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_deployedElement_deploymentTarget-deploymentTarget"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_deployedElement_deploymentTarget-deploymentTarget",
                  "name": "deploymentTarget",
                  "type": "DeploymentTarget",
                  "association": "A_deployedElement_deploymentTarget"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_deployedElement_deploymentTarget-deploymentTarget-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_deployedElement_deploymentTarget-deploymentTarget-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_deployment_location",
                "name": "A_deployment_location"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DeploymentTarget-deployment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Deployment-location"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_deployedArtifact_deploymentForArtifact",
                "name": "A_deployedArtifact_deploymentForArtifact"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Deployment-deployedArtifact"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_deployedArtifact_deploymentForArtifact-deploymentForArtifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_deployedArtifact_deploymentForArtifact-deploymentForArtifact",
                  "name": "deploymentForArtifact",
                  "type": "Deployment",
                  "association": "A_deployedArtifact_deploymentForArtifact"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_deployedArtifact_deploymentForArtifact-deploymentForArtifact-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_deployedArtifact_deploymentForArtifact-deploymentForArtifact-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_configuration_deployment",
                "name": "A_configuration_deployment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Deployment-configuration"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "DeploymentSpecification-deployment"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedAttribute_artifact",
                "name": "A_ownedAttribute_artifact"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Artifact-ownedAttribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedAttribute_artifact-artifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedAttribute_artifact-artifact",
                  "name": "artifact",
                  "type": "Artifact",
                  "association": "A_ownedAttribute_artifact"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "A_attribute_classifier-classifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedAttribute_artifact-artifact-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedOperation_artifact",
                "name": "A_ownedOperation_artifact"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Artifact-ownedOperation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedOperation_artifact-artifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedOperation_artifact-artifact",
                  "name": "artifact",
                  "type": "Artifact",
                  "association": "A_ownedOperation_artifact"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Feature-featuringClassifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedOperation_artifact-artifact-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nestedArtifact_artifact",
                "name": "A_nestedArtifact_artifact"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Artifact-nestedArtifact"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_nestedArtifact_artifact-artifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_nestedArtifact_artifact-artifact",
                  "name": "artifact",
                  "type": "Artifact",
                  "association": "A_nestedArtifact_artifact"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_nestedArtifact_artifact-artifact-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_manifestation_artifact",
                "name": "A_manifestation_artifact"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Artifact-manifestation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_manifestation_artifact-artifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_manifestation_artifact-artifact",
                  "name": "artifact",
                  "type": "Artifact",
                  "association": "A_manifestation_artifact"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Dependency-client"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  }
                ]
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "CommonStructure",
            "name": "CommonStructure"
          },
          "_parent": "_",
          "packageImport": {
            "_attributes": {
              "xmi:type": "uml:PackageImport",
              "xmi:id": "CommonStructure-_packageImport.0",
              "importedPackage": "Packages"
            },
            "_parent": "_"
          },
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Abstraction",
                "name": "Abstraction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Abstraction-_ownedComment.0",
                  "body": "An Abstraction is a Relationship that relates two Elements or sets of Elements that represent the same concept at different levels of abstraction or from different viewpoints."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Abstraction"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Abstraction-_generalization.0",
                  "general": "Dependency"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Abstraction-mapping",
                  "name": "mapping",
                  "aggregation": "composite",
                  "type": "OpaqueExpression",
                  "association": "A_mapping_abstraction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Abstraction-mapping-_ownedComment.0",
                    "body": "An OpaqueExpression that states the abstraction relationship between the supplier(s) and the client(s). In some cases, such as derivation, it is usually formal and unidirectional; in other cases, such as trace, it is usually informal and bidirectional. The mapping expression is optional and may be omitted if the precise relationship between the Elements is not specified."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Abstraction-mapping"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Abstraction-mapping-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Comment",
                "name": "Comment"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Comment-_ownedComment.0",
                  "body": "A Comment is a textual annotation that can be attached to a set of Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Comment"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Comment-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Comment-annotatedElement",
                    "name": "annotatedElement",
                    "type": "Element",
                    "association": "A_annotatedElement_comment"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Comment-annotatedElement-_ownedComment.0",
                      "body": "References the Element(s) being commented."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Comment-annotatedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Comment-annotatedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Comment-annotatedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Comment-body",
                    "name": "body"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Comment-body-_ownedComment.0",
                      "body": "Specifies a string that is the comment."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Comment-body"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Comment-body-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Constraint",
                "name": "Constraint"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Constraint-_ownedComment.0",
                  "body": "A Constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an Element or set of Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Constraint"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Constraint-boolean_value",
                    "name": "boolean_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Constraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-boolean_value-_ownedComment.0",
                      "body": "The ValueSpecification for a Constraint must evaluate to a Boolean value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-boolean_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Constraint-boolean_value-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Constraint-no_side_effects",
                    "name": "no_side_effects"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Constraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-no_side_effects-_ownedComment.0",
                      "body": "Evaluating the ValueSpecification for a Constraint must not have side effects."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-no_side_effects"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Constraint-no_side_effects-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Constraint-not_apply_to_self",
                    "name": "not_apply_to_self"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Constraint"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-not_apply_to_self-_ownedComment.0",
                      "body": "A Constraint cannot be applied to itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-not_apply_to_self"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Constraint-not_apply_to_self-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not constrainedElement->includes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Constraint-_generalization.0",
                  "general": "PackageableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Constraint-constrainedElement",
                    "name": "constrainedElement",
                    "isOrdered": true,
                    "type": "Element",
                    "association": "A_constrainedElement_constraint"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-constrainedElement-_ownedComment.0",
                      "body": "The ordered set of Elements referenced by this Constraint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-constrainedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Constraint-constrainedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Constraint-constrainedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Constraint-context",
                    "name": "context",
                    "type": "Namespace",
                    "association": "A_ownedRule_context"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-context-_ownedComment.0",
                      "body": "Specifies the Namespace that owns the Constraint."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-context"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Constraint-context-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Constraint-specification",
                    "name": "specification",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_specification_owningConstraint"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Constraint-specification-_ownedComment.0",
                      "body": "A condition that must be true when evaluated in order for the Constraint to be satisfied."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Constraint-specification"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Dependency",
                "name": "Dependency"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Dependency-_ownedComment.0",
                  "body": "A Dependency is a Relationship that signifies that a single model Element or a set of model Elements requires other model Elements for their specification or implementation. This means that the complete semantics of the client Element(s) are either semantically or structurally dependent on the definition of the supplier Element(s)."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Dependency"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Dependency-_generalization.0",
                    "general": "DirectedRelationship"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Dependency-_generalization.1",
                    "general": "PackageableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Dependency-client",
                    "name": "client",
                    "type": "NamedElement",
                    "association": "A_clientDependency_client"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-source"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Dependency-client-_ownedComment.0",
                      "body": "The Element(s) dependent on the supplier Element(s). In some cases (such as a trace Abstraction) the assignment of direction (that is, the designation of the client Element) is at the discretion of the modeler and is a stipulation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Dependency-client"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Dependency-client-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Dependency-supplier",
                    "name": "supplier",
                    "type": "NamedElement",
                    "association": "A_supplier_supplierDependency"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Dependency-supplier-_ownedComment.0",
                      "body": "The Element(s) on which the client Element(s) depend in some respect. The modeler may stipulate a sense of Dependency direction suitable for their domain."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Dependency-supplier"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Dependency-supplier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DirectedRelationship",
                "name": "DirectedRelationship",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DirectedRelationship-_ownedComment.0",
                  "body": "A DirectedRelationship represents a relationship between a collection of source model Elements and a collection of target model Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DirectedRelationship"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DirectedRelationship-_generalization.0",
                  "general": "Relationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DirectedRelationship-source",
                    "name": "source",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Element",
                    "association": "A_source_directedRelationship"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Relationship-relatedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DirectedRelationship-source-_ownedComment.0",
                      "body": "Specifies the source Element(s) of the DirectedRelationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DirectedRelationship-source-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DirectedRelationship-target",
                    "name": "target",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Element",
                    "association": "A_target_directedRelationship"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Relationship-relatedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DirectedRelationship-target-_ownedComment.0",
                      "body": "Specifies the target Element(s) of the DirectedRelationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-target"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "DirectedRelationship-target-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Element",
                "name": "Element",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Element-_ownedComment.0",
                  "body": "An Element is a constituent of a model. As such, it has the capability of owning other Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Element"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Element-has_owner",
                    "name": "has_owner"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Element"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-has_owner-_ownedComment.0",
                      "body": "Elements that must be owned must have an owner."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-has_owner"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Element-has_owner-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "mustBeOwned() implies owner->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Element-not_own_self",
                    "name": "not_own_self"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Element"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-not_own_self-_ownedComment.0",
                      "body": "An element may not directly or indirectly own itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-not_own_self"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Element-not_own_self-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not allOwnedElements()->includes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Element-ownedComment",
                    "name": "ownedComment",
                    "aggregation": "composite",
                    "type": "Comment",
                    "association": "A_ownedComment_owningElement"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-ownedComment-_ownedComment.0",
                      "body": "The Comments owned by this Element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-ownedComment"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Element-ownedComment-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Element-ownedComment-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Element-ownedElement",
                    "name": "ownedElement",
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Element",
                    "association": "A_ownedElement_owner"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-ownedElement-_ownedComment.0",
                      "body": "The Elements owned by this Element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Element-ownedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Element-ownedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Element-owner",
                    "name": "owner",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Element",
                    "association": "A_ownedElement_owner"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-owner-_ownedComment.0",
                      "body": "The Element that owns this Element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Element-owner-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Element-allOwnedElements",
                    "name": "allOwnedElements",
                    "isQuery": true,
                    "bodyCondition": "Element-allOwnedElements-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-allOwnedElements-_ownedComment.0",
                      "body": "The query allOwnedElements() gives all of the direct and indirect ownedElements of an Element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-allOwnedElements"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Element-allOwnedElements-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-allOwnedElements"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Element-allOwnedElements-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedElement->union(ownedElement->collect(e | e.allOwnedElements()))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Element-allOwnedElements-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Element"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Element-allOwnedElements-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Element-allOwnedElements-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Element-mustBeOwned",
                    "name": "mustBeOwned",
                    "isQuery": true,
                    "bodyCondition": "Element-mustBeOwned-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Element-mustBeOwned-_ownedComment.0",
                      "body": "The query mustBeOwned() indicates whether Elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-mustBeOwned"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Element-mustBeOwned-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Element-mustBeOwned"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Element-mustBeOwned-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (true)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Element-mustBeOwned-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ElementImport",
                "name": "ElementImport"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ElementImport-_ownedComment.0",
                  "body": "An ElementImport identifies a NamedElement in a Namespace other than the one that owns that NamedElement and allows the NamedElement to be referenced using an unqualified name in the Namespace owning the ElementImport."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ElementImport"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ElementImport-imported_element_is_public",
                    "name": "imported_element_is_public"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ElementImport"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-imported_element_is_public-_ownedComment.0",
                      "body": "An importedElement has either public visibility or no visibility at all."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-imported_element_is_public"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ElementImport-imported_element_is_public-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "importedElement.visibility <> null implies importedElement.visibility = VisibilityKind::public"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ElementImport-visibility_public_or_private",
                    "name": "visibility_public_or_private"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ElementImport"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-visibility_public_or_private-_ownedComment.0",
                      "body": "The visibility of an ElementImport is either public or private."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-visibility_public_or_private"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ElementImport-visibility_public_or_private-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "visibility = VisibilityKind::public or visibility = VisibilityKind::private"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ElementImport-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ElementImport-alias",
                    "name": "alias"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-alias-_ownedComment.0",
                      "body": "Specifies the name that should be added to the importing Namespace in lieu of the name of the imported PackagableElement. The alias must not clash with any other member in the importing Namespace. By default, no alias is used."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-alias"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ElementImport-alias-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ElementImport-importedElement",
                    "name": "importedElement",
                    "type": "PackageableElement",
                    "association": "A_importedElement_import"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-importedElement-_ownedComment.0",
                      "body": "Specifies the PackageableElement whose name is to be added to a Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-importedElement"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ElementImport-importingNamespace",
                    "name": "importingNamespace",
                    "type": "Namespace",
                    "association": "A_elementImport_importingNamespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-importingNamespace-_ownedComment.0",
                      "body": "Specifies the Namespace that imports a PackageableElement from another Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-importingNamespace"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ElementImport-visibility",
                    "name": "visibility",
                    "type": "VisibilityKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ElementImport-visibility-_ownedComment.0",
                      "body": "Specifies the visibility of the imported PackageableElement within the importingNamespace, i.e., whether the  importedElement will in turn be visible to other Namespaces. If the ElementImport is public, the importedElement will be visible outside the importingNamespace while, if the ElementImport is private, it will not."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ElementImport-visibility"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "ElementImport-visibility-_defaultValue",
                      "type": "VisibilityKind",
                      "instance": "VisibilityKind-public"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ElementImport-getName",
                  "name": "getName",
                  "isQuery": true,
                  "bodyCondition": "ElementImport-getName-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ElementImport-getName-_ownedComment.0",
                    "body": "The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ElementImport-getName"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ElementImport-getName-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ElementImport-getName"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ElementImport-getName-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if alias->notEmpty() then\n  alias\nelse\n  importedElement.name\nendif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ElementImport-getName-result",
                    "name": "result",
                    "direction": "return"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "MultiplicityElement",
                "name": "MultiplicityElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MultiplicityElement-_ownedComment.0",
                  "body": "A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A MultiplicityElement embeds this information to specify the allowable cardinalities for an instantiation of the Element."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MultiplicityElement"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-upper_ge_lower",
                    "name": "upper_ge_lower"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upper_ge_lower-_ownedComment.0",
                      "body": "The upper bound must be greater than or equal to the lower bound."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upper_ge_lower"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-upper_ge_lower-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "upperBound() >= lowerBound()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-lower_ge_0",
                    "name": "lower_ge_0"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lower_ge_0-_ownedComment.0",
                      "body": "The lower bound must be a non-negative integer literal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lower_ge_0"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-lower_ge_0-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "lowerBound() >= 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-value_specification_no_side_effects",
                    "name": "value_specification_no_side_effects"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-value_specification_no_side_effects-_ownedComment.0",
                      "body": "If a non-literal ValueSpecification is used for lowerValue or upperValue, then evaluating that specification must not have side effects."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-value_specification_no_side_effects"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-value_specification_no_side_effects-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-value_specification_constant",
                    "name": "value_specification_constant"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-value_specification_constant-_ownedComment.0",
                      "body": "If a non-literal ValueSpecification is used for lowerValue or upperValue, then that specification must be a constant expression."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-value_specification_constant"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-value_specification_constant-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-lower_is_integer",
                    "name": "lower_is_integer"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lower_is_integer-_ownedComment.0",
                      "body": "If it is not empty, then lowerValue must have an Integer value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lower_is_integer"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-lower_is_integer-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "lowerValue <> null implies lowerValue.integerValue() <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "MultiplicityElement-upper_is_unlimitedNatural",
                    "name": "upper_is_unlimitedNatural"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upper_is_unlimitedNatural-_ownedComment.0",
                      "body": "If it is not empty, then upperValue must have an UnlimitedNatural value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upper_is_unlimitedNatural"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "MultiplicityElement-upper_is_unlimitedNatural-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "upperValue <> null implies upperValue.unlimitedValue() <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "MultiplicityElement-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-isOrdered",
                    "name": "isOrdered"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-isOrdered-_ownedComment.0",
                      "body": "For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this MultiplicityElement are sequentially ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-isOrdered"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "MultiplicityElement-isOrdered-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-isUnique",
                    "name": "isUnique"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-isUnique-_ownedComment.0",
                      "body": "For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this MultiplicityElement are unique."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-isUnique"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "MultiplicityElement-isUnique-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-lower",
                    "name": "lower",
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lower-_ownedComment.0",
                      "body": "The lower bound of the multiplicity interval."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lower"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-lowerValue",
                    "name": "lowerValue",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_lowerValue_owningLower"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lowerValue-_ownedComment.0",
                      "body": "The specification of the lower bound for this multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lowerValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "MultiplicityElement-lowerValue-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-upper",
                    "name": "upper",
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upper-_ownedComment.0",
                      "body": "The upper bound of the multiplicity interval."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upper"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "MultiplicityElement-upperValue",
                    "name": "upperValue",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_upperValue_owningUpper"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upperValue-_ownedComment.0",
                      "body": "The specification of the upper bound for this multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upperValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "MultiplicityElement-upperValue-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-compatibleWith",
                    "name": "compatibleWith",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-compatibleWith-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-compatibleWith-_ownedComment.0",
                      "body": "The operation compatibleWith takes another multiplicity as input. It returns true if the other multiplicity is wider than, or the same as, self."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-compatibleWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-compatibleWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-compatibleWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-compatibleWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((other.lowerBound() <= self.lowerBound()) and ((other.upperBound() = *) or (self.upperBound() <= other.upperBound())))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-compatibleWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-compatibleWith-other",
                        "name": "other",
                        "type": "MultiplicityElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-includesMultiplicity",
                    "name": "includesMultiplicity",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-includesMultiplicity-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement-includesMultiplicity-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-includesMultiplicity-_ownedComment.0",
                      "body": "The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-includesMultiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MultiplicityElement-includesMultiplicity-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-includesMultiplicity"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MultiplicityElement-includesMultiplicity-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "self.upperBound()->notEmpty() and self.lowerBound()->notEmpty() and M.upperBound()->notEmpty() and M.lowerBound()->notEmpty()"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MultiplicityElement-includesMultiplicity-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-includesMultiplicity"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MultiplicityElement-includesMultiplicity-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = ((self.lowerBound() <= M.lowerBound()) and (self.upperBound() >= M.upperBound()))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-includesMultiplicity-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-includesMultiplicity-M",
                        "name": "M",
                        "type": "MultiplicityElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-is",
                    "name": "is",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-is-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-is-_ownedComment.0",
                      "body": "The operation is determines if the upper and lower bound of the ranges are the ones given."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-is"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-is-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-is"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-is-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (lowerbound = self.lowerBound() and upperbound = self.upperBound())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-is-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-is-lowerbound",
                        "name": "lowerbound"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "MultiplicityElement-is-upperbound",
                        "name": "upperbound"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-isMultivalued",
                    "name": "isMultivalued",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-isMultivalued-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "MultiplicityElement-isMultivalued-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-isMultivalued-_ownedComment.0",
                      "body": "The query isMultivalued() checks whether this multiplicity has an upper bound greater than one."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-isMultivalued"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MultiplicityElement-isMultivalued-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-isMultivalued"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MultiplicityElement-isMultivalued-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "upperBound()->notEmpty()"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "MultiplicityElement-isMultivalued-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-isMultivalued"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "MultiplicityElement-isMultivalued-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (upperBound() > 1)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MultiplicityElement-isMultivalued-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-lower.1",
                    "name": "lower",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-lower.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lower.1-_ownedComment.0",
                      "body": "The derived lower attribute must equal the lowerBound."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lower.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-lower.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-lower.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-lower"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-lower.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (lowerBound())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MultiplicityElement-lower.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "MultiplicityElement-lower.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-lowerBound",
                    "name": "lowerBound",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-lowerBound-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-lowerBound-_ownedComment.0",
                      "body": "The query lowerBound() returns the lower bound of the multiplicity as an integer, which is the integerValue of lowerValue, if this is given, and 1 otherwise."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lowerBound"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-lowerBound-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-lowerBound"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-lowerBound-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if (lowerValue=null or lowerValue.integerValue()=null) then 1 else lowerValue.integerValue() endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MultiplicityElement-lowerBound-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-upper.1",
                    "name": "upper",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-upper.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upper.1-_ownedComment.0",
                      "body": "The derived upper attribute must equal the upperBound."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upper.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-upper.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-upper.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "MultiplicityElement-upper"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-upper.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (upperBound())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MultiplicityElement-upper.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                      },
                      "_parent": "_"
                    },
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "MultiplicityElement-upper.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "MultiplicityElement-upperBound",
                    "name": "upperBound",
                    "isQuery": true,
                    "bodyCondition": "MultiplicityElement-upperBound-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "MultiplicityElement-upperBound-_ownedComment.0",
                      "body": "The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural, which is the unlimitedNaturalValue of upperValue, if given, and 1, otherwise."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upperBound"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "MultiplicityElement-upperBound-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "MultiplicityElement-upperBound"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "MultiplicityElement-upperBound-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if (upperValue=null or upperValue.unlimitedValue()=null) then 1 else upperValue.unlimitedValue() endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "MultiplicityElement-upperBound-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "NamedElement",
                "name": "NamedElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "NamedElement-_ownedComment.0",
                  "body": "A NamedElement is an Element in a model that may have a name. The name may be given directly and/or via the use of a StringExpression."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "NamedElement"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "NamedElement-visibility_needs_ownership",
                    "name": "visibility_needs_ownership"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "NamedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-visibility_needs_ownership-_ownedComment.0",
                      "body": "If a NamedElement is owned by something other than a Namespace, it does not have a visibility. One that is not owned by anything (and hence must be a Package, as this is the only kind of NamedElement that overrides mustBeOwned()) may have a visibility."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-visibility_needs_ownership"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "NamedElement-visibility_needs_ownership-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(namespace = null and owner <> null) implies visibility = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "NamedElement-has_qualified_name",
                    "name": "has_qualified_name"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "NamedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-has_qualified_name-_ownedComment.0",
                      "body": "When there is a name, and all of the containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-has_qualified_name"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "NamedElement-has_qualified_name-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(name <> null and allNamespaces()->select(ns | ns.name = null)->isEmpty()) implies\n  qualifiedName = allNamespaces()->iterate( ns : Namespace; agg: String = name | ns.name.concat(self.separator()).concat(agg))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "NamedElement-has_no_qualified_name",
                    "name": "has_no_qualified_name"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "NamedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-has_no_qualified_name-_ownedComment.0",
                      "body": "If there is no name, or one of the containing Namespaces has no name, there is no qualifiedName."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-has_no_qualified_name"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "NamedElement-has_no_qualified_name-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "name=null or allNamespaces()->select( ns | ns.name=null )->notEmpty() implies qualifiedName = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "NamedElement-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-clientDependency",
                    "name": "clientDependency",
                    "isDerived": true,
                    "type": "Dependency",
                    "association": "A_clientDependency_client"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_source_directedRelationship-directedRelationship"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-clientDependency-_ownedComment.0",
                      "body": "Indicates the Dependencies that reference this NamedElement as a client."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-clientDependency"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-clientDependency-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "NamedElement-clientDependency-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-name",
                    "name": "name"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-name-_ownedComment.0",
                      "body": "The name of the NamedElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-name"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-name-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-nameExpression",
                    "name": "nameExpression",
                    "aggregation": "composite",
                    "type": "StringExpression",
                    "association": "A_nameExpression_namedElement"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-nameExpression-_ownedComment.0",
                      "body": "The StringExpression used to define the name of this NamedElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-nameExpression"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-nameExpression-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-namespace",
                    "name": "namespace",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Namespace",
                    "association": "A_ownedMember_namespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_member_memberNamespace-memberNamespace"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-namespace-_ownedComment.0",
                      "body": "Specifies the Namespace that owns the NamedElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-namespace-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-qualifiedName",
                    "name": "qualifiedName",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-qualifiedName-_ownedComment.0",
                      "body": "A name that allows the NamedElement to be identified within a hierarchy of nested Namespaces. It is constructed from the names of the containing Namespaces starting at the root of the hierarchy and ending with the name of the NamedElement itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-qualifiedName"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-qualifiedName-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "NamedElement-visibility",
                    "name": "visibility",
                    "type": "VisibilityKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-visibility-_ownedComment.0",
                      "body": "Determines whether and how the NamedElement is visible outside its owning Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-visibility"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "NamedElement-visibility-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-allNamespaces",
                    "name": "allNamespaces",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-allNamespaces-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-allNamespaces-_ownedComment.0",
                      "body": "The query allNamespaces() gives the sequence of Namespaces in which the NamedElement is nested, working outwards."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-allNamespaces"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-allNamespaces-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-allNamespaces"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-allNamespaces-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if owner.oclIsKindOf(TemplateParameter) and\n  owner.oclAsType(TemplateParameter).signature.template.oclIsKindOf(Namespace) then\n    let enclosingNamespace : Namespace =\n      owner.oclAsType(TemplateParameter).signature.template.oclAsType(Namespace) in\n        enclosingNamespace.allNamespaces()->prepend(enclosingNamespace)\nelse\n  if namespace->isEmpty()\n    then OrderedSet{}\n  else\n    namespace.allNamespaces()->prepend(namespace)\n  endif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "NamedElement-allNamespaces-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Namespace"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "NamedElement-allNamespaces-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "NamedElement-allNamespaces-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-allOwningPackages",
                    "name": "allOwningPackages",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-allOwningPackages-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-allOwningPackages-_ownedComment.0",
                      "body": "The query allOwningPackages() returns the set of all the enclosing Namespaces of this NamedElement, working outwards, that are Packages, up to but not including the first such Namespace that is not a Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-allOwningPackages"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-allOwningPackages-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-allOwningPackages"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-allOwningPackages-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if namespace.oclIsKindOf(Package)\nthen\n  let owningPackage : Package = namespace.oclAsType(Package) in\n    owningPackage->union(owningPackage.allOwningPackages())\nelse\n  null\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "NamedElement-allOwningPackages-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Package"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "NamedElement-allOwningPackages-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "NamedElement-allOwningPackages-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-isDistinguishableFrom",
                    "name": "isDistinguishableFrom",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-isDistinguishableFrom-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-isDistinguishableFrom-_ownedComment.0",
                      "body": "The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have types neither of which is a kind of the other or (b) they have different names."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-isDistinguishableFrom-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-isDistinguishableFrom-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((self.oclIsKindOf(n.oclType()) or n.oclIsKindOf(self.oclType())) implies\n    ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->isEmpty()\n)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "NamedElement-isDistinguishableFrom-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "NamedElement-isDistinguishableFrom-n",
                        "name": "n",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "NamedElement-isDistinguishableFrom-ns",
                        "name": "ns",
                        "type": "Namespace"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-qualifiedName.1",
                    "name": "qualifiedName",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-qualifiedName.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-qualifiedName.1-_ownedComment.0",
                      "body": "When a NamedElement has a name, and all of its containing Namespaces have a name, the qualifiedName is constructed from the name of the NamedElement and the names of the containing Namespaces."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-qualifiedName.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-qualifiedName.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "NamedElement-qualifiedName.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "NamedElement-qualifiedName"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-qualifiedName.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if self.name <> null and self.allNamespaces()->select( ns | ns.name=null )->isEmpty()\nthen \n    self.allNamespaces()->iterate( ns : Namespace; agg: String = self.name | ns.name.concat(self.separator()).concat(agg))\nelse\n   null\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "NamedElement-qualifiedName.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-separator",
                    "name": "separator",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-separator-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "NamedElement-separator-_ownedComment.0",
                      "body": "The query separator() gives the string that is used to separate names when constructing a qualifiedName."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-separator"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-separator-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "NamedElement-separator"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-separator-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ('::')"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "NamedElement-separator-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "NamedElement-clientDependency.1",
                    "name": "clientDependency",
                    "isQuery": true,
                    "bodyCondition": "NamedElement-clientDependency.1-spec"
                  },
                  "_parent": "_",
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "NamedElement-clientDependency.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "NamedElement-clientDependency.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "NamedElement-clientDependency"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "NamedElement-clientDependency.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (Dependency.allInstances()->select(d | d.client->includes(self)))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "NamedElement-clientDependency.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Dependency"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "NamedElement-clientDependency.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "NamedElement-clientDependency.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Namespace",
                "name": "Namespace",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Namespace-_ownedComment.0",
                  "body": "A Namespace is an Element in a model that owns and/or imports a set of NamedElements that can be identified by name."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Namespace"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Namespace-members_distinguishable",
                    "name": "members_distinguishable"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-members_distinguishable-_ownedComment.0",
                      "body": "All the members of a Namespace are distinguishable within it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-members_distinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Namespace-members_distinguishable-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "membersAreDistinguishable()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Namespace-cannot_import_self",
                    "name": "cannot_import_self"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-cannot_import_self-_ownedComment.0",
                      "body": "A Namespace cannot have a PackageImport to itself."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-cannot_import_self"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Namespace-cannot_import_self-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "packageImport.importedPackage.oclAsType(Namespace)->excludes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Namespace-cannot_import_ownedMembers",
                    "name": "cannot_import_ownedMembers"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Namespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-cannot_import_ownedMembers-_ownedComment.0",
                      "body": "A Namespace cannot have an ElementImport to one of its ownedMembers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-cannot_import_ownedMembers"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Namespace-cannot_import_ownedMembers-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "elementImport.importedElement.oclAsType(Element)->excludesAll(ownedMember)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Namespace-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-elementImport",
                    "name": "elementImport",
                    "aggregation": "composite",
                    "type": "ElementImport",
                    "association": "A_elementImport_importingNamespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-elementImport-_ownedComment.0",
                      "body": "References the ElementImports owned by the Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-elementImport"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-elementImport-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-elementImport-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-importedMember",
                    "name": "importedMember",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "PackageableElement",
                    "association": "A_importedMember_namespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-member"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-importedMember-_ownedComment.0",
                      "body": "References the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-importedMember"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-importedMember-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-importedMember-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-member",
                    "name": "member",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "NamedElement",
                    "association": "A_member_memberNamespace"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-member-_ownedComment.0",
                      "body": "A collection of NamedElements identifiable within the Namespace, either by being owned or by being introduced by importing or inheritance."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-member"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-member-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-member-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-ownedMember",
                    "name": "ownedMember",
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "NamedElement",
                    "association": "A_ownedMember_namespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Namespace-member"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-ownedMember-_ownedComment.0",
                      "body": "A collection of NamedElements owned by the Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedMember"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-ownedMember-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-ownedMember-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-ownedRule",
                    "name": "ownedRule",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_ownedRule_context"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-ownedRule-_ownedComment.0",
                      "body": "Specifies a set of Constraints owned by this Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-ownedRule"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-ownedRule-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-ownedRule-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Namespace-packageImport",
                    "name": "packageImport",
                    "aggregation": "composite",
                    "type": "PackageImport",
                    "association": "A_packageImport_importingNamespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-packageImport-_ownedComment.0",
                      "body": "References the PackageImports owned by the Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-packageImport"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Namespace-packageImport-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Namespace-packageImport-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Namespace-excludeCollisions",
                    "name": "excludeCollisions",
                    "isQuery": true,
                    "bodyCondition": "Namespace-excludeCollisions-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-excludeCollisions-_ownedComment.0",
                      "body": "The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-excludeCollisions"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Namespace-excludeCollisions-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-excludeCollisions"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Namespace-excludeCollisions-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (imps->reject(imp1  | imps->exists(imp2 | not imp1.isDistinguishableFrom(imp2, self))))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-excludeCollisions-result",
                        "name": "result",
                        "direction": "return",
                        "type": "PackageableElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Namespace-excludeCollisions-result-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Namespace-excludeCollisions-result-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-excludeCollisions-imps",
                        "name": "imps",
                        "type": "PackageableElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Namespace-excludeCollisions-imps-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Namespace-excludeCollisions-imps-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Namespace-getNamesOfMember",
                    "name": "getNamesOfMember",
                    "isQuery": true,
                    "bodyCondition": "Namespace-getNamesOfMember-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-getNamesOfMember-_ownedComment.0",
                      "body": "The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace, taking importing into account. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-getNamesOfMember"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Namespace-getNamesOfMember-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-getNamesOfMember"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Namespace-getNamesOfMember-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if self.ownedMember ->includes(element)\nthen Set{element.name}\nelse let elementImports : Set(ElementImport) = self.elementImport->select(ei | ei.importedElement = element) in\n  if elementImports->notEmpty()\n  then\n     elementImports->collect(el | el.getName())->asSet()\n  else \n     self.packageImport->select(pi | pi.importedPackage.visibleMembers().oclAsType(NamedElement)->includes(element))-> collect(pi | pi.importedPackage.getNamesOfMember(element))->asSet()\n  endif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-getNamesOfMember-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                        },
                        "_parent": "_"
                      },
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Namespace-getNamesOfMember-result-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Namespace-getNamesOfMember-result-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-getNamesOfMember-element",
                        "name": "element",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Namespace-importMembers",
                    "name": "importMembers",
                    "isQuery": true,
                    "bodyCondition": "Namespace-importMembers-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-importMembers-_ownedComment.0",
                      "body": "The query importMembers() defines which of a set of PackageableElements are actually imported into the Namespace. This excludes hidden ones, i.e., those which have names that conflict with names of ownedMembers, and it also excludes PackageableElements that would have the indistinguishable names when imported."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-importMembers"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Namespace-importMembers-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-importMembers"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Namespace-importMembers-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.excludeCollisions(imps)->select(imp | self.ownedMember->forAll(mem | imp.isDistinguishableFrom(mem, self))))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-importMembers-result",
                        "name": "result",
                        "direction": "return",
                        "type": "PackageableElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Namespace-importMembers-result-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Namespace-importMembers-result-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Namespace-importMembers-imps",
                        "name": "imps",
                        "type": "PackageableElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Namespace-importMembers-imps-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Namespace-importMembers-imps-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Namespace-importedMember.1",
                    "name": "importedMember",
                    "isQuery": true,
                    "bodyCondition": "Namespace-importedMember.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-importedMember.1-_ownedComment.0",
                      "body": "The importedMember property is derived as the PackageableElements that are members of this Namespace as a result of either PackageImports or ElementImports."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-importedMember.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Namespace-importedMember.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Namespace-importedMember.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Namespace-importedMember"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Namespace-importedMember.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.importMembers(elementImport.importedElement->asSet()->union(packageImport.importedPackage->collect(p | p.visibleMembers()))->asSet()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Namespace-importedMember.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "PackageableElement"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Namespace-importedMember.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Namespace-importedMember.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Namespace-membersAreDistinguishable",
                    "name": "membersAreDistinguishable",
                    "isQuery": true,
                    "bodyCondition": "Namespace-membersAreDistinguishable-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Namespace-membersAreDistinguishable-_ownedComment.0",
                      "body": "The Boolean query membersAreDistinguishable() determines whether all of the Namespace's members are distinguishable within it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-membersAreDistinguishable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Namespace-membersAreDistinguishable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Namespace-membersAreDistinguishable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Namespace-membersAreDistinguishable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (member->forAll( memb |\n   member->excluding(memb)->forAll(other |\n       memb.isDistinguishableFrom(other, self))))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Namespace-membersAreDistinguishable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "PackageableElement",
                "name": "PackageableElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PackageableElement-_ownedComment.0",
                  "body": "A PackageableElement is a NamedElement that may be owned directly by a Package. A PackageableElement is also able to serve as the parameteredElement of a TemplateParameter."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PackageableElement"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "PackageableElement-namespace_needs_visibility",
                  "name": "namespace_needs_visibility"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "PackageableElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "PackageableElement-namespace_needs_visibility-_ownedComment.0",
                    "body": "A PackageableElement owned by a Namespace must have a visibility."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "PackageableElement-namespace_needs_visibility"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "PackageableElement-namespace_needs_visibility-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "visibility = null implies namespace = null"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "PackageableElement-_generalization.0",
                    "general": "ParameterableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "PackageableElement-_generalization.1",
                    "general": "NamedElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "PackageableElement-visibility",
                  "name": "visibility",
                  "type": "VisibilityKind"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-visibility"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "PackageableElement-visibility-_ownedComment.0",
                    "body": "A PackageableElement must have a visibility specified if it is owned by a Namespace. The default visibility is public."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "PackageableElement-visibility"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "PackageableElement-visibility-_lowerValue"
                  },
                  "_parent": "_"
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:InstanceValue",
                    "xmi:id": "PackageableElement-visibility-_defaultValue",
                    "type": "VisibilityKind",
                    "instance": "VisibilityKind-public"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "PackageImport",
                "name": "PackageImport"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "PackageImport-_ownedComment.0",
                  "body": "A PackageImport is a Relationship that imports all the non-private members of a Package into the Namespace owning the PackageImport, so that those Elements may be referred to by their unqualified names in the importingNamespace."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "PackageImport"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "PackageImport-public_or_private",
                  "name": "public_or_private"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "PackageImport"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "PackageImport-public_or_private-_ownedComment.0",
                    "body": "The visibility of a PackageImport is either public or private."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "PackageImport-public_or_private"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "PackageImport-public_or_private-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "visibility = VisibilityKind::public or visibility = VisibilityKind::private"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "PackageImport-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "PackageImport-importedPackage",
                    "name": "importedPackage",
                    "type": "Package",
                    "association": "A_importedPackage_packageImport"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PackageImport-importedPackage-_ownedComment.0",
                      "body": "Specifies the Package whose members are imported into a Namespace."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PackageImport-importedPackage"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "PackageImport-importingNamespace",
                    "name": "importingNamespace",
                    "type": "Namespace",
                    "association": "A_packageImport_importingNamespace"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PackageImport-importingNamespace-_ownedComment.0",
                      "body": "Specifies the Namespace that imports the members from a Package."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PackageImport-importingNamespace"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "PackageImport-visibility",
                    "name": "visibility",
                    "type": "VisibilityKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "PackageImport-visibility-_ownedComment.0",
                      "body": "Specifies the visibility of the imported PackageableElements within the importingNamespace, i.e., whether imported Elements will in turn be visible to other Namespaces. If the PackageImport is public, the imported Elements will be visible outside the importingNamespace, while, if the PackageImport is private, they will not."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "PackageImport-visibility"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "PackageImport-visibility-_defaultValue",
                      "type": "VisibilityKind",
                      "instance": "VisibilityKind-public"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ParameterableElement",
                "name": "ParameterableElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ParameterableElement-_ownedComment.0",
                  "body": "A ParameterableElement is an Element that can be exposed as a formal TemplateParameter for a template, or specified as an actual parameter in a binding of a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ParameterableElement"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ParameterableElement-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ParameterableElement-owningTemplateParameter",
                    "name": "owningTemplateParameter",
                    "type": "TemplateParameter",
                    "association": "A_ownedParameteredElement_owningTemplateParameter"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-templateParameter"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterableElement-owningTemplateParameter-_ownedComment.0",
                      "body": "The formal TemplateParameter that owns this ParameterableElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-owningTemplateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ParameterableElement-owningTemplateParameter-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ParameterableElement-templateParameter",
                    "name": "templateParameter",
                    "type": "TemplateParameter",
                    "association": "A_parameteredElement_templateParameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterableElement-templateParameter-_ownedComment.0",
                      "body": "The TemplateParameter that exposes this ParameterableElement as a formal parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-templateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ParameterableElement-templateParameter-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ParameterableElement-isCompatibleWith",
                    "name": "isCompatibleWith",
                    "isQuery": true,
                    "bodyCondition": "ParameterableElement-isCompatibleWith-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterableElement-isCompatibleWith-_ownedComment.0",
                      "body": "The query isCompatibleWith() determines if this ParameterableElement is compatible with the specified ParameterableElement. By default, this ParameterableElement is compatible with another ParameterableElement p if the kind of this ParameterableElement is the same as or a subtype of the kind of p. Subclasses of ParameterableElement should override this operation to specify different compatibility constraints."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-isCompatibleWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ParameterableElement-isCompatibleWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-isCompatibleWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ParameterableElement-isCompatibleWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oclIsKindOf(p.oclType()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ParameterableElement-isCompatibleWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "ParameterableElement-isCompatibleWith-p",
                        "name": "p",
                        "type": "ParameterableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "ParameterableElement-isTemplateParameter",
                    "name": "isTemplateParameter",
                    "isQuery": true,
                    "bodyCondition": "ParameterableElement-isTemplateParameter-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterableElement-isTemplateParameter-_ownedComment.0",
                      "body": "The query isTemplateParameter() determines if this ParameterableElement is exposed as a formal TemplateParameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-isTemplateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "ParameterableElement-isTemplateParameter-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterableElement-isTemplateParameter"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "ParameterableElement-isTemplateParameter-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (templateParameter->notEmpty())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "ParameterableElement-isTemplateParameter-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Realization",
                "name": "Realization"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Realization-_ownedComment.0",
                  "body": "Realization is a specialized Abstraction relationship between two sets of model Elements, one representing a specification (the supplier) and the other represents an implementation of the latter (the client). Realization can be used to model stepwise refinement, optimizations, transformations, templates, model synthesis, framework composition, etc."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Realization"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Realization-_generalization.0",
                  "general": "Abstraction"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Relationship",
                "name": "Relationship",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Relationship-_ownedComment.0",
                  "body": "Relationship is an abstract concept that specifies some kind of relationship between Elements."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Relationship"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Relationship-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Relationship-relatedElement",
                  "name": "relatedElement",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Element",
                  "association": "A_relatedElement_relationship"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Relationship-relatedElement-_ownedComment.0",
                    "body": "Specifies the elements related by the Relationship."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Relationship-relatedElement"
                    },
                    "_parent": "_"
                  }
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "Relationship-relatedElement-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TemplateableElement",
                "name": "TemplateableElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TemplateableElement-_ownedComment.0",
                  "body": "A TemplateableElement is an Element that can optionally be defined as a template and bound to other templates."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateableElement"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TemplateableElement-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateableElement-ownedTemplateSignature",
                    "name": "ownedTemplateSignature",
                    "aggregation": "composite",
                    "type": "TemplateSignature",
                    "association": "A_ownedTemplateSignature_template"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateableElement-ownedTemplateSignature-_ownedComment.0",
                      "body": "The optional TemplateSignature specifying the formal TemplateParameters for this TemplateableElement. If a TemplateableElement has a TemplateSignature, then it is a template."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-ownedTemplateSignature"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateableElement-ownedTemplateSignature-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateableElement-templateBinding",
                    "name": "templateBinding",
                    "aggregation": "composite",
                    "type": "TemplateBinding",
                    "association": "A_templateBinding_boundElement"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateableElement-templateBinding-_ownedComment.0",
                      "body": "The optional TemplateBindings from this TemplateableElement to one or more templates."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-templateBinding"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateableElement-templateBinding-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "TemplateableElement-templateBinding-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "TemplateableElement-isTemplate",
                    "name": "isTemplate",
                    "isQuery": true,
                    "bodyCondition": "TemplateableElement-isTemplate-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateableElement-isTemplate-_ownedComment.0",
                      "body": "The query isTemplate() returns whether this TemplateableElement is actually a template."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-isTemplate"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "TemplateableElement-isTemplate-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-isTemplate"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "TemplateableElement-isTemplate-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedTemplateSignature <> null)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "TemplateableElement-isTemplate-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "TemplateableElement-parameterableElements",
                    "name": "parameterableElements",
                    "isQuery": true,
                    "bodyCondition": "TemplateableElement-parameterableElements-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateableElement-parameterableElements-_ownedComment.0",
                      "body": "The query parameterableElements() returns the set of ParameterableElements that may be used as the parameteredElements for a TemplateParameter of this TemplateableElement. By default, this set includes all the ownedElements. Subclasses may override this operation if they choose to restrict the set of ParameterableElements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-parameterableElements"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "TemplateableElement-parameterableElements-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateableElement-parameterableElements"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "TemplateableElement-parameterableElements-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.allOwnedElements()->select(oclIsKindOf(ParameterableElement)).oclAsType(ParameterableElement)->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "TemplateableElement-parameterableElements-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ParameterableElement"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "TemplateableElement-parameterableElements-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "TemplateableElement-parameterableElements-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TemplateBinding",
                "name": "TemplateBinding"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TemplateBinding-_ownedComment.0",
                  "body": "A TemplateBinding is a DirectedRelationship between a TemplateableElement and a template. A TemplateBinding specifies the TemplateParameterSubstitutions of actual parameters for the formal parameters of the template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateBinding"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TemplateBinding-parameter_substitution_formal",
                    "name": "parameter_substitution_formal"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateBinding"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateBinding-parameter_substitution_formal-_ownedComment.0",
                      "body": "Each parameterSubstitution must refer to a formal TemplateParameter of the target TemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateBinding-parameter_substitution_formal"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TemplateBinding-parameter_substitution_formal-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parameterSubstitution->forAll(b | signature.parameter->includes(b.formal))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TemplateBinding-one_parameter_substitution",
                    "name": "one_parameter_substitution"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateBinding"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateBinding-one_parameter_substitution-_ownedComment.0",
                      "body": "A TemplateBiinding contains at most one TemplateParameterSubstitution for each formal TemplateParameter of the target TemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateBinding-one_parameter_substitution"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TemplateBinding-one_parameter_substitution-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "signature.parameter->forAll(p | parameterSubstitution->select(b | b.formal = p)->size() <= 1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TemplateBinding-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateBinding-boundElement",
                    "name": "boundElement",
                    "type": "TemplateableElement",
                    "association": "A_templateBinding_boundElement"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateBinding-boundElement-_ownedComment.0",
                      "body": "The TemplateableElement that is bound by this TemplateBinding."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateBinding-boundElement"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateBinding-parameterSubstitution",
                    "name": "parameterSubstitution",
                    "aggregation": "composite",
                    "type": "TemplateParameterSubstitution",
                    "association": "A_parameterSubstitution_templateBinding"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateBinding-parameterSubstitution-_ownedComment.0",
                      "body": "The TemplateParameterSubstitutions owned by this TemplateBinding."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateBinding-parameterSubstitution"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateBinding-parameterSubstitution-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "TemplateBinding-parameterSubstitution-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateBinding-signature",
                    "name": "signature",
                    "type": "TemplateSignature",
                    "association": "A_signature_templateBinding"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateBinding-signature-_ownedComment.0",
                      "body": "The TemplateSignature for the template that is the target of this TemplateBinding."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateBinding-signature"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TemplateParameter",
                "name": "TemplateParameter"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TemplateParameter-_ownedComment.0",
                  "body": "A TemplateParameter exposes a ParameterableElement as a formal parameter of a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "TemplateParameter-must_be_compatible",
                  "name": "must_be_compatible"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TemplateParameter-must_be_compatible-_ownedComment.0",
                    "body": "The default must be compatible with the formal TemplateParameter."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateParameter-must_be_compatible"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "TemplateParameter-must_be_compatible-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "default <> null implies default.isCompatibleWith(parameteredElement)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TemplateParameter-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameter-default",
                    "name": "default",
                    "type": "ParameterableElement",
                    "association": "A_default_templateParameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameter-default-_ownedComment.0",
                      "body": "The ParameterableElement that is the default for this formal TemplateParameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-default"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateParameter-default-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameter-ownedDefault",
                    "name": "ownedDefault",
                    "aggregation": "composite",
                    "type": "ParameterableElement",
                    "association": "A_ownedDefault_templateParameter"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-default"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameter-ownedDefault-_ownedComment.0",
                      "body": "The ParameterableElement that is owned by this TemplateParameter for the purpose of providing a default."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-ownedDefault"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateParameter-ownedDefault-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameter-ownedParameteredElement",
                    "name": "ownedParameteredElement",
                    "aggregation": "composite",
                    "type": "ParameterableElement",
                    "association": "A_ownedParameteredElement_owningTemplateParameter"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-parameteredElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameter-ownedParameteredElement-_ownedComment.0",
                      "body": "The ParameterableElement that is owned by this TemplateParameter for the purpose of exposing it as the parameteredElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-ownedParameteredElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateParameter-ownedParameteredElement-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameter-parameteredElement",
                    "name": "parameteredElement",
                    "type": "ParameterableElement",
                    "association": "A_parameteredElement_templateParameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameter-parameteredElement-_ownedComment.0",
                      "body": "The ParameterableElement exposed by this TemplateParameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-parameteredElement"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameter-signature",
                    "name": "signature",
                    "type": "TemplateSignature",
                    "association": "A_ownedParameter_signature"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_parameter_templateSignature-templateSignature"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameter-signature-_ownedComment.0",
                      "body": "The TemplateSignature that owns this TemplateParameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameter-signature"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TemplateParameterSubstitution",
                "name": "TemplateParameterSubstitution"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TemplateParameterSubstitution-_ownedComment.0",
                  "body": "A TemplateParameterSubstitution relates the actual parameter to a formal TemplateParameter as part of a template binding."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "TemplateParameterSubstitution-must_be_compatible",
                  "name": "must_be_compatible"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TemplateParameterSubstitution-must_be_compatible-_ownedComment.0",
                    "body": "The actual ParameterableElement must be compatible with the formal TemplateParameter, e.g., the actual ParameterableElement for a Class TemplateParameter must be a Class."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateParameterSubstitution-must_be_compatible"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "TemplateParameterSubstitution-must_be_compatible-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "actual->forAll(a | a.isCompatibleWith(formal.parameteredElement))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TemplateParameterSubstitution-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameterSubstitution-actual",
                    "name": "actual",
                    "type": "ParameterableElement",
                    "association": "A_actual_templateParameterSubstitution"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameterSubstitution-actual-_ownedComment.0",
                      "body": "The ParameterableElement that is the actual parameter for this TemplateParameterSubstitution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameterSubstitution-actual"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameterSubstitution-formal",
                    "name": "formal",
                    "type": "TemplateParameter",
                    "association": "A_formal_templateParameterSubstitution"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameterSubstitution-formal-_ownedComment.0",
                      "body": "The formal TemplateParameter that is associated with this TemplateParameterSubstitution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameterSubstitution-formal"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameterSubstitution-ownedActual",
                    "name": "ownedActual",
                    "aggregation": "composite",
                    "type": "ParameterableElement",
                    "association": "A_ownedActual_owningTemplateParameterSubstitution"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "TemplateParameterSubstitution-actual"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameterSubstitution-ownedActual-_ownedComment.0",
                      "body": "The ParameterableElement that is owned by this TemplateParameterSubstitution as its actual parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameterSubstitution-ownedActual"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateParameterSubstitution-ownedActual-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateParameterSubstitution-templateBinding",
                    "name": "templateBinding",
                    "type": "TemplateBinding",
                    "association": "A_parameterSubstitution_templateBinding"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateParameterSubstitution-templateBinding-_ownedComment.0",
                      "body": "The TemplateBinding that owns this TemplateParameterSubstitution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateParameterSubstitution-templateBinding"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TemplateSignature",
                "name": "TemplateSignature"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TemplateSignature-_ownedComment.0",
                  "body": "A Template Signature bundles the set of formal TemplateParameters for a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TemplateSignature"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TemplateSignature-own_elements",
                    "name": "own_elements"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateSignature"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateSignature-own_elements-_ownedComment.0",
                      "body": "Parameters must own the ParameterableElements they parameter or those ParameterableElements must be owned by the TemplateableElement being templated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-own_elements"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TemplateSignature-own_elements-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "template.ownedElement->includesAll(parameter.parameteredElement->asSet() - parameter.ownedParameteredElement->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TemplateSignature-unique_parameters",
                    "name": "unique_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TemplateSignature"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateSignature-unique_parameters-_ownedComment.0",
                      "body": "The names of the parameters of a TemplateSignature are unique."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-unique_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TemplateSignature-unique_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parameter->forAll( p1, p2 | (p1 <> p2 and p1.parameteredElement.oclIsKindOf(NamedElement) and p2.parameteredElement.oclIsKindOf(NamedElement) ) implies\n   p1.parameteredElement.oclAsType(NamedElement).name <> p2.parameteredElement.oclAsType(NamedElement).name)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TemplateSignature-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateSignature-ownedParameter",
                    "name": "ownedParameter",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "TemplateParameter",
                    "association": "A_ownedParameter_signature"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-parameter"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateSignature-ownedParameter-_ownedComment.0",
                      "body": "The formal parameters that are owned by this TemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-ownedParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "TemplateSignature-ownedParameter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "TemplateSignature-ownedParameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateSignature-parameter",
                    "name": "parameter",
                    "isOrdered": true,
                    "type": "TemplateParameter",
                    "association": "A_parameter_templateSignature"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateSignature-parameter-_ownedComment.0",
                      "body": "The ordered set of all formal TemplateParameters for this TemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "TemplateSignature-parameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TemplateSignature-template",
                    "name": "template",
                    "type": "TemplateableElement",
                    "association": "A_ownedTemplateSignature_template"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TemplateSignature-template-_ownedComment.0",
                      "body": "The TemplateableElement that owns this TemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TemplateSignature-template"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Type",
                "name": "Type",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Type-_ownedComment.0",
                  "body": "A Type constrains the values represented by a TypedElement."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Type"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Type-_generalization.0",
                  "general": "PackageableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Type-package",
                  "name": "package",
                  "type": "Package",
                  "association": "A_ownedType_package"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_packagedElement_owningPackage-owningPackage"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Type-package-_ownedComment.0",
                    "body": "Specifies the owning Package of this Type, if any."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Type-package"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "Type-package-_lowerValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Type-conformsTo",
                  "name": "conformsTo",
                  "isQuery": true,
                  "bodyCondition": "Type-conformsTo-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Type-conformsTo-_ownedComment.0",
                    "body": "The query conformsTo() gives true for a Type that conforms to another. By default, two Types do not conform to each other. This query is intended to be redefined for specific conformance situations."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Type-conformsTo"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Type-conformsTo-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Type-conformsTo"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Type-conformsTo-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (false)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Type-conformsTo-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Type-conformsTo-other",
                      "name": "other",
                      "type": "Type"
                    },
                    "_parent": "_"
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TypedElement",
                "name": "TypedElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TypedElement-_ownedComment.0",
                  "body": "A TypedElement is a NamedElement that may have a Type specified for it."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TypedElement"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TypedElement-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "TypedElement-type",
                  "name": "type",
                  "type": "Type",
                  "association": "A_type_typedElement"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TypedElement-type-_ownedComment.0",
                    "body": "The type of the TypedElement."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TypedElement-type"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "TypedElement-type-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Usage",
                "name": "Usage"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Usage-_ownedComment.0",
                  "body": "A Usage is a Dependency in which the client Element requires the supplier Element (or set of Elements) for its full implementation or operation."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Usage"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Usage-_generalization.0",
                  "general": "Dependency"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "VisibilityKind",
                "name": "VisibilityKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "VisibilityKind-_ownedComment.0",
                  "body": "VisibilityKind is an enumeration type that defines literals to determine the visibility of Elements in a model."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "VisibilityKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "VisibilityKind-public",
                    "name": "public"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "VisibilityKind-public-_ownedComment.0",
                      "body": "A Named Element with public visibility is visible to all elements that can access the contents of the Namespace that owns it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "VisibilityKind-public"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "VisibilityKind-private",
                    "name": "private"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "VisibilityKind-private-_ownedComment.0",
                      "body": "A NamedElement with private visibility is only visible inside the Namespace that owns it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "VisibilityKind-private"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "VisibilityKind-protected",
                    "name": "protected"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "VisibilityKind-protected-_ownedComment.0",
                      "body": "A NamedElement with protected visibility is visible to Elements that have a generalization relationship to the Namespace that owns it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "VisibilityKind-protected"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "VisibilityKind-package",
                    "name": "package"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "VisibilityKind-package-_ownedComment.0",
                      "body": "A NamedElement with package visibility is visible to all Elements within the nearest enclosing Package (given that other owning Elements have proper visibility). Outside the nearest enclosing Package, a NamedElement marked as having package visibility is not visible.  Only NamedElements that are not owned by Packages can be marked as having package visibility. "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "VisibilityKind-package"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_type_typedElement",
                "name": "A_type_typedElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TypedElement-type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_type_typedElement-typedElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_type_typedElement-typedElement",
                  "name": "typedElement",
                  "type": "TypedElement",
                  "association": "A_type_typedElement"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_type_typedElement-typedElement-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_type_typedElement-typedElement-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameter_signature",
                "name": "A_ownedParameter_signature"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateSignature-ownedParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-signature"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_parameter_templateSignature",
                "name": "A_parameter_templateSignature"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateSignature-parameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_parameter_templateSignature-templateSignature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_parameter_templateSignature-templateSignature",
                  "name": "templateSignature",
                  "type": "TemplateSignature",
                  "association": "A_parameter_templateSignature"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_parameter_templateSignature-templateSignature-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_parameter_templateSignature-templateSignature-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_actual_templateParameterSubstitution",
                "name": "A_actual_templateParameterSubstitution"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution-actual"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_actual_templateParameterSubstitution-templateParameterSubstitution"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_actual_templateParameterSubstitution-templateParameterSubstitution",
                  "name": "templateParameterSubstitution",
                  "type": "TemplateParameterSubstitution",
                  "association": "A_actual_templateParameterSubstitution"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_actual_templateParameterSubstitution-templateParameterSubstitution-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_actual_templateParameterSubstitution-templateParameterSubstitution-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedActual_owningTemplateParameterSubstitution",
                "name": "A_ownedActual_owningTemplateParameterSubstitution"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution-ownedActual"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedActual_owningTemplateParameterSubstitution-owningTemplateParameterSubstitution"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_ownedActual_owningTemplateParameterSubstitution-_generalization.0",
                  "general": "A_actual_templateParameterSubstitution"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedActual_owningTemplateParameterSubstitution-owningTemplateParameterSubstitution",
                  "name": "owningTemplateParameterSubstitution",
                  "type": "TemplateParameterSubstitution",
                  "association": "A_ownedActual_owningTemplateParameterSubstitution"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_actual_templateParameterSubstitution-templateParameterSubstitution"
                  },
                  "_parent": "_"
                },
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedActual_owningTemplateParameterSubstitution-owningTemplateParameterSubstitution-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_formal_templateParameterSubstitution",
                "name": "A_formal_templateParameterSubstitution"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution-formal"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_formal_templateParameterSubstitution-templateParameterSubstitution"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_formal_templateParameterSubstitution-templateParameterSubstitution",
                  "name": "templateParameterSubstitution",
                  "type": "TemplateParameterSubstitution",
                  "association": "A_formal_templateParameterSubstitution"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_formal_templateParameterSubstitution-templateParameterSubstitution-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_formal_templateParameterSubstitution-templateParameterSubstitution-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedDefault_templateParameter",
                "name": "A_ownedDefault_templateParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-ownedDefault"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedDefault_templateParameter-templateParameter"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_ownedDefault_templateParameter-_generalization.0",
                  "general": "A_default_templateParameter"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedDefault_templateParameter-templateParameter",
                  "name": "templateParameter",
                  "type": "TemplateParameter",
                  "association": "A_ownedDefault_templateParameter"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_default_templateParameter-templateParameter"
                  },
                  "_parent": "_"
                },
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedDefault_templateParameter-templateParameter-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameteredElement_owningTemplateParameter",
                "name": "A_ownedParameteredElement_owningTemplateParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-ownedParameteredElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ParameterableElement-owningTemplateParameter"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_default_templateParameter",
                "name": "A_default_templateParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-default"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_default_templateParameter-templateParameter"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_default_templateParameter-templateParameter",
                  "name": "templateParameter",
                  "type": "TemplateParameter",
                  "association": "A_default_templateParameter"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_default_templateParameter-templateParameter-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_default_templateParameter-templateParameter-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_parameteredElement_templateParameter",
                "name": "A_parameteredElement_templateParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ParameterableElement-templateParameter"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signature_templateBinding",
                "name": "A_signature_templateBinding"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateBinding-signature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signature_templateBinding-templateBinding"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signature_templateBinding-templateBinding",
                  "name": "templateBinding",
                  "type": "TemplateBinding",
                  "association": "A_signature_templateBinding"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signature_templateBinding-templateBinding-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signature_templateBinding-templateBinding-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_parameterSubstitution_templateBinding",
                "name": "A_parameterSubstitution_templateBinding"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateBinding-parameterSubstitution"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "TemplateParameterSubstitution-templateBinding"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_templateBinding_boundElement",
                "name": "A_templateBinding_boundElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateableElement-templateBinding"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "TemplateBinding-boundElement"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedTemplateSignature_template",
                "name": "A_ownedTemplateSignature_template"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TemplateableElement-ownedTemplateSignature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "TemplateSignature-template"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_relatedElement_relationship",
                "name": "A_relatedElement_relationship",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Relationship-relatedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_relatedElement_relationship-relationship"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_relatedElement_relationship-relationship",
                  "name": "relationship",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Relationship",
                  "association": "A_relatedElement_relationship"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_relatedElement_relationship-relationship-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_relatedElement_relationship-relationship-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_importedPackage_packageImport",
                "name": "A_importedPackage_packageImport"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "PackageImport-importedPackage"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_importedPackage_packageImport-packageImport"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_importedPackage_packageImport-packageImport",
                  "name": "packageImport",
                  "type": "PackageImport",
                  "association": "A_importedPackage_packageImport"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_importedPackage_packageImport-packageImport-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_importedPackage_packageImport-packageImport-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_elementImport_importingNamespace",
                "name": "A_elementImport_importingNamespace"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-elementImport"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ElementImport-importingNamespace"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedMember_namespace",
                "name": "A_ownedMember_namespace",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-ownedMember"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedRule_context",
                "name": "A_ownedRule_context"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-ownedRule"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_packageImport_importingNamespace",
                "name": "A_packageImport_importingNamespace"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-packageImport"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "PackageImport-importingNamespace"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_member_memberNamespace",
                "name": "A_member_memberNamespace",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-member"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_member_memberNamespace-memberNamespace"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_member_memberNamespace-memberNamespace",
                  "name": "memberNamespace",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Namespace",
                  "association": "A_member_memberNamespace"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_member_memberNamespace-memberNamespace-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_member_memberNamespace-memberNamespace-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_importedMember_namespace",
                "name": "A_importedMember_namespace",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Namespace-importedMember"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_importedMember_namespace-namespace"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_importedMember_namespace-namespace",
                  "name": "namespace",
                  "type": "Namespace",
                  "association": "A_importedMember_namespace"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_member_memberNamespace-memberNamespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_importedMember_namespace-namespace-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_importedMember_namespace-namespace-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_nameExpression_namedElement",
                "name": "A_nameExpression_namedElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "NamedElement-nameExpression"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_nameExpression_namedElement-namedElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_nameExpression_namedElement-namedElement",
                  "name": "namedElement",
                  "type": "NamedElement",
                  "association": "A_nameExpression_namedElement"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_nameExpression_namedElement-namedElement-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_clientDependency_client",
                "name": "A_clientDependency_client"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "NamedElement-clientDependency"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Dependency-client"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_lowerValue_owningLower",
                "name": "A_lowerValue_owningLower"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "MultiplicityElement-lowerValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_lowerValue_owningLower-owningLower"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_lowerValue_owningLower-owningLower",
                  "name": "owningLower",
                  "type": "MultiplicityElement",
                  "association": "A_lowerValue_owningLower"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_lowerValue_owningLower-owningLower-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_upperValue_owningUpper",
                "name": "A_upperValue_owningUpper"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "MultiplicityElement-upperValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_upperValue_owningUpper-owningUpper"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_upperValue_owningUpper-owningUpper",
                  "name": "owningUpper",
                  "type": "MultiplicityElement",
                  "association": "A_upperValue_owningUpper"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_upperValue_owningUpper-owningUpper-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_importedElement_import",
                "name": "A_importedElement_import"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ElementImport-importedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_importedElement_import-import"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_importedElement_import-import",
                  "name": "import",
                  "type": "ElementImport",
                  "association": "A_importedElement_import"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_importedElement_import-import-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_importedElement_import-import-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedElement_owner",
                "name": "A_ownedElement_owner",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedComment_owningElement",
                "name": "A_ownedComment_owningElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Element-ownedComment"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedComment_owningElement-owningElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedComment_owningElement-owningElement",
                  "name": "owningElement",
                  "type": "Element",
                  "association": "A_ownedComment_owningElement"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedComment_owningElement-owningElement-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_source_directedRelationship",
                "name": "A_source_directedRelationship",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DirectedRelationship-source"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_source_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_source_directedRelationship-directedRelationship",
                  "name": "directedRelationship",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "DirectedRelationship",
                  "association": "A_source_directedRelationship"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_relatedElement_relationship-relationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_source_directedRelationship-directedRelationship-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_source_directedRelationship-directedRelationship-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_target_directedRelationship",
                "name": "A_target_directedRelationship",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DirectedRelationship-target"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_target_directedRelationship-directedRelationship",
                  "name": "directedRelationship",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "DirectedRelationship",
                  "association": "A_target_directedRelationship"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_relatedElement_relationship-relationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_target_directedRelationship-directedRelationship-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_target_directedRelationship-directedRelationship-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_supplier_supplierDependency",
                "name": "A_supplier_supplierDependency"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Dependency-supplier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_supplier_supplierDependency-supplierDependency",
                  "name": "supplierDependency",
                  "type": "Dependency",
                  "association": "A_supplier_supplierDependency"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "A_supplier_supplierDependency-supplierDependency-_ownedComment.0",
                    "body": "Indicates the dependencies that reference the supplier."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_supplier_supplierDependency-supplierDependency-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_supplier_supplierDependency-supplierDependency-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_constrainedElement_constraint",
                "name": "A_constrainedElement_constraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Constraint-constrainedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_constrainedElement_constraint-constraint"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_constrainedElement_constraint-constraint",
                  "name": "constraint",
                  "type": "Constraint",
                  "association": "A_constrainedElement_constraint"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_constrainedElement_constraint-constraint-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_constrainedElement_constraint-constraint-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_specification_owningConstraint",
                "name": "A_specification_owningConstraint"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Constraint-specification"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_specification_owningConstraint-owningConstraint"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_specification_owningConstraint-owningConstraint",
                  "name": "owningConstraint",
                  "type": "Constraint",
                  "association": "A_specification_owningConstraint"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_specification_owningConstraint-owningConstraint-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_annotatedElement_comment",
                "name": "A_annotatedElement_comment"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Comment-annotatedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_annotatedElement_comment-comment"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_annotatedElement_comment-comment",
                  "name": "comment",
                  "type": "Comment",
                  "association": "A_annotatedElement_comment"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_annotatedElement_comment-comment-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_annotatedElement_comment-comment-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_mapping_abstraction",
                "name": "A_mapping_abstraction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Abstraction-mapping"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_mapping_abstraction-abstraction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_mapping_abstraction-abstraction",
                  "name": "abstraction",
                  "type": "Abstraction",
                  "association": "A_mapping_abstraction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_mapping_abstraction-abstraction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "CommonBehavior",
            "name": "CommonBehavior"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "CommonBehavior-_packageImport.0",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "CommonBehavior-_packageImport.1",
                "importedPackage": "SimpleClassifiers"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AnyReceiveEvent",
                "name": "AnyReceiveEvent"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AnyReceiveEvent-_ownedComment.0",
                  "body": "A trigger for an AnyReceiveEvent is triggered by the receipt of any message that is not explicitly handled by any related trigger."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AnyReceiveEvent"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "AnyReceiveEvent-_generalization.0",
                  "general": "MessageEvent"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Behavior",
                "name": "Behavior",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Behavior-_ownedComment.0",
                  "body": "Behavior is a specification of how its context BehavioredClassifier changes state over time. This specification may be either a definition of possible behavior execution or emergent behavior, or a selective illustration of an interesting subset of possible executions. The latter form is typically used for capturing examples, such as a trace of a particular execution."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Behavior"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Behavior-most_one_behavior",
                    "name": "most_one_behavior"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Behavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-most_one_behavior-_ownedComment.0",
                      "body": "There may be at most one Behavior for a given pairing of BehavioredClassifier (as owner of the Behavior) and BehavioralFeature (as specification of the Behavior)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-most_one_behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Behavior-most_one_behavior-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "specification <> null implies _'context'.ownedBehavior->select(specification=self.specification)->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Behavior-parameters_match",
                    "name": "parameters_match"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Behavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-parameters_match-_ownedComment.0",
                      "body": "If a Behavior has a specification BehavioralFeature, then it must have the same number of ownedParameters as its specification. The Behavior Parameters must also \"match\" the BehavioralParameter Parameters, but the exact requirements for this matching are not formalized."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-parameters_match"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Behavior-parameters_match-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "specification <> null implies ownedParameter->size() = specification.ownedParameter->size()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Behavior-feature_of_context_classifier",
                    "name": "feature_of_context_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Behavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-feature_of_context_classifier-_ownedComment.0",
                      "body": "The specification BehavioralFeature must be a feature (possibly inherited) of the context BehavioredClassifier of the Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-feature_of_context_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Behavior-feature_of_context_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "_'context'.feature->includes(specification)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Behavior-_generalization.0",
                  "general": "Class"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-context",
                    "name": "context",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "BehavioredClassifier",
                    "association": "A_context_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-context-_ownedComment.0",
                      "body": "The BehavioredClassifier that is the context for the execution of the Behavior. A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior. For example, following this algorithm, the context of an entry Behavior in a StateMachine is the BehavioredClassifier that owns the StateMachine. The features of the context BehavioredClassifier as well as the Elements visible to the context Classifier are visible to the Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-context"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-context-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-isReentrant",
                    "name": "isReentrant"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-isReentrant-_ownedComment.0",
                      "body": "Tells whether the Behavior can be invoked while it is still executing from a previous invocation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-isReentrant"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Behavior-isReentrant-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-ownedParameter",
                    "name": "ownedParameter",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Parameter",
                    "association": "A_ownedParameter_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-ownedParameter-_ownedComment.0",
                      "body": "References a list of Parameters to the Behavior which describes the order and type of arguments that can be given when the Behavior is invoked and of the values which will be returned when the Behavior completes its execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-ownedParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-ownedParameter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Behavior-ownedParameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-ownedParameterSet",
                    "name": "ownedParameterSet",
                    "aggregation": "composite",
                    "type": "ParameterSet",
                    "association": "A_ownedParameterSet_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-ownedParameterSet-_ownedComment.0",
                      "body": "The ParameterSets owned by this Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-ownedParameterSet"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-ownedParameterSet-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Behavior-ownedParameterSet-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-postcondition",
                    "name": "postcondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_postcondition_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-postcondition-_ownedComment.0",
                      "body": "An optional set of Constraints specifying what is fulfilled after the execution of the Behavior is completed, if its precondition was fulfilled before its invocation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-postcondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-postcondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Behavior-postcondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-precondition",
                    "name": "precondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_precondition_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-precondition-_ownedComment.0",
                      "body": "An optional set of Constraints specifying what must be fulfilled before the Behavior is invoked."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-precondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-precondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Behavior-precondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-specification",
                    "name": "specification",
                    "type": "BehavioralFeature",
                    "association": "A_method_specification"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-specification-_ownedComment.0",
                      "body": "Designates a BehavioralFeature that the Behavior implements. The BehavioralFeature must be owned by the BehavioredClassifier that owns the Behavior or be inherited by it. The Parameters of the BehavioralFeature and the implementing Behavior must match. A Behavior does not need to have a specification, in which case it either is the classifierBehavior of a BehavioredClassifier or it can only be invoked by another Behavior of the Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-specification"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-specification-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Behavior-redefinedBehavior",
                    "name": "redefinedBehavior",
                    "type": "Behavior",
                    "association": "A_redefinedBehavior_behavior"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Classifier-redefinedClassifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-redefinedBehavior-_ownedComment.0",
                      "body": "References the Behavior that this Behavior redefines. A subtype of Behavior may redefine any other subtype of Behavior. If the Behavior implements a BehavioralFeature, it replaces the redefined Behavior. If the Behavior is a classifierBehavior, it extends the redefined Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-redefinedBehavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Behavior-redefinedBehavior-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Behavior-redefinedBehavior-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Behavior-context.1",
                    "name": "context",
                    "isQuery": true,
                    "bodyCondition": "Behavior-context.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-context.1-_ownedComment.0",
                      "body": "A Behavior that is directly owned as a nestedClassifier does not have a context. Otherwise, to determine the context of a Behavior, find the first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any. If there is such a BehavioredClassifier, then it is the context, unless it is itself a Behavior with a non-empty context, in which case that is also the context for the original Behavior. "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-context.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Behavior-context.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Behavior-context.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Behavior-context"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Behavior-context.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if nestingClass <> null then\n    null\nelse\n    let b:BehavioredClassifier = self.behavioredClassifier(self.owner) in\n    if b.oclIsKindOf(Behavior) and b.oclAsType(Behavior)._'context' <> null then \n        b.oclAsType(Behavior)._'context'\n    else \n        b \n    endif\nendif\n        )"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Behavior-context.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "BehavioredClassifier"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Behavior-context.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Behavior-behavioredClassifier",
                    "name": "behavioredClassifier",
                    "isQuery": true
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Behavior-behavioredClassifier-spec"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-behavioredClassifier-_ownedComment.0",
                      "body": "The first BehavioredClassifier reached by following the chain of owner relationships from the Behavior, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-behavioredClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Behavior-behavioredClassifier-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-behavioredClassifier"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Behavior-behavioredClassifier-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "if from.oclIsKindOf(BehavioredClassifier) then\n    from.oclAsType(BehavioredClassifier)\nelse if from.owner = null then\n    null\nelse\n    self.behavioredClassifier(from.owner)\nendif\nendif\n    "
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Behavior-behavioredClassifier-from",
                        "name": "from",
                        "type": "Element"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Behavior-behavioredClassifier-result",
                        "name": "result",
                        "direction": "return",
                        "type": "BehavioredClassifier"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Behavior-behavioredClassifier-result-_lowerValue"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Behavior-inputParameters",
                    "name": "inputParameters",
                    "isQuery": true,
                    "bodyCondition": "Behavior-inputParameters-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-inputParameters-_ownedComment.0",
                      "body": "The in and inout ownedParameters of the Behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Behavior-inputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-inputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Behavior-inputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedParameter->select(direction=ParameterDirectionKind::_'in' or direction=ParameterDirectionKind::inout))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Behavior-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Behavior-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Behavior-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Behavior-outputParameters",
                    "name": "outputParameters",
                    "isQuery": true,
                    "bodyCondition": "Behavior-outputParameters-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Behavior-outputParameters-_ownedComment.0",
                      "body": "The out, inout and return ownedParameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Behavior-outputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Behavior-outputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Behavior-outputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedParameter->select(direction=ParameterDirectionKind::out or direction=ParameterDirectionKind::inout or direction=ParameterDirectionKind::return))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Behavior-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Behavior-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Behavior-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CallEvent",
                "name": "CallEvent"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CallEvent-_ownedComment.0",
                  "body": "A CallEvent models the receipt by an object of a message invoking a call of an Operation."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CallEvent"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CallEvent-_generalization.0",
                  "general": "MessageEvent"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "CallEvent-operation",
                  "name": "operation",
                  "type": "Operation",
                  "association": "A_operation_callEvent"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CallEvent-operation-_ownedComment.0",
                    "body": "Designates the Operation whose invocation raised the CalEvent."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CallEvent-operation"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ChangeEvent",
                "name": "ChangeEvent"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ChangeEvent-_ownedComment.0",
                  "body": "A ChangeEvent models a change in the system configuration that makes a condition true."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ChangeEvent"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ChangeEvent-_generalization.0",
                  "general": "Event"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ChangeEvent-changeExpression",
                  "name": "changeExpression",
                  "aggregation": "composite",
                  "type": "ValueSpecification",
                  "association": "A_changeExpression_changeEvent"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ChangeEvent-changeExpression-_ownedComment.0",
                    "body": "A Boolean-valued ValueSpecification that will result in a ChangeEvent whenever its value changes from false to true."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ChangeEvent-changeExpression"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Event",
                "name": "Event",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Event-_ownedComment.0",
                  "body": "An Event is the specification of some occurrence that may potentially trigger effects by an object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Event"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Event-_generalization.0",
                  "general": "PackageableElement"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "FunctionBehavior",
                "name": "FunctionBehavior"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "FunctionBehavior-_ownedComment.0",
                  "body": "A FunctionBehavior is an OpaqueBehavior that does not access or modify any objects or other external data."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "FunctionBehavior"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FunctionBehavior-one_output_parameter",
                    "name": "one_output_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FunctionBehavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FunctionBehavior-one_output_parameter-_ownedComment.0",
                      "body": "A FunctionBehavior has at least one output Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FunctionBehavior-one_output_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FunctionBehavior-one_output_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.ownedParameter->\n  select(p | p.direction = ParameterDirectionKind::out or p.direction= ParameterDirectionKind::inout or p.direction= ParameterDirectionKind::return)->size() >= 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FunctionBehavior-types_of_parameters",
                    "name": "types_of_parameters"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FunctionBehavior"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "FunctionBehavior-types_of_parameters-_ownedComment.0",
                      "body": "The types of the ownedParameters are all DataTypes, which may not nest anything but other DataTypes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "FunctionBehavior-types_of_parameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FunctionBehavior-types_of_parameters-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "ownedParameter->forAll(p | p.type <> null and\n  p.type.oclIsTypeOf(DataType) and hasAllDataTypeAttributes(p.type.oclAsType(DataType)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "FunctionBehavior-_generalization.0",
                  "general": "OpaqueBehavior"
                },
                "_parent": "_"
              },
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes",
                  "name": "hasAllDataTypeAttributes",
                  "isQuery": true,
                  "bodyCondition": "FunctionBehavior-hasAllDataTypeAttributes-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes-_ownedComment.0",
                    "body": "The hasAllDataTypeAttributes query tests whether the types of the attributes of the given DataType are all DataTypes, and similarly for all those DataTypes."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "FunctionBehavior-hasAllDataTypeAttributes"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "FunctionBehavior-hasAllDataTypeAttributes"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (d.ownedAttribute->forAll(a |\n    a.type.oclIsKindOf(DataType) and\n      hasAllDataTypeAttributes(a.type.oclAsType(DataType))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": [
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  },
                  {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "FunctionBehavior-hasAllDataTypeAttributes-d",
                      "name": "d",
                      "type": "DataType"
                    },
                    "_parent": "_"
                  }
                ]
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "MessageEvent",
                "name": "MessageEvent",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "MessageEvent-_ownedComment.0",
                  "body": "A MessageEvent specifies the receipt by an object of either an Operation call or a Signal instance."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "MessageEvent"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "MessageEvent-_generalization.0",
                  "general": "Event"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OpaqueBehavior",
                "name": "OpaqueBehavior"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OpaqueBehavior-_ownedComment.0",
                  "body": "An OpaqueBehavior is a Behavior whose specification is given in a textual language other than UML."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OpaqueBehavior"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OpaqueBehavior-_generalization.0",
                  "general": "Behavior"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueBehavior-body",
                    "name": "body",
                    "isOrdered": true,
                    "isUnique": false
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueBehavior-body-_ownedComment.0",
                      "body": "Specifies the behavior in one or more languages."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueBehavior-body"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueBehavior-body-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueBehavior-body-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueBehavior-language",
                    "name": "language",
                    "isOrdered": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueBehavior-language-_ownedComment.0",
                      "body": "Languages the body strings use in the same order as the body strings."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueBehavior-language"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueBehavior-language-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueBehavior-language-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "SignalEvent",
                "name": "SignalEvent"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "SignalEvent-_ownedComment.0",
                  "body": "A SignalEvent represents the receipt of an asynchronous Signal instance."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "SignalEvent"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "SignalEvent-_generalization.0",
                  "general": "MessageEvent"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "SignalEvent-signal",
                  "name": "signal",
                  "type": "Signal",
                  "association": "A_signal_signalEvent"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "SignalEvent-signal-_ownedComment.0",
                    "body": "The specific Signal that is associated with this SignalEvent."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "SignalEvent-signal"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TimeEvent",
                "name": "TimeEvent"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TimeEvent-_ownedComment.0",
                  "body": "A TimeEvent is an Event that occurs at a specific point in time."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeEvent"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "TimeEvent-when_non_negative",
                  "name": "when_non_negative"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "TimeEvent"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "TimeEvent-when_non_negative-_ownedComment.0",
                    "body": "The ValueSpecification when must return a non-negative Integer."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "TimeEvent-when_non_negative"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "TimeEvent-when_non_negative-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "when.integerValue() >= 0"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TimeEvent-_generalization.0",
                  "general": "Event"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeEvent-isRelative",
                    "name": "isRelative"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeEvent-isRelative-_ownedComment.0",
                      "body": "Specifies whether the TimeEvent is specified as an absolute or relative time."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeEvent-isRelative"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "TimeEvent-isRelative-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TimeEvent-when",
                    "name": "when",
                    "aggregation": "composite",
                    "type": "TimeExpression",
                    "association": "A_when_timeEvent"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TimeEvent-when-_ownedComment.0",
                      "body": "Specifies the time of the TimeEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TimeEvent-when"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Trigger",
                "name": "Trigger"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Trigger-_ownedComment.0",
                  "body": "A Trigger specifies a specific point  at which an Event occurrence may trigger an effect in a Behavior. A Trigger may be qualified by the Port on which the Event occurred."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Trigger"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "Trigger-trigger_with_ports",
                  "name": "trigger_with_ports"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "Trigger"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Trigger-trigger_with_ports-_ownedComment.0",
                    "body": "If a Trigger specifies one or more ports, the event of the Trigger must be a MessageEvent."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Trigger-trigger_with_ports"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "Trigger-trigger_with_ports-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "port->notEmpty() implies event.oclIsKindOf(MessageEvent)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Trigger-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Trigger-event",
                    "name": "event",
                    "type": "Event",
                    "association": "A_event_trigger"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Trigger-event-_ownedComment.0",
                      "body": "The Event that detected by the Trigger."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Trigger-event"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Trigger-port",
                    "name": "port",
                    "type": "Port",
                    "association": "A_port_trigger"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Trigger-port-_ownedComment.0",
                      "body": "A optional Port of through which the given effect is detected."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Trigger-port"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Trigger-port-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Trigger-port-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_event_trigger",
                "name": "A_event_trigger"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Trigger-event"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_event_trigger-trigger"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_event_trigger-trigger",
                  "name": "trigger",
                  "type": "Trigger",
                  "association": "A_event_trigger"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_event_trigger-trigger-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_event_trigger-trigger-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_port_trigger",
                "name": "A_port_trigger"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Trigger-port"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_port_trigger-trigger"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_port_trigger-trigger",
                  "name": "trigger",
                  "type": "Trigger",
                  "association": "A_port_trigger"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_port_trigger-trigger-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_port_trigger-trigger-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_when_timeEvent",
                "name": "A_when_timeEvent"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TimeEvent-when"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_when_timeEvent-timeEvent"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_when_timeEvent-timeEvent",
                  "name": "timeEvent",
                  "type": "TimeEvent",
                  "association": "A_when_timeEvent"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_when_timeEvent-timeEvent-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signal_signalEvent",
                "name": "A_signal_signalEvent"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SignalEvent-signal"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signal_signalEvent-signalEvent"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signal_signalEvent-signalEvent",
                  "name": "signalEvent",
                  "type": "SignalEvent",
                  "association": "A_signal_signalEvent"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signal_signalEvent-signalEvent-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signal_signalEvent-signalEvent-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_changeExpression_changeEvent",
                "name": "A_changeExpression_changeEvent"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ChangeEvent-changeExpression"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_changeExpression_changeEvent-changeEvent"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_changeExpression_changeEvent-changeEvent",
                  "name": "changeEvent",
                  "type": "ChangeEvent",
                  "association": "A_changeExpression_changeEvent"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_changeExpression_changeEvent-changeEvent-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_operation_callEvent",
                "name": "A_operation_callEvent"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CallEvent-operation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_operation_callEvent-callEvent"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_operation_callEvent-callEvent",
                  "name": "callEvent",
                  "type": "CallEvent",
                  "association": "A_operation_callEvent"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_operation_callEvent-callEvent-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_operation_callEvent-callEvent-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameterSet_behavior",
                "name": "A_ownedParameterSet_behavior"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-ownedParameterSet"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedParameterSet_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedParameterSet_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_ownedParameterSet_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedParameterSet_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_context_behavior",
                "name": "A_context_behavior",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-context"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_context_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_context_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_context_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_context_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_context_behavior-behavior-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_precondition_behavior",
                "name": "A_precondition_behavior"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-precondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_precondition_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_precondition_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_precondition_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_precondition_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_postcondition_behavior",
                "name": "A_postcondition_behavior"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-postcondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_postcondition_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_postcondition_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_postcondition_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_postcondition_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedBehavior_behavior",
                "name": "A_redefinedBehavior_behavior"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-redefinedBehavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedBehavior_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedBehavior_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_redefinedBehavior_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedClassifier_classifier-classifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedBehavior_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedBehavior_behavior-behavior-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameter_behavior",
                "name": "A_ownedParameter_behavior"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-ownedParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedParameter_behavior-behavior"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedParameter_behavior-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_ownedParameter_behavior"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedParameter_behavior-behavior-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Classification",
            "name": "Classification"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Classification-_packageImport.0",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Classification-_packageImport.1",
                "importedPackage": "Deployments"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Classification-_packageImport.2",
                "importedPackage": "CommonBehavior"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Substitution",
                "name": "Substitution"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Substitution-_ownedComment.0",
                  "body": "A substitution is a relationship between two classifiers signifying that the substituting classifier complies with the contract specified by the contract classifier. This implies that instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Substitution"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Substitution-_generalization.0",
                  "general": "Realization"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Substitution-contract",
                    "name": "contract",
                    "type": "Classifier",
                    "association": "A_contract_substitution"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Dependency-supplier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Substitution-contract-_ownedComment.0",
                      "body": "The contract with which the substituting classifier complies."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Substitution-contract"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Substitution-substitutingClassifier",
                    "name": "substitutingClassifier",
                    "type": "Classifier",
                    "association": "A_substitution_substitutingClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Dependency-client"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Substitution-substitutingClassifier-_ownedComment.0",
                      "body": "Instances of the substituting classifier are runtime substitutable where instances of the contract classifier are expected."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Substitution-substitutingClassifier"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "BehavioralFeature",
                "name": "BehavioralFeature",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "BehavioralFeature-_ownedComment.0",
                  "body": "A BehavioralFeature is a feature of a Classifier that specifies an aspect of the behavior of its instances.  A BehavioralFeature is implemented (realized) by a Behavior. A BehavioralFeature specifies that a Classifier will respond to a designated request by invoking its implementing method."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "BehavioralFeature-abstract_no_method",
                  "name": "abstract_no_method"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "BehavioralFeature-abstract_no_method-_ownedComment.0",
                    "body": "When isAbstract is true there are no methods."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "BehavioralFeature-abstract_no_method"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "BehavioralFeature-abstract_no_method-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "isAbstract implies method->isEmpty()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "BehavioralFeature-_generalization.0",
                    "general": "Feature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "BehavioralFeature-_generalization.1",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-concurrency",
                    "name": "concurrency",
                    "type": "CallConcurrencyKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-concurrency-_ownedComment.0",
                      "body": "Specifies the semantics of concurrent calls to the same passive instance (i.e., an instance originating from a Class with isActive being false). Active instances control access to their own BehavioralFeatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-concurrency"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "BehavioralFeature-concurrency-_defaultValue",
                      "type": "CallConcurrencyKind",
                      "instance": "CallConcurrencyKind-sequential"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-isAbstract",
                    "name": "isAbstract"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-isAbstract-_ownedComment.0",
                      "body": "If true, then the BehavioralFeature does not have an implementation, and one must be supplied by a more specific Classifier. If false, the BehavioralFeature must have an implementation in the Classifier or one must be inherited."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-isAbstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "BehavioralFeature-isAbstract-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-method",
                    "name": "method",
                    "type": "Behavior",
                    "association": "A_method_specification"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-method-_ownedComment.0",
                      "body": "A Behavior that implements the BehavioralFeature. There may be at most one Behavior for a particular pairing of a Classifier (as owner of the Behavior) and a BehavioralFeature (as specification of the Behavior)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-method"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioralFeature-method-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioralFeature-method-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-ownedParameter",
                    "name": "ownedParameter",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Parameter",
                    "association": "A_ownedParameter_ownerFormalParam"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-ownedParameter-_ownedComment.0",
                      "body": "The ordered set of formal Parameters of this BehavioralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-ownedParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioralFeature-ownedParameter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioralFeature-ownedParameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-ownedParameterSet",
                    "name": "ownedParameterSet",
                    "aggregation": "composite",
                    "type": "ParameterSet",
                    "association": "A_ownedParameterSet_behavioralFeature"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-ownedParameterSet-_ownedComment.0",
                      "body": "The ParameterSets owned by this BehavioralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-ownedParameterSet"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioralFeature-ownedParameterSet-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioralFeature-ownedParameterSet-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "BehavioralFeature-raisedException",
                    "name": "raisedException",
                    "type": "Type",
                    "association": "A_raisedException_behavioralFeature"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-raisedException-_ownedComment.0",
                      "body": "The Types representing exceptions that may be raised during an invocation of this BehavioralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-raisedException"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "BehavioralFeature-raisedException-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "BehavioralFeature-raisedException-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "BehavioralFeature-isDistinguishableFrom",
                    "name": "isDistinguishableFrom",
                    "isQuery": true,
                    "bodyCondition": "BehavioralFeature-isDistinguishableFrom-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "NamedElement-isDistinguishableFrom"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-isDistinguishableFrom-_ownedComment.0",
                      "body": "The query isDistinguishableFrom() determines whether two BehavioralFeatures may coexist in the same Namespace. It specifies that they must have different signatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "BehavioralFeature-isDistinguishableFrom-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-isDistinguishableFrom"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "BehavioralFeature-isDistinguishableFrom-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((n.oclIsKindOf(BehavioralFeature) and ns.getNamesOfMember(self)->intersection(ns.getNamesOfMember(n))->notEmpty()) implies\n  Set{self}->including(n.oclAsType(BehavioralFeature))->isUnique(ownedParameter->collect(p|\n  Tuple { name=p.name, type=p.type,effect=p.effect,direction=p.direction,isException=p.isException,\n              isStream=p.isStream,isOrdered=p.isOrdered,isUnique=p.isUnique,lower=p.lower, upper=p.upper }))\n  )"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "BehavioralFeature-isDistinguishableFrom-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "BehavioralFeature-isDistinguishableFrom-n",
                        "name": "n",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "BehavioralFeature-isDistinguishableFrom-ns",
                        "name": "ns",
                        "type": "Namespace"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "BehavioralFeature-inputParameters",
                    "name": "inputParameters",
                    "isQuery": true,
                    "bodyCondition": "BehavioralFeature-inputParameters-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-inputParameters-_ownedComment.0",
                      "body": "The ownedParameters with direction in and inout."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "BehavioralFeature-inputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-inputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "BehavioralFeature-inputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedParameter->select(direction=ParameterDirectionKind::_'in' or direction=ParameterDirectionKind::inout))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "BehavioralFeature-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "BehavioralFeature-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "BehavioralFeature-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "BehavioralFeature-outputParameters",
                    "name": "outputParameters",
                    "isQuery": true,
                    "bodyCondition": "BehavioralFeature-outputParameters-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BehavioralFeature-outputParameters-_ownedComment.0",
                      "body": "The ownedParameters with direction out, inout, or return."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "BehavioralFeature-outputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "BehavioralFeature-outputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "BehavioralFeature-outputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedParameter->select(direction=ParameterDirectionKind::out or direction=ParameterDirectionKind::inout or direction=ParameterDirectionKind::return))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "BehavioralFeature-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "BehavioralFeature-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "BehavioralFeature-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Classifier",
                "name": "Classifier",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Classifier-_ownedComment.0",
                  "body": "A Classifier represents a classification of instances according to their Features."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Classifier"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Classifier-specialize_type",
                    "name": "specialize_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Classifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-specialize_type-_ownedComment.0",
                      "body": "A Classifier may only specialize Classifiers of a valid type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-specialize_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Classifier-specialize_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parents()->forAll(c | self.maySpecializeType(c))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Classifier-maps_to_generalization_set",
                    "name": "maps_to_generalization_set"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Classifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-maps_to_generalization_set-_ownedComment.0",
                      "body": "The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances also be its subclasses."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-maps_to_generalization_set"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Classifier-maps_to_generalization_set-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "powertypeExtent->forAll( gs | \n  gs.generalization->forAll( gen | \n    not (gen.general = self) and not gen.general.allParents()->includes(self) and not (gen.specific = self) and not self.allParents()->includes(gen.specific) \n  ))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Classifier-non_final_parents",
                    "name": "non_final_parents"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Classifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-non_final_parents-_ownedComment.0",
                      "body": "The parents of a Classifier must be non-final."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-non_final_parents"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Classifier-non_final_parents-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parents()->forAll(not isFinalSpecialization)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Classifier-no_cycles_in_generalization",
                    "name": "no_cycles_in_generalization"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Classifier"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-no_cycles_in_generalization-_ownedComment.0",
                      "body": "Generalization hierarchies must be directed and acyclical. A Classifier can not be both a transitively general and transitively specific Classifier of the same Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-no_cycles_in_generalization"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Classifier-no_cycles_in_generalization-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not allParents()->includes(self)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Classifier-_generalization.3",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Classifier-_generalization.0",
                    "general": "Type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Classifier-_generalization.2",
                    "general": "TemplateableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Classifier-_generalization.1",
                    "general": "RedefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-attribute",
                    "name": "attribute",
                    "isOrdered": true,
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Property",
                    "association": "A_attribute_classifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-attribute-_ownedComment.0",
                      "body": "All of the Properties that are direct (i.e., not inherited or imported) attributes of the Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-attribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-attribute-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-attribute-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-collaborationUse",
                    "name": "collaborationUse",
                    "aggregation": "composite",
                    "type": "CollaborationUse",
                    "association": "A_collaborationUse_classifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-collaborationUse-_ownedComment.0",
                      "body": "The CollaborationUses owned by the Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-collaborationUse"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-collaborationUse-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-collaborationUse-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-feature",
                    "name": "feature",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Feature",
                    "association": "A_feature_featuringClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-member"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-feature-_ownedComment.0",
                      "body": "Specifies each Feature directly defined in the classifier. Note that there may be members of the Classifier that are of the type Feature but are not included, e.g., inherited features."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-feature"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-feature-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-feature-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-general",
                    "name": "general",
                    "isDerived": true,
                    "type": "Classifier",
                    "association": "A_general_classifier"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-general-_ownedComment.0",
                      "body": "The generalizing Classifiers for this Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-general"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-general-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-general-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-generalization",
                    "name": "generalization",
                    "aggregation": "composite",
                    "type": "Generalization",
                    "association": "A_generalization_specific"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_source_directedRelationship-directedRelationship"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-generalization-_ownedComment.0",
                      "body": "The Generalization relationships for this Classifier. These Generalizations navigate to more general Classifiers in the generalization hierarchy."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-generalization"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-generalization-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-generalization-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-inheritedMember",
                    "name": "inheritedMember",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "NamedElement",
                    "association": "A_inheritedMember_inheritingClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-member"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-inheritedMember-_ownedComment.0",
                      "body": "All elements inherited by this Classifier from its general Classifiers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-inheritedMember"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-inheritedMember-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-inheritedMember-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-isAbstract",
                    "name": "isAbstract"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-isAbstract-_ownedComment.0",
                      "body": "If true, the Classifier can only be instantiated by instantiating one of its specializations. An abstract Classifier is intended to be used by other Classifiers e.g., as the target of Associations or Generalizations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-isAbstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Classifier-isAbstract-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-isFinalSpecialization",
                    "name": "isFinalSpecialization"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-isFinalSpecialization-_ownedComment.0",
                      "body": "If true, the Classifier cannot be specialized."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-isFinalSpecialization"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Classifier-isFinalSpecialization-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-ownedTemplateSignature",
                    "name": "ownedTemplateSignature",
                    "aggregation": "composite",
                    "type": "RedefinableTemplateSignature",
                    "association": "A_ownedTemplateSignature_classifier"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "TemplateableElement-ownedTemplateSignature"
                    },
                    "_parent": "_"
                  },
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-ownedTemplateSignature-_ownedComment.0",
                      "body": "The optional RedefinableTemplateSignature specifying the formal template parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-ownedTemplateSignature"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-ownedTemplateSignature-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-ownedUseCase",
                    "name": "ownedUseCase",
                    "aggregation": "composite",
                    "type": "UseCase",
                    "association": "A_ownedUseCase_classifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-ownedUseCase-_ownedComment.0",
                      "body": "The UseCases owned by this classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-ownedUseCase"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-ownedUseCase-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-ownedUseCase-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-powertypeExtent",
                    "name": "powertypeExtent",
                    "type": "GeneralizationSet",
                    "association": "A_powertypeExtent_powertype"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-powertypeExtent-_ownedComment.0",
                      "body": "The GeneralizationSet of which this Classifier is a power type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-powertypeExtent"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-powertypeExtent-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-powertypeExtent-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-redefinedClassifier",
                    "name": "redefinedClassifier",
                    "type": "Classifier",
                    "association": "A_redefinedClassifier_classifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-redefinedClassifier-_ownedComment.0",
                      "body": "The Classifiers redefined by this Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-redefinedClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-redefinedClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-redefinedClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-representation",
                    "name": "representation",
                    "type": "CollaborationUse",
                    "association": "A_representation_classifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Classifier-collaborationUse"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-representation-_ownedComment.0",
                      "body": "A CollaborationUse which indicates the Collaboration that represents this Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-representation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-representation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-substitution",
                    "name": "substitution",
                    "aggregation": "composite",
                    "type": "Substitution",
                    "association": "A_substitution_substitutingClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-clientDependency"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-substitution-_ownedComment.0",
                      "body": "The Substitutions owned by this Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-substitution"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-substitution-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-substitution-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-templateParameter",
                    "name": "templateParameter",
                    "type": "ClassifierTemplateParameter",
                    "association": "A_classifier_templateParameter_parameteredElement"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "ParameterableElement-templateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-templateParameter-_ownedComment.0",
                      "body": "TheClassifierTemplateParameter that exposes this element as a formal parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-templateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-templateParameter-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Classifier-useCase",
                    "name": "useCase",
                    "type": "UseCase",
                    "association": "A_subject_useCase"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-useCase-_ownedComment.0",
                      "body": "The set of UseCases for which this Classifier is the subject."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-useCase"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Classifier-useCase-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Classifier-useCase-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allFeatures",
                    "name": "allFeatures",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allFeatures-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allFeatures-_ownedComment.0",
                      "body": "The query allFeatures() gives all of the Features in the namespace of the Classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allFeatures"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allFeatures-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allFeatures"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allFeatures-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (member->select(oclIsKindOf(Feature))->collect(oclAsType(Feature))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allFeatures-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Feature"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allFeatures-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allFeatures-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allParents",
                    "name": "allParents",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allParents-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allParents-_ownedComment.0",
                      "body": "The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allParents"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allParents-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allParents"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allParents-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (parents()->union(parents()->collect(allParents())->asSet()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allParents-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allParents-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allParents-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-conformsTo",
                    "name": "conformsTo",
                    "isQuery": true,
                    "bodyCondition": "Classifier-conformsTo-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Type-conformsTo"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-conformsTo-_ownedComment.0",
                      "body": "The query conformsTo() gives true for a Classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-conformsTo"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-conformsTo-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-conformsTo"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-conformsTo-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if other.oclIsKindOf(Classifier) then\n  let otherClassifier : Classifier = other.oclAsType(Classifier) in\n    self = otherClassifier or allParents()->includes(otherClassifier)\nelse\n  false\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-conformsTo-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-conformsTo-other",
                        "name": "other",
                        "type": "Type"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-general.1",
                    "name": "general",
                    "isQuery": true,
                    "bodyCondition": "Classifier-general.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-general.1-_ownedComment.0",
                      "body": "The general Classifiers are the ones referenced by the Generalization relationships."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-general.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-general.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Classifier-general.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Classifier-general"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-general.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (parents())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-general.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-general.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-general.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-hasVisibilityOf",
                    "name": "hasVisibilityOf",
                    "isQuery": true,
                    "bodyCondition": "Classifier-hasVisibilityOf-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Classifier-hasVisibilityOf-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-hasVisibilityOf-_ownedComment.0",
                      "body": "The query hasVisibilityOf() determines whether a NamedElement is visible in the classifier. Non-private members are visible. It is only called when the argument is something owned by a parent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-hasVisibilityOf"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Classifier-hasVisibilityOf-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Classifier-hasVisibilityOf"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Classifier-hasVisibilityOf-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "allParents()->including(self)->collect(member)->includes(n)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Classifier-hasVisibilityOf-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Classifier-hasVisibilityOf"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Classifier-hasVisibilityOf-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (n.visibility <> VisibilityKind::private)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-hasVisibilityOf-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-hasVisibilityOf-n",
                        "name": "n",
                        "type": "NamedElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-inherit",
                    "name": "inherit",
                    "isQuery": true,
                    "bodyCondition": "Classifier-inherit-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-inherit-_ownedComment.0",
                      "body": "The query inherit() defines how to inherit a set of elements passed as its argument.  It excludes redefined elements from the result."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-inherit"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-inherit-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-inherit"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-inherit-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (inhs->reject(inh |\n  inh.oclIsKindOf(RedefinableElement) and\n  ownedMember->select(oclIsKindOf(RedefinableElement))->\n    select(redefinedElement->includes(inh.oclAsType(RedefinableElement)))\n       ->notEmpty()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-inherit-result",
                        "name": "result",
                        "direction": "return",
                        "type": "NamedElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Classifier-inherit-result-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Classifier-inherit-result-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-inherit-inhs",
                        "name": "inhs",
                        "type": "NamedElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Classifier-inherit-inhs-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Classifier-inherit-inhs-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-inheritableMembers",
                    "name": "inheritableMembers",
                    "isQuery": true,
                    "bodyCondition": "Classifier-inheritableMembers-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Classifier-inheritableMembers-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-inheritableMembers-_ownedComment.0",
                      "body": "The query inheritableMembers() gives all of the members of a Classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-inheritableMembers"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Classifier-inheritableMembers-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Classifier-inheritableMembers"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Classifier-inheritableMembers-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "c.allParents()->includes(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Classifier-inheritableMembers-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Classifier-inheritableMembers"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Classifier-inheritableMembers-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (member->select(m | c.hasVisibilityOf(m)))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-inheritableMembers-result",
                        "name": "result",
                        "direction": "return",
                        "type": "NamedElement"
                      },
                      "_parent": "_",
                      "lowerValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralInteger",
                          "xmi:id": "Classifier-inheritableMembers-result-_lowerValue"
                        },
                        "_parent": "_"
                      },
                      "upperValue": {
                        "_attributes": {
                          "xmi:type": "uml:LiteralUnlimitedNatural",
                          "xmi:id": "Classifier-inheritableMembers-result-_upperValue",
                          "value": "*"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-inheritableMembers-c",
                        "name": "c",
                        "type": "Classifier"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-inheritedMember.1",
                    "name": "inheritedMember",
                    "isQuery": true,
                    "bodyCondition": "Classifier-inheritedMember.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-inheritedMember.1-_ownedComment.0",
                      "body": "The inheritedMember association is derived by inheriting the inheritable members of the parents."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-inheritedMember.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-inheritedMember.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Classifier-inheritedMember.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Classifier-inheritedMember"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-inheritedMember.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (inherit(parents()->collect(inheritableMembers(self))->asSet()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-inheritedMember.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "NamedElement"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-inheritedMember.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-inheritedMember.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-isTemplate",
                    "name": "isTemplate",
                    "isQuery": true,
                    "bodyCondition": "Classifier-isTemplate-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "TemplateableElement-isTemplate"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-isTemplate-_ownedComment.0",
                      "body": "The query isTemplate() returns whether this Classifier is actually a template."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-isTemplate"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-isTemplate-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-isTemplate"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-isTemplate-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedTemplateSignature <> null or general->exists(g | g.isTemplate()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-isTemplate-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-maySpecializeType",
                    "name": "maySpecializeType",
                    "isQuery": true,
                    "bodyCondition": "Classifier-maySpecializeType-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-maySpecializeType-_ownedComment.0",
                      "body": "The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-maySpecializeType"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-maySpecializeType-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-maySpecializeType"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-maySpecializeType-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oclIsKindOf(c.oclType()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-maySpecializeType-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-maySpecializeType-c",
                        "name": "c",
                        "type": "Classifier"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-parents",
                    "name": "parents",
                    "isQuery": true,
                    "bodyCondition": "Classifier-parents-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-parents-_ownedComment.0",
                      "body": "The query parents() gives all of the immediate ancestors of a generalized Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-parents"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-parents-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-parents"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-parents-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (generalization.general->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-parents-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-parents-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-parents-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-directlyRealizedInterfaces",
                    "name": "directlyRealizedInterfaces",
                    "isQuery": true,
                    "bodyCondition": "Classifier-directlyRealizedInterfaces-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-directlyRealizedInterfaces-_ownedComment.0",
                      "body": "The Interfaces directly realized by this Classifier"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-directlyRealizedInterfaces"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-directlyRealizedInterfaces-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-directlyRealizedInterfaces"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-directlyRealizedInterfaces-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((clientDependency->\n  select(oclIsKindOf(Realization) and supplier->forAll(oclIsKindOf(Interface))))->\n      collect(supplier.oclAsType(Interface))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-directlyRealizedInterfaces-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-directlyRealizedInterfaces-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-directlyRealizedInterfaces-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-directlyUsedInterfaces",
                    "name": "directlyUsedInterfaces",
                    "isQuery": true,
                    "bodyCondition": "Classifier-directlyUsedInterfaces-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-directlyUsedInterfaces-_ownedComment.0",
                      "body": "The Interfaces directly used by this Classifier"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-directlyUsedInterfaces"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-directlyUsedInterfaces-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-directlyUsedInterfaces"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-directlyUsedInterfaces-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = ((supplierDependency->\n  select(oclIsKindOf(Usage) and client->forAll(oclIsKindOf(Interface))))->\n    collect(client.oclAsType(Interface))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-directlyUsedInterfaces-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-directlyUsedInterfaces-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-directlyUsedInterfaces-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allRealizedInterfaces",
                    "name": "allRealizedInterfaces",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allRealizedInterfaces-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allRealizedInterfaces-_ownedComment.0",
                      "body": "The Interfaces realized by this Classifier and all of its generalizations"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allRealizedInterfaces"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allRealizedInterfaces-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allRealizedInterfaces"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allRealizedInterfaces-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (directlyRealizedInterfaces()->union(self.allParents()->collect(directlyRealizedInterfaces()))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allRealizedInterfaces-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allRealizedInterfaces-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allRealizedInterfaces-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allUsedInterfaces",
                    "name": "allUsedInterfaces",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allUsedInterfaces-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allUsedInterfaces-_ownedComment.0",
                      "body": "The Interfaces used by this Classifier and all of its generalizations"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allUsedInterfaces"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allUsedInterfaces-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allUsedInterfaces"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allUsedInterfaces-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (directlyUsedInterfaces()->union(self.allParents()->collect(directlyUsedInterfaces()))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allUsedInterfaces-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Interface"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allUsedInterfaces-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allUsedInterfaces-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-isSubstitutableFor",
                    "name": "isSubstitutableFor",
                    "isQuery": true,
                    "bodyCondition": "Classifier-isSubstitutableFor-spec"
                  },
                  "_parent": "_",
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-isSubstitutableFor-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-isSubstitutableFor"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-isSubstitutableFor-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (substitution.contract->includes(contract))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-isSubstitutableFor-contract",
                        "name": "contract",
                        "type": "Classifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Classifier-isSubstitutableFor-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allAttributes",
                    "name": "allAttributes",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allAttributes-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allAttributes-_ownedComment.0",
                      "body": "The query allAttributes gives an ordered set of all owned and inherited attributes of the Classifier. All owned attributes appear before any inherited attributes, and the attributes inherited from any more specific parent Classifier appear before those of any more general parent Classifier. However, if the Classifier has multiple immediate parents, then the relative ordering of the sets of attributes from those parents is not defined."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allAttributes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allAttributes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allAttributes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allAttributes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (attribute->asSequence()->union(parents()->asSequence().allAttributes())->select(p | member->includes(p))->asOrderedSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allAttributes-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Property"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allAttributes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allAttributes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Classifier-allSlottableFeatures",
                    "name": "allSlottableFeatures",
                    "isQuery": true,
                    "bodyCondition": "Classifier-allSlottableFeatures-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Classifier-allSlottableFeatures-_ownedComment.0",
                      "body": "All StructuralFeatures related to the Classifier that may have Slots, including direct attributes, inherited attributes, private attributes in generalizations, and memberEnds of Associations, but excluding redefined StructuralFeatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allSlottableFeatures"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Classifier-allSlottableFeatures-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Classifier-allSlottableFeatures"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Classifier-allSlottableFeatures-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (member->select(oclIsKindOf(StructuralFeature))->\n  collect(oclAsType(StructuralFeature))->\n   union(self.inherit(self.allParents()->collect(p | p.attribute)->asSet())->\n     collect(oclAsType(StructuralFeature)))->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Classifier-allSlottableFeatures-result",
                      "name": "result",
                      "direction": "return",
                      "type": "StructuralFeature"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Classifier-allSlottableFeatures-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Classifier-allSlottableFeatures-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ClassifierTemplateParameter",
                "name": "ClassifierTemplateParameter"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ClassifierTemplateParameter-_ownedComment.0",
                  "body": "A ClassifierTemplateParameter exposes a Classifier as a formal template parameter."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ClassifierTemplateParameter"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-has_constraining_classifier",
                    "name": "has_constraining_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-has_constraining_classifier-_ownedComment.0",
                      "body": "If allowSubstitutable is true, then there must be a constrainingClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-has_constraining_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-has_constraining_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "allowSubstitutable implies constrainingClassifier->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-parametered_element_no_features",
                    "name": "parametered_element_no_features"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-parametered_element_no_features-_ownedComment.0",
                      "body": "The parameteredElement has no direct features, and if constrainedElement is empty it has no generalizations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-parametered_element_no_features"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-parametered_element_no_features-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parameteredElement.feature->isEmpty() and (constrainingClassifier->isEmpty() implies  parameteredElement.allParents()->isEmpty())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-matching_abstract",
                    "name": "matching_abstract"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-matching_abstract-_ownedComment.0",
                      "body": "If the parameteredElement is not abstract, then the Classifier used as an argument shall not be abstract."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-matching_abstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-matching_abstract-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(not parameteredElement.isAbstract) implies templateParameterSubstitution.actual->forAll(a | not a.oclAsType(Classifier).isAbstract)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-actual_is_classifier",
                    "name": "actual_is_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-actual_is_classifier-_ownedComment.0",
                      "body": "The argument to a ClassifierTemplateParameter is a Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-actual_is_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-actual_is_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": " templateParameterSubstitution.actual->forAll(a | a.oclIsKindOf(Classifier))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_args",
                    "name": "constraining_classifiers_constrain_args"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_args-_ownedComment.0",
                      "body": "If there are any constrainingClassifiers, then every argument must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-constraining_classifiers_constrain_args"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_args-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "templateParameterSubstitution.actual->forAll( a |\n  let arg : Classifier = a.oclAsType(Classifier) in\n    constrainingClassifier->forAll(\n      cc |  \n         arg = cc or arg.conformsTo(cc) or (allowSubstitutable and arg.isSubstitutableFor(cc))\n      )\n)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element",
                    "name": "constraining_classifiers_constrain_parametered_element"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClassifierTemplateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element-_ownedComment.0",
                      "body": "If there are any constrainingClassifiers, then the parameteredElement must be the same as or a specialization of them, or if allowSubstitutable is true, then it can also be substitutable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClassifierTemplateParameter-constraining_classifiers_constrain_parametered_element-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "constrainingClassifier->forAll(\n     cc |  parameteredElement = cc or parameteredElement.conformsTo(cc) or (allowSubstitutable and parameteredElement.isSubstitutableFor(cc))\n)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ClassifierTemplateParameter-_generalization.0",
                  "general": "TemplateParameter"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ClassifierTemplateParameter-allowSubstitutable",
                    "name": "allowSubstitutable"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-allowSubstitutable-_ownedComment.0",
                      "body": "Constrains the required relationship between an actual parameter and the parameteredElement for this formal parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-allowSubstitutable"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ClassifierTemplateParameter-allowSubstitutable-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ClassifierTemplateParameter-constrainingClassifier",
                    "name": "constrainingClassifier",
                    "type": "Classifier",
                    "association": "A_constrainingClassifier_classifierTemplateParameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-constrainingClassifier-_ownedComment.0",
                      "body": "The classifiers that constrain the argument that can be used for the parameter. If the allowSubstitutable attribute is true, then any Classifier that is compatible with this constraining Classifier can be substituted; otherwise, it must be either this Classifier or one of its specializations. If this property is empty, there are no constraints on the Classifier that can be used as an argument."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-constrainingClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ClassifierTemplateParameter-constrainingClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ClassifierTemplateParameter-constrainingClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ClassifierTemplateParameter-parameteredElement",
                    "name": "parameteredElement",
                    "type": "Classifier",
                    "association": "A_classifier_templateParameter_parameteredElement"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "TemplateParameter-parameteredElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClassifierTemplateParameter-parameteredElement-_ownedComment.0",
                      "body": "The Classifier exposed by this ClassifierTemplateParameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClassifierTemplateParameter-parameteredElement"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Feature",
                "name": "Feature",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Feature-_ownedComment.0",
                  "body": "A Feature declares a behavioral or structural characteristic of Classifiers."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Feature"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Feature-_generalization.0",
                  "general": "RedefinableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Feature-featuringClassifier",
                    "name": "featuringClassifier",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Classifier",
                    "association": "A_feature_featuringClassifier"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_member_memberNamespace-memberNamespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Feature-featuringClassifier-_ownedComment.0",
                      "body": "The Classifiers that have this Feature as a feature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Feature-featuringClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Feature-featuringClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Feature-isStatic",
                    "name": "isStatic"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Feature-isStatic-_ownedComment.0",
                      "body": "Specifies whether this Feature characterizes individual instances classified by the Classifier (false) or the Classifier itself (true)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Feature-isStatic"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Feature-isStatic-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Generalization",
                "name": "Generalization"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Generalization-_ownedComment.0",
                  "body": "A Generalization is a taxonomic relationship between a more general Classifier and a more specific Classifier. Each instance of the specific Classifier is also an instance of the general Classifier. The specific Classifier inherits the features of the more general Classifier. A Generalization is owned by the specific Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Generalization"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Generalization-_generalization.0",
                  "general": "DirectedRelationship"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Generalization-general",
                    "name": "general",
                    "type": "Classifier",
                    "association": "A_general_generalization"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "DirectedRelationship-target"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Generalization-general-_ownedComment.0",
                      "body": "The general classifier in the Generalization relationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Generalization-general"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Generalization-generalizationSet",
                    "name": "generalizationSet",
                    "type": "GeneralizationSet",
                    "association": "A_generalizationSet_generalization"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Generalization-generalizationSet-_ownedComment.0",
                      "body": "Represents a set of instances of Generalization.  A Generalization may appear in many GeneralizationSets."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Generalization-generalizationSet"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Generalization-generalizationSet-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Generalization-generalizationSet-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Generalization-isSubstitutable",
                    "name": "isSubstitutable"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Generalization-isSubstitutable-_ownedComment.0",
                      "body": "Indicates whether the specific Classifier can be used wherever the general Classifier can be used. If true, the execution traces of the specific Classifier shall be a superset of the execution traces of the general Classifier. If false, there is no such constraint on execution traces. If unset, the modeler has not stated whether there is such a constraint or not."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Generalization-isSubstitutable"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Generalization-isSubstitutable-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Generalization-isSubstitutable-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Generalization-specific",
                    "name": "specific",
                    "type": "Classifier",
                    "association": "A_generalization_specific"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "DirectedRelationship-source"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-owner"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Generalization-specific-_ownedComment.0",
                      "body": "The specializing Classifier in the Generalization relationship."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Generalization-specific"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "GeneralizationSet",
                "name": "GeneralizationSet"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "GeneralizationSet-_ownedComment.0",
                  "body": "A GeneralizationSet is a PackageableElement whose instances represent sets of Generalization relationships."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "GeneralizationSet"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "GeneralizationSet-generalization_same_classifier",
                    "name": "generalization_same_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "GeneralizationSet"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-generalization_same_classifier-_ownedComment.0",
                      "body": "Every Generalization associated with a particular GeneralizationSet must have the same general Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-generalization_same_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "GeneralizationSet-generalization_same_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "generalization->collect(general)->asSet()->size() <= 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "GeneralizationSet-maps_to_generalization_set",
                    "name": "maps_to_generalization_set"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "GeneralizationSet"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-maps_to_generalization_set-_ownedComment.0",
                      "body": "The Classifier that maps to a GeneralizationSet may neither be a specific nor a general Classifier in any of the Generalization relationships defined for that GeneralizationSet. In other words, a power type may not be an instance of itself nor may its instances be its subclasses."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-maps_to_generalization_set"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "GeneralizationSet-maps_to_generalization_set-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "powertype <> null implies generalization->forAll( gen | \n    not (gen.general = powertype) and not gen.general.allParents()->includes(powertype) and not (gen.specific = powertype) and not powertype.allParents()->includes(gen.specific)\n  )"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "GeneralizationSet-_generalization.0",
                  "general": "PackageableElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralizationSet-generalization",
                    "name": "generalization",
                    "type": "Generalization",
                    "association": "A_generalizationSet_generalization"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-generalization-_ownedComment.0",
                      "body": "Designates the instances of Generalization that are members of this GeneralizationSet."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-generalization"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "GeneralizationSet-generalization-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "GeneralizationSet-generalization-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralizationSet-isCovering",
                    "name": "isCovering"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-isCovering-_ownedComment.0",
                      "body": "Indicates (via the associated Generalizations) whether or not the set of specific Classifiers are covering for a particular general classifier. When isCovering is true, every instance of a particular general Classifier is also an instance of at least one of its specific Classifiers for the GeneralizationSet. When isCovering is false, there are one or more instances of the particular general Classifier that are not instances of at least one of its specific Classifiers defined for the GeneralizationSet."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-isCovering"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "GeneralizationSet-isCovering-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralizationSet-isDisjoint",
                    "name": "isDisjoint"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-isDisjoint-_ownedComment.0",
                      "body": "Indicates whether or not the set of specific Classifiers in a Generalization relationship have instance in common. If isDisjoint is true, the specific Classifiers for a particular GeneralizationSet have no members in common; that is, their intersection is empty. If isDisjoint is false, the specific Classifiers in a particular GeneralizationSet have one or more members in common; that is, their intersection is not empty."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-isDisjoint"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "GeneralizationSet-isDisjoint-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "GeneralizationSet-powertype",
                    "name": "powertype",
                    "type": "Classifier",
                    "association": "A_powertypeExtent_powertype"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "GeneralizationSet-powertype-_ownedComment.0",
                      "body": "Designates the Classifier that is defined as the power type for the associated GeneralizationSet, if there is one."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "GeneralizationSet-powertype"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "GeneralizationSet-powertype-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InstanceSpecification",
                "name": "InstanceSpecification"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InstanceSpecification-_ownedComment.0",
                  "body": "An InstanceSpecification is a model element that represents an instance in a modeled system. An InstanceSpecification can act as a DeploymentTarget in a Deployment relationship, in the case that it represents an instance of a Node. It can also act as a DeployedArtifact, if it represents an instance of an Artifact."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InstanceSpecification"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InstanceSpecification-deployment_artifact",
                    "name": "deployment_artifact"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InstanceSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-deployment_artifact-_ownedComment.0",
                      "body": "An InstanceSpecification can act as a DeployedArtifact if it represents an instance of an Artifact."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-deployment_artifact"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InstanceSpecification-deployment_artifact-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "deploymentForArtifact->notEmpty() implies classifier->exists(oclIsKindOf(Artifact))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InstanceSpecification-structural_feature",
                    "name": "structural_feature"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InstanceSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-structural_feature-_ownedComment.0",
                      "body": "No more than one slot in an InstanceSpecification may have the same definingFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-structural_feature"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InstanceSpecification-structural_feature-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "classifier->forAll(c | (c.allSlottableFeatures()->forAll(f | slot->select(s | s.definingFeature = f)->size() <= 1)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InstanceSpecification-defining_feature",
                    "name": "defining_feature"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InstanceSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-defining_feature-_ownedComment.0",
                      "body": "The definingFeature of each slot is a StructuralFeature related to a classifier of the InstanceSpecification, including direct attributes, inherited attributes, private attributes in generalizations, and memberEnds of Associations, but excluding redefined StructuralFeatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-defining_feature"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InstanceSpecification-defining_feature-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "slot->forAll(s | classifier->exists (c | c.allSlottableFeatures()->includes (s.definingFeature)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "InstanceSpecification-deployment_target",
                    "name": "deployment_target"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "InstanceSpecification"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-deployment_target-_ownedComment.0",
                      "body": "An InstanceSpecification can act as a DeploymentTarget if it represents an instance of a Node and functions as a part in the internal structure of an encompassing Node."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-deployment_target"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "InstanceSpecification-deployment_target-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "deployment->notEmpty() implies classifier->exists(node | node.oclIsKindOf(Node) and Node.allInstances()->exists(n | n.part->exists(p | p.type = node)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InstanceSpecification-_generalization.2",
                    "general": "DeploymentTarget"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InstanceSpecification-_generalization.0",
                    "general": "PackageableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "InstanceSpecification-_generalization.1",
                    "general": "DeployedArtifact"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InstanceSpecification-classifier",
                    "name": "classifier",
                    "type": "Classifier",
                    "association": "A_classifier_instanceSpecification"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-classifier-_ownedComment.0",
                      "body": "The Classifier or Classifiers of the represented instance. If multiple Classifiers are specified, the instance is classified by all of them."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InstanceSpecification-classifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InstanceSpecification-classifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InstanceSpecification-slot",
                    "name": "slot",
                    "aggregation": "composite",
                    "type": "Slot",
                    "association": "A_slot_owningInstance"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-slot-_ownedComment.0",
                      "body": "A Slot giving the value or values of a StructuralFeature of the instance. An InstanceSpecification can have one Slot per StructuralFeature of its Classifiers, including inherited features. It is not necessary to model a Slot for every StructuralFeature, in which case the InstanceSpecification is a partial description."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-slot"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InstanceSpecification-slot-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InstanceSpecification-slot-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InstanceSpecification-specification",
                    "name": "specification",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_specification_owningInstanceSpec"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InstanceSpecification-specification-_ownedComment.0",
                      "body": "A specification of how to compute, derive, or construct the instance."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InstanceSpecification-specification"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InstanceSpecification-specification-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InstanceValue",
                "name": "InstanceValue"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InstanceValue-_ownedComment.0",
                  "body": "An InstanceValue is a ValueSpecification that identifies an instance."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InstanceValue"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InstanceValue-_generalization.0",
                  "general": "ValueSpecification"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "InstanceValue-instance",
                  "name": "instance",
                  "type": "InstanceSpecification",
                  "association": "A_instance_instanceValue"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "InstanceValue-instance-_ownedComment.0",
                    "body": "The InstanceSpecification that represents the specified value."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "InstanceValue-instance"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Operation",
                "name": "Operation"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Operation-_ownedComment.0",
                  "body": "An Operation is a BehavioralFeature of a Classifier that specifies the name, type, parameters, and constraints for invoking an associated Behavior. An Operation may invoke both the execution of method behaviors as well as other behavioral responses. Operation specializes TemplateableElement in order to support specification of template operations and bound operations. Operation specializes ParameterableElement to specify that an operation can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Operation"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Operation-at_most_one_return",
                    "name": "at_most_one_return"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Operation"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-at_most_one_return-_ownedComment.0",
                      "body": "An Operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return.'"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-at_most_one_return"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Operation-at_most_one_return-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.ownedParameter->select(direction = ParameterDirectionKind::return)->size() <= 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Operation-only_body_for_query",
                    "name": "only_body_for_query"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Operation"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-only_body_for_query-_ownedComment.0",
                      "body": "A bodyCondition can only be specified for a query Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-only_body_for_query"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Operation-only_body_for_query-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "bodyCondition <> null implies isQuery"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Operation-_generalization.2",
                    "general": "TemplateableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Operation-_generalization.0",
                    "general": "ParameterableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Operation-_generalization.1",
                    "general": "BehavioralFeature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-bodyCondition",
                    "name": "bodyCondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_bodyCondition_bodyContext"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-bodyCondition-_ownedComment.0",
                      "body": "An optional Constraint on the result values of an invocation of this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-bodyCondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-bodyCondition-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-class",
                    "name": "class",
                    "type": "Class",
                    "association": "A_ownedOperation_class"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Feature-featuringClassifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-class-_ownedComment.0",
                      "body": "The Class that owns this operation, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-class"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-class-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-datatype",
                    "name": "datatype",
                    "type": "DataType",
                    "association": "A_ownedOperation_datatype"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Feature-featuringClassifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-datatype-_ownedComment.0",
                      "body": "The DataType that owns this Operation, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-datatype"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-datatype-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-interface",
                    "name": "interface",
                    "type": "Interface",
                    "association": "A_ownedOperation_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Feature-featuringClassifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-interface-_ownedComment.0",
                      "body": "The Interface that owns this Operation, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-interface"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-interface-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-isOrdered",
                    "name": "isOrdered",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isOrdered-_ownedComment.0",
                      "body": "Specifies whether the return parameter is ordered or not, if present.  This information is derived from the return result for this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isOrdered"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-isQuery",
                    "name": "isQuery"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isQuery-_ownedComment.0",
                      "body": "Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isQuery"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Operation-isQuery-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-isUnique",
                    "name": "isUnique",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isUnique-_ownedComment.0",
                      "body": "Specifies whether the return parameter is unique or not, if present. This information is derived from the return result for this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isUnique"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-lower",
                    "name": "lower",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-lower-_ownedComment.0",
                      "body": "Specifies the lower multiplicity of the return parameter, if present. This information is derived from the return result for this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-lower"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-lower-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-ownedParameter",
                    "name": "ownedParameter",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Parameter",
                    "association": "A_ownedParameter_operation"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "BehavioralFeature-ownedParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-ownedParameter-_ownedComment.0",
                      "body": "The parameters owned by this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-ownedParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-ownedParameter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Operation-ownedParameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-postcondition",
                    "name": "postcondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_postcondition_postContext"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-postcondition-_ownedComment.0",
                      "body": "An optional set of Constraints specifying the state of the system when the Operation is completed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-postcondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-postcondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Operation-postcondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-precondition",
                    "name": "precondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_precondition_preContext"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedRule"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-precondition-_ownedComment.0",
                      "body": "An optional set of Constraints on the state of the system when the Operation is invoked."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-precondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-precondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Operation-precondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-raisedException",
                    "name": "raisedException",
                    "type": "Type",
                    "association": "A_raisedException_operation"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "BehavioralFeature-raisedException"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-raisedException-_ownedComment.0",
                      "body": "The Types representing exceptions that may be raised during an invocation of this operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-raisedException"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-raisedException-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Operation-raisedException-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-redefinedOperation",
                    "name": "redefinedOperation",
                    "type": "Operation",
                    "association": "A_redefinedOperation_operation"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-redefinedOperation-_ownedComment.0",
                      "body": "The Operations that are redefined by this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-redefinedOperation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-redefinedOperation-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Operation-redefinedOperation-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-templateParameter",
                    "name": "templateParameter",
                    "type": "OperationTemplateParameter",
                    "association": "A_operation_templateParameter_parameteredElement"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "ParameterableElement-templateParameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-templateParameter-_ownedComment.0",
                      "body": "The OperationTemplateParameter that exposes this element as a formal parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-templateParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-templateParameter-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-type",
                    "name": "type",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Type",
                    "association": "A_type_operation"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-type-_ownedComment.0",
                      "body": "The return type of the operation, if present. This information is derived from the return result for this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-type"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-type-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Operation-upper",
                    "name": "upper",
                    "isReadOnly": true,
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-upper-_ownedComment.0",
                      "body": "The upper multiplicity of the return parameter, if present. This information is derived from the return result for this Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-upper"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Operation-upper-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "Operation-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Operation-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith() specifies, for any two Operations in a context in which redefinition is possible, whether redefinition would be consistent. A redefining operation is consistent with a redefined operation if\r\nit has the same number of owned parameters, and for each parameter the following holds:\r\n\r\n- Direction, ordering and uniqueness are the same.\r\n- The corresponding types are covariant, contravariant or invariant.\r\n- The multiplicities are compatible, depending on the parameter direction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Operation-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Operation-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Operation-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefiningElement.oclIsKindOf(Operation) and\nlet op : Operation = redefiningElement.oclAsType(Operation) in\n\tself.ownedParameter->size() = op.ownedParameter->size() and\n\tSequence{1..self.ownedParameter->size()}->\n\t\tforAll(i |  \n\t\t  let redefiningParam : Parameter = op.ownedParameter->at(i),\n               redefinedParam : Parameter = self.ownedParameter->at(i) in\n                 (redefiningParam.isUnique = redefinedParam.isUnique) and\n                 (redefiningParam.isOrdered = redefinedParam. isOrdered) and\n                 (redefiningParam.direction = redefinedParam.direction) and\n                 (redefiningParam.type.conformsTo(redefinedParam.type) or\n                     redefinedParam.type.conformsTo(redefiningParam.type)) and\n                 (redefiningParam.direction = ParameterDirectionKind::inout implies\n                         (redefinedParam.compatibleWith(redefiningParam) and\n                         redefiningParam.compatibleWith(redefinedParam))) and\n                 (redefiningParam.direction = ParameterDirectionKind::_'in' implies\n                         redefinedParam.compatibleWith(redefiningParam)) and\n                 ((redefiningParam.direction = ParameterDirectionKind::out or\n                      redefiningParam.direction = ParameterDirectionKind::return) implies\n                         redefiningParam.compatibleWith(redefinedParam))\n\t\t))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Operation-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Operation-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Operation-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Operation-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Operation-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-isOrdered.1",
                    "name": "isOrdered",
                    "isQuery": true,
                    "bodyCondition": "Operation-isOrdered.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isOrdered.1-_ownedComment.0",
                      "body": "If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter. Otherwise isOrdered is false."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isOrdered.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-isOrdered.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-isOrdered.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-isOrdered"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-isOrdered.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if returnResult()->notEmpty() then returnResult()-> exists(isOrdered) else false endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-isOrdered.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-isUnique.1",
                    "name": "isUnique",
                    "isQuery": true,
                    "bodyCondition": "Operation-isUnique.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-isUnique.1-_ownedComment.0",
                      "body": "If this operation has a return parameter, isUnique equals the value of isUnique for that parameter. Otherwise isUnique is true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-isUnique.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-isUnique.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-isUnique.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-isUnique"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-isUnique.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if returnResult()->notEmpty() then returnResult()->exists(isUnique) else true endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-isUnique.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-lower.1",
                    "name": "lower",
                    "isQuery": true,
                    "bodyCondition": "Operation-lower.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-lower.1-_ownedComment.0",
                      "body": "If this operation has a return parameter, lower equals the value of lower for that parameter. Otherwise lower has no value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-lower.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-lower.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-lower.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-lower"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-lower.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if returnResult()->notEmpty() then returnResult()->any(true).lower else null endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-lower.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Integer"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-returnResult",
                    "name": "returnResult",
                    "isQuery": true,
                    "bodyCondition": "Operation-returnResult-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-returnResult-_ownedComment.0",
                      "body": "The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-returnResult"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-returnResult-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-returnResult"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-returnResult-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (ownedParameter->select (direction = ParameterDirectionKind::return))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-returnResult-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Operation-returnResult-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Operation-returnResult-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-type.1",
                    "name": "type",
                    "isQuery": true,
                    "bodyCondition": "Operation-type.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-type.1-_ownedComment.0",
                      "body": "If this operation has a return parameter, type equals the value of type for that parameter. Otherwise type has no value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-type.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-type.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-type.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-type"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-type.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if returnResult()->notEmpty() then returnResult()->any(true).type else null endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-type.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Type"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Operation-upper.1",
                    "name": "upper",
                    "isQuery": true,
                    "bodyCondition": "Operation-upper.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Operation-upper.1-_ownedComment.0",
                      "body": "If this operation has a return parameter, upper equals the value of upper for that parameter. Otherwise upper has no value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Operation-upper.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Operation-upper.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-upper.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Operation-upper"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Operation-upper.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if returnResult()->notEmpty() then returnResult()->any(true).upper else null endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Operation-upper.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#UnlimitedNatural"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OperationTemplateParameter",
                "name": "OperationTemplateParameter"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OperationTemplateParameter-_ownedComment.0",
                  "body": "An OperationTemplateParameter exposes an Operation as a formal parameter for a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OperationTemplateParameter"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "OperationTemplateParameter-match_default_signature",
                  "name": "match_default_signature"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "OperationTemplateParameter"
                  },
                  "_parent": "_"
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "OperationTemplateParameter-match_default_signature-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "default->notEmpty() implies (default.oclIsKindOf(Operation) and (let defaultOp : Operation = default.oclAsType(Operation) in \n    defaultOp.ownedParameter->size() = parameteredElement.ownedParameter->size() and\n    Sequence{1.. defaultOp.ownedParameter->size()}->forAll( ix | \n        let p1: Parameter = defaultOp.ownedParameter->at(ix), p2 : Parameter = parameteredElement.ownedParameter->at(ix) in\n          p1.type = p2.type and p1.upper = p2.upper and p1.lower = p2.lower and p1.direction = p2.direction and p1.isOrdered = p2.isOrdered and p1.isUnique = p2.isUnique)))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OperationTemplateParameter-match_default_signature-_specification-_ownedComment.0",
                      "body": "A default for an OperationTemplateParameter must be an Operation with the same Parameter types, directions and multiplicities as the exposed Operation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OperationTemplateParameter-match_default_signature-_specification"
                      },
                      "_parent": "_"
                    }
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OperationTemplateParameter-_generalization.0",
                  "general": "TemplateParameter"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "OperationTemplateParameter-parameteredElement",
                  "name": "parameteredElement",
                  "type": "Operation",
                  "association": "A_operation_templateParameter_parameteredElement"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "TemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "OperationTemplateParameter-parameteredElement-_ownedComment.0",
                    "body": "The Operation exposed by this OperationTemplateParameter."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "OperationTemplateParameter-parameteredElement"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Parameter",
                "name": "Parameter"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Parameter-_ownedComment.0",
                  "body": "A Parameter is a specification of an argument used to pass information into or out of an invocation of a BehavioralFeature.  Parameters can be treated as ConnectableElements within Collaborations."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Parameter"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-in_and_out",
                    "name": "in_and_out"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-in_and_out-_ownedComment.0",
                      "body": "Only in and inout Parameters may have a delete effect. Only out, inout, and return Parameters may have a create effect."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-in_and_out"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-in_and_out-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(effect = ParameterEffectKind::delete implies (direction = ParameterDirectionKind::_'in' or direction = ParameterDirectionKind::inout))\nand\n(effect = ParameterEffectKind::create implies (direction = ParameterDirectionKind::out or direction = ParameterDirectionKind::inout or direction = ParameterDirectionKind::return))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-not_exception",
                    "name": "not_exception"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-not_exception-_ownedComment.0",
                      "body": "An input Parameter cannot be an exception."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-not_exception"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-not_exception-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isException implies (direction <> ParameterDirectionKind::_'in' and direction <> ParameterDirectionKind::inout)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-connector_end",
                    "name": "connector_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-connector_end-_ownedComment.0",
                      "body": "A Parameter may only be associated with a Connector end within the context of a Collaboration."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-connector_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-connector_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end->notEmpty() implies collaboration->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-reentrant_behaviors",
                    "name": "reentrant_behaviors"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-reentrant_behaviors-_ownedComment.0",
                      "body": "Reentrant behaviors cannot have stream Parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-reentrant_behaviors"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-reentrant_behaviors-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(isStream and behavior <> null) implies not behavior.isReentrant"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-stream_and_exception",
                    "name": "stream_and_exception"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-stream_and_exception-_ownedComment.0",
                      "body": "A Parameter cannot be a stream and exception at the same time."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-stream_and_exception"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-stream_and_exception-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not (isException and isStream)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-object_effect",
                    "name": "object_effect"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-object_effect-_ownedComment.0",
                      "body": "Parameters typed by DataTypes cannot have an effect."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-object_effect"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-object_effect-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(type.oclIsKindOf(DataType)) implies (effect = null)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Parameter-_generalization.0",
                    "general": "MultiplicityElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Parameter-_generalization.1",
                    "general": "ConnectableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-default",
                    "name": "default",
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-default-_ownedComment.0",
                      "body": "A String that represents a value to be used when no argument is supplied for the Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-default"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-default-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-defaultValue",
                    "name": "defaultValue",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_defaultValue_owningParameter"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-defaultValue-_ownedComment.0",
                      "body": "Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-defaultValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-defaultValue-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-direction",
                    "name": "direction",
                    "type": "ParameterDirectionKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-direction-_ownedComment.0",
                      "body": "Indicates whether a parameter is being sent into or out of a behavioral element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-direction"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "Parameter-direction-_defaultValue",
                      "type": "ParameterDirectionKind",
                      "instance": "ParameterDirectionKind-in"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-effect",
                    "name": "effect",
                    "type": "ParameterEffectKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-effect-_ownedComment.0",
                      "body": "Specifies the effect that executions of the owner of the Parameter have on objects passed in or out of the parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-effect"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-effect-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-isException",
                    "name": "isException"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-isException-_ownedComment.0",
                      "body": "Tells whether an output parameter may emit a value to the exclusion of the other outputs."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-isException"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Parameter-isException-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-isStream",
                    "name": "isStream"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-isStream-_ownedComment.0",
                      "body": "Tells whether an input parameter may accept values while its behavior is executing, or whether an output parameter may post values while the behavior is executing."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-isStream"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Parameter-isStream-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-operation",
                    "name": "operation",
                    "type": "Operation",
                    "association": "A_ownedParameter_operation"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_ownedParameter_ownerFormalParam-ownerFormalParam"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-operation-_ownedComment.0",
                      "body": "The Operation owning this parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-operation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-operation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Parameter-parameterSet",
                    "name": "parameterSet",
                    "type": "ParameterSet",
                    "association": "A_parameterSet_parameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Parameter-parameterSet-_ownedComment.0",
                      "body": "The ParameterSets containing the parameter. See ParameterSet."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Parameter-parameterSet"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-parameterSet-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Parameter-parameterSet-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "Parameter-default.1",
                  "name": "default",
                  "isQuery": true,
                  "bodyCondition": "Parameter-default.1-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Parameter-default.1-_ownedComment.0",
                    "body": "Derivation for Parameter::/default"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Parameter-default.1"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Parameter-default.1-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": [
                    {
                      "_attributes": {
                        "xmi:idref": "Parameter-default.1"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Parameter-default"
                      },
                      "_parent": "_"
                    }
                  ],
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Parameter-default.1-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (if self.type = String then defaultValue.stringValue() else null endif)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "Parameter-default.1-result",
                    "name": "result",
                    "direction": "return"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Parameter-default.1-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ParameterSet",
                "name": "ParameterSet"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ParameterSet-_ownedComment.0",
                  "body": "A ParameterSet designates alternative sets of inputs or outputs that a Behavior may use."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ParameterSet"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ParameterSet-same_parameterized_entity",
                    "name": "same_parameterized_entity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ParameterSet"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterSet-same_parameterized_entity-_ownedComment.0",
                      "body": "The Parameters in a ParameterSet must all be inputs or all be outputs of the same parameterized entity, and the ParameterSet is owned by that entity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterSet-same_parameterized_entity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ParameterSet-same_parameterized_entity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parameter->forAll(p1, p2 | self.owner = p1.owner and self.owner = p2.owner and p1.direction = p2.direction)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ParameterSet-input",
                    "name": "input"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ParameterSet"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterSet-input-_ownedComment.0",
                      "body": "If a parameterized entity has input Parameters that are in a ParameterSet, then any inputs that are not in a ParameterSet must be streaming. Same for output Parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterSet-input"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ParameterSet-input-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "((parameter->exists(direction = ParameterDirectionKind::_'in')) implies \n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::_'in' and p.parameterSet->isEmpty())->forAll(isStream))\n    and\n((parameter->exists(direction = ParameterDirectionKind::out)) implies \n    behavioralFeature.ownedParameter->select(p | p.direction = ParameterDirectionKind::out and p.parameterSet->isEmpty())->forAll(isStream))  \n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ParameterSet-two_parameter_sets",
                    "name": "two_parameter_sets"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ParameterSet"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterSet-two_parameter_sets-_ownedComment.0",
                      "body": "Two ParameterSets cannot have exactly the same set of Parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterSet-two_parameter_sets"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ParameterSet-two_parameter_sets-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "parameter->forAll(parameterSet->forAll(s1, s2 | s1->size() = s2->size() implies s1.parameter->exists(p | not s2.parameter->includes(p))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ParameterSet-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ParameterSet-condition",
                    "name": "condition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_condition_parameterSet"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterSet-condition-_ownedComment.0",
                      "body": "A constraint that should be satisfied for the owner of the Parameters in an input ParameterSet to start execution using the values provided for those Parameters, or the owner of the Parameters in an output ParameterSet to end execution providing the values for those Parameters, if all preconditions and conditions on input ParameterSets were satisfied."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterSet-condition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ParameterSet-condition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ParameterSet-condition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ParameterSet-parameter",
                    "name": "parameter",
                    "type": "Parameter",
                    "association": "A_parameterSet_parameter"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterSet-parameter-_ownedComment.0",
                      "body": "Parameters in the ParameterSet."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterSet-parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ParameterSet-parameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Property",
                "name": "Property"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Property-_ownedComment.0",
                  "body": "A Property is a StructuralFeature. A Property related by ownedAttribute to a Classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the Classifier to a value or set of values of the type of the attribute. A Property related by memberEnd to an Association represents an end of the Association. The type of the Property is the type of the end of the Association. A Property has the capability of being a DeploymentTarget in a Deployment relationship. This enables modeling the deployment to hierarchical nodes that have Properties functioning as internal parts.  Property specializes ParameterableElement to specify that a Property can be exposed as a formal template parameter, and provided as an actual parameter in a binding of a template."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Property"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-subsetting_context_conforms",
                    "name": "subsetting_context_conforms"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-subsetting_context_conforms-_ownedComment.0",
                      "body": "Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsetting_context_conforms"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-subsetting_context_conforms-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "subsettedProperty->notEmpty() implies\n  (subsettingContext()->notEmpty() and subsettingContext()->forAll (sc |\n    subsettedProperty->forAll(sp |\n      sp.subsettingContext()->exists(c | sc.conformsTo(c)))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-derived_union_is_read_only",
                    "name": "derived_union_is_read_only"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-derived_union_is_read_only-_ownedComment.0",
                      "body": "A derived union is read only."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-derived_union_is_read_only"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-derived_union_is_read_only-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isDerivedUnion implies isReadOnly"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-multiplicity_of_composite",
                    "name": "multiplicity_of_composite"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-multiplicity_of_composite-_ownedComment.0",
                      "body": "A multiplicity on the composing end of a composite aggregation must not have an upper bound greater than 1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-multiplicity_of_composite"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-multiplicity_of_composite-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isComposite and association <> null implies opposite.upperBound() <= 1\n\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-redefined_property_inherited",
                    "name": "redefined_property_inherited"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-redefined_property_inherited-_ownedComment.0",
                      "body": "A redefined Property must be inherited from a more general Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-redefined_property_inherited"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-redefined_property_inherited-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(redefinedProperty->notEmpty()) implies\n  (redefinitionContext->notEmpty() and\n      redefinedProperty->forAll(rp|\n        ((redefinitionContext->collect(fc|\n          fc.allParents()))->asSet())->collect(c| c.allFeatures())->asSet()->includes(rp)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-subsetting_rules",
                    "name": "subsetting_rules"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-subsetting_rules-_ownedComment.0",
                      "body": "A subsetting Property may strengthen the type of the subsetted Property, and its upper bound may be less."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsetting_rules"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-subsetting_rules-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "subsettedProperty->forAll(sp |\n  self.type.conformsTo(sp.type) and\n    ((self.upperBound()->notEmpty() and sp.upperBound()->notEmpty()) implies\n      self.upperBound() <= sp.upperBound() ))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-binding_to_attribute",
                    "name": "binding_to_attribute"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-binding_to_attribute-_ownedComment.0",
                      "body": "A binding of a PropertyTemplateParameter representing an attribute must be to an attribute."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-binding_to_attribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-binding_to_attribute-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(self.isAttribute()\nand (templateParameterSubstitution->notEmpty())\nimplies (templateParameterSubstitution->forAll(ts |\n    ts.formal.oclIsKindOf(Property)\n    and ts.formal.oclAsType(Property).isAttribute())))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-derived_union_is_derived",
                    "name": "derived_union_is_derived"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-derived_union_is_derived-_ownedComment.0",
                      "body": "A derived union is derived."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-derived_union_is_derived"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-derived_union_is_derived-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isDerivedUnion implies isDerived"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-deployment_target",
                    "name": "deployment_target"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-deployment_target-_ownedComment.0",
                      "body": "A Property can be a DeploymentTarget if it is a kind of Node and functions as a part in the internal structure of an encompassing Node."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-deployment_target"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-deployment_target-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "deployment->notEmpty() implies owner.oclIsKindOf(Node) and Node.allInstances()->exists(n | n.part->exists(p | p = self))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-subsetted_property_names",
                    "name": "subsetted_property_names"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-subsetted_property_names-_ownedComment.0",
                      "body": "A Property may not subset a Property with the same name."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsetted_property_names"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-subsetted_property_names-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "subsettedProperty->forAll(sp | sp.name <> name)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-type_of_opposite_end",
                    "name": "type_of_opposite_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-type_of_opposite_end-_ownedComment.0",
                      "body": "If a Property is a classifier-owned end of a binary Association, its owner must be the type of the opposite end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-type_of_opposite_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-type_of_opposite_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(opposite->notEmpty() and owningAssociation->isEmpty()) implies classifier = opposite.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Property-qualified_is_association_end",
                    "name": "qualified_is_association_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Property"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-qualified_is_association_end-_ownedComment.0",
                      "body": "All qualified Properties must be Association ends"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-qualified_is_association_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Property-qualified_is_association_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "qualifier->notEmpty() implies association->notEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Property-_generalization.0",
                    "general": "ConnectableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Property-_generalization.2",
                    "general": "DeploymentTarget"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Property-_generalization.1",
                    "general": "StructuralFeature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-aggregation",
                    "name": "aggregation",
                    "type": "AggregationKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-aggregation-_ownedComment.0",
                      "body": "Specifies the kind of aggregation that applies to the Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-aggregation"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "Property-aggregation-_defaultValue",
                      "type": "AggregationKind",
                      "instance": "AggregationKind-none"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-association",
                    "name": "association",
                    "type": "Association",
                    "association": "A_memberEnd_association"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "A_member_memberNamespace-memberNamespace"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-association-_ownedComment.0",
                      "body": "The Association of which this Property is a member, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-association"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-association-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-associationEnd",
                    "name": "associationEnd",
                    "type": "Property",
                    "association": "A_qualifier_associationEnd"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-associationEnd-_ownedComment.0",
                      "body": "Designates the optional association end that owns a qualifier attribute."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-associationEnd"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-associationEnd-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-class",
                    "name": "class",
                    "type": "Class",
                    "association": "A_ownedAttribute_class"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_attribute_classifier-classifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "A_ownedAttribute_structuredClassifier-structuredClassifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-class-_ownedComment.0",
                      "body": "The Class that owns this Property, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-class"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-class-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-datatype",
                    "name": "datatype",
                    "type": "DataType",
                    "association": "A_ownedAttribute_datatype"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_attribute_classifier-classifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-datatype-_ownedComment.0",
                      "body": "The DataType that owns this Property, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-datatype"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-datatype-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-defaultValue",
                    "name": "defaultValue",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_defaultValue_owningProperty"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-defaultValue-_ownedComment.0",
                      "body": "A ValueSpecification that is evaluated to give a default value for the Property when an instance of the owning Classifier is instantiated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-defaultValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-defaultValue-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-interface",
                    "name": "interface",
                    "type": "Interface",
                    "association": "A_ownedAttribute_interface"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "A_attribute_classifier-classifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-interface-_ownedComment.0",
                      "body": "The Interface that owns this Property, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-interface"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-interface-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-isComposite",
                    "name": "isComposite",
                    "isDerived": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isComposite-_ownedComment.0",
                      "body": "If isComposite is true, the object containing the attribute is a container for the object or value contained in the attribute. This is a derived value, indicating whether the aggregation of the Property is composite or not."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isComposite"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Property-isComposite-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-isDerived",
                    "name": "isDerived"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isDerived-_ownedComment.0",
                      "body": "Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isDerived"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Property-isDerived-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-isDerivedUnion",
                    "name": "isDerivedUnion"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isDerivedUnion-_ownedComment.0",
                      "body": "Specifies whether the property is derived as the union of all of the Properties that are constrained to subset it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isDerivedUnion"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Property-isDerivedUnion-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-isID",
                    "name": "isID"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isID-_ownedComment.0",
                      "body": "True indicates this property can be used to uniquely identify an instance of the containing Class."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isID"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Property-isID-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-opposite",
                    "name": "opposite",
                    "isDerived": true,
                    "type": "Property",
                    "association": "A_opposite_property"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-opposite-_ownedComment.0",
                      "body": "In the case where the Property is one end of a binary association this gives the other end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-opposite"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-opposite-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-owningAssociation",
                    "name": "owningAssociation",
                    "type": "Association",
                    "association": "A_ownedEnd_owningAssociation"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "Feature-featuringClassifier"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "NamedElement-namespace"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Property-association"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-owningAssociation-_ownedComment.0",
                      "body": "The owning association of this property, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-owningAssociation"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-owningAssociation-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-qualifier",
                    "name": "qualifier",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "Property",
                    "association": "A_qualifier_associationEnd"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-qualifier-_ownedComment.0",
                      "body": "An optional list of ordered qualifier attributes for the end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-qualifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-qualifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Property-qualifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-redefinedProperty",
                    "name": "redefinedProperty",
                    "type": "Property",
                    "association": "A_redefinedProperty_property"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-redefinedProperty-_ownedComment.0",
                      "body": "The properties that are redefined by this property, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-redefinedProperty"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-redefinedProperty-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Property-redefinedProperty-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Property-subsettedProperty",
                    "name": "subsettedProperty",
                    "type": "Property",
                    "association": "A_subsettedProperty_property"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-subsettedProperty-_ownedComment.0",
                      "body": "The properties of which this Property is constrained to be a subset, if any."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsettedProperty"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Property-subsettedProperty-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Property-subsettedProperty-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-isAttribute",
                    "name": "isAttribute",
                    "isQuery": true,
                    "bodyCondition": "Property-isAttribute-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isAttribute-_ownedComment.0",
                      "body": "The query isAttribute() is true if the Property is defined as an attribute of some Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isAttribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-isAttribute-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isAttribute"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-isAttribute-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (not classifier->isEmpty())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Property-isAttribute-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-isCompatibleWith",
                    "name": "isCompatibleWith",
                    "isQuery": true,
                    "bodyCondition": "Property-isCompatibleWith-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "ParameterableElement-isCompatibleWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isCompatibleWith-_ownedComment.0",
                      "body": "The query isCompatibleWith() determines if this Property is compatible with the specified ParameterableElement. This Property is compatible with ParameterableElement p if the kind of this Property is thesame as or a subtype of the kind of p. Further, if p is a TypedElement, then the type of this Property must be conformant with the type of p."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isCompatibleWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-isCompatibleWith-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isCompatibleWith"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-isCompatibleWith-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.oclIsKindOf(p.oclType()) and (p.oclIsKindOf(TypeElement) implies\nself.type.conformsTo(p.oclAsType(TypedElement).type)))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Property-isCompatibleWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Property-isCompatibleWith-p",
                        "name": "p",
                        "type": "ParameterableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-isComposite.1",
                    "name": "isComposite",
                    "isQuery": true,
                    "bodyCondition": "Property-isComposite.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isComposite.1-_ownedComment.0",
                      "body": "The value of isComposite is true only if aggregation is composite."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isComposite.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-isComposite.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Property-isComposite.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Property-isComposite"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-isComposite.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (aggregation = AggregationKind::composite)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Property-isComposite.1-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "Property-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "Property-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith() specifies, for any two Properties in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining Property is consistent with a redefined Property if the type of the redefining Property conforms to the type of the redefined Property, and the multiplicity of the redefining Property (if specified) is contained in the multiplicity of the redefined Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Property-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Property-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Property-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "Property-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "Property-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "Property-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefiningElement.oclIsKindOf(Property) and \n  let prop : Property = redefiningElement.oclAsType(Property) in \n  (prop.type.conformsTo(self.type) and \n  ((prop.lowerBound()->notEmpty() and self.lowerBound()->notEmpty()) implies prop.lowerBound() >= self.lowerBound()) and \n  ((prop.upperBound()->notEmpty() and self.upperBound()->notEmpty()) implies prop.lowerBound() <= self.lowerBound()) and \n  (self.isComposite implies prop.isComposite)))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Property-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "Property-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-isNavigable",
                    "name": "isNavigable",
                    "isQuery": true,
                    "bodyCondition": "Property-isNavigable-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-isNavigable-_ownedComment.0",
                      "body": "The query isNavigable() indicates whether it is possible to navigate across the property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isNavigable"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-isNavigable-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-isNavigable"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-isNavigable-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (not classifier->isEmpty() or association.navigableOwnedEnd->includes(self))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Property-isNavigable-result",
                      "name": "result",
                      "direction": "return"
                    },
                    "_parent": "_",
                    "type": {
                      "_attributes": {
                        "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-opposite.1",
                    "name": "opposite",
                    "isQuery": true,
                    "bodyCondition": "Property-opposite.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-opposite.1-_ownedComment.0",
                      "body": "If this property is a memberEnd of a binary association, then opposite gives the other end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-opposite.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-opposite.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Property-opposite.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Property-opposite"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-opposite.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if association <> null and association.memberEnd->size() = 2\nthen\n    association.memberEnd->any(e | e <> self)\nelse\n    null\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Property-opposite.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Property"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Property-subsettingContext",
                    "name": "subsettingContext",
                    "isQuery": true,
                    "bodyCondition": "Property-subsettingContext-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Property-subsettingContext-_ownedComment.0",
                      "body": "The query subsettingContext() gives the context for subsetting a Property. It consists, in the case of an attribute, of the corresponding Classifier, and in the case of an association end, all of the Classifiers at the other ends."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsettingContext"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Property-subsettingContext-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Property-subsettingContext"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Property-subsettingContext-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if association <> null\nthen association.memberEnd->excluding(self)->collect(type)->asSet()\nelse \n  if classifier<>null\n  then classifier->asSet()\n  else Set{} \n  endif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Property-subsettingContext-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Type"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Property-subsettingContext-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Property-subsettingContext-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "RedefinableElement",
                "name": "RedefinableElement",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "RedefinableElement-_ownedComment.0",
                  "body": "A RedefinableElement is an element that, when defined in the context of a Classifier, can be redefined more specifically or differently in the context of another Classifier that specializes (directly or indirectly) the context Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "RedefinableElement-redefinition_consistent",
                    "name": "redefinition_consistent"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-redefinition_consistent-_ownedComment.0",
                      "body": "A redefining element must be consistent with each redefined element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinition_consistent"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "RedefinableElement-redefinition_consistent-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "redefinedElement->forAll(re | re.isConsistentWith(self))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "RedefinableElement-non_leaf_redefinition",
                    "name": "non_leaf_redefinition"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-non_leaf_redefinition-_ownedComment.0",
                      "body": "A RedefinableElement can only redefine non-leaf RedefinableElements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-non_leaf_redefinition"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "RedefinableElement-non_leaf_redefinition-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "redefinedElement->forAll(re | not re.isLeaf)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "RedefinableElement-redefinition_context_valid",
                    "name": "redefinition_context_valid"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-redefinition_context_valid-_ownedComment.0",
                      "body": "At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinition_context_valid"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "RedefinableElement-redefinition_context_valid-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "redefinedElement->forAll(re | self.isRedefinitionContextValid(re))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "RedefinableElement-_generalization.0",
                  "general": "NamedElement"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableElement-isLeaf",
                    "name": "isLeaf"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-isLeaf-_ownedComment.0",
                      "body": "Indicates whether it is possible to further redefine a RedefinableElement. If the value is true, then it is not possible to further redefine the RedefinableElement."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-isLeaf"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "RedefinableElement-isLeaf-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableElement-redefinedElement",
                    "name": "redefinedElement",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "RedefinableElement",
                    "association": "A_redefinedElement_redefinableElement"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-redefinedElement-_ownedComment.0",
                      "body": "The RedefinableElement that is being redefined by this element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinedElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RedefinableElement-redefinedElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "RedefinableElement-redefinedElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableElement-redefinitionContext",
                    "name": "redefinitionContext",
                    "isReadOnly": true,
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "Classifier",
                    "association": "A_redefinitionContext_redefinableElement"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-redefinitionContext-_ownedComment.0",
                      "body": "The contexts that this element may be redefined from."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-redefinitionContext"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RedefinableElement-redefinitionContext-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "RedefinableElement-redefinitionContext-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "RedefinableElement-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "RedefinableElement-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "RedefinableElement-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "RedefinableElement-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "RedefinableElement-isConsistentWith-spec-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (false)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "RedefinableElement-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "RedefinableElement-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "RedefinableElement-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableElement-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableElement-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "RedefinableElement-isRedefinitionContextValid",
                    "name": "isRedefinitionContextValid",
                    "isQuery": true,
                    "bodyCondition": "RedefinableElement-isRedefinitionContextValid-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableElement-isRedefinitionContextValid-_ownedComment.0",
                      "body": "The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "RedefinableElement-isRedefinitionContextValid-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableElement-isRedefinitionContextValid"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "RedefinableElement-isRedefinitionContextValid-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (redefinitionContext->exists(c | c.allParents()->includesAll(redefinedElement.redefinitionContext)))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableElement-isRedefinitionContextValid-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableElement-isRedefinitionContextValid-redefinedElement",
                        "name": "redefinedElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "RedefinableTemplateSignature",
                "name": "RedefinableTemplateSignature"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "RedefinableTemplateSignature-_ownedComment.0",
                  "body": "A RedefinableTemplateSignature supports the addition of formal template parameters in a specialization of a template classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "RedefinableTemplateSignature"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "RedefinableTemplateSignature-redefines_parents",
                  "name": "redefines_parents"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "RedefinableTemplateSignature"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "RedefinableTemplateSignature-redefines_parents-_ownedComment.0",
                    "body": "If any of the parent Classifiers are a template, then the extendedSignature must include the signature of that Classifier."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "RedefinableTemplateSignature-redefines_parents"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "RedefinableTemplateSignature-redefines_parents-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "classifier.allParents()->forAll(c | c.ownedTemplateSignature->notEmpty() implies self->closure(extendedSignature)->includes(c.ownedTemplateSignature))"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "RedefinableTemplateSignature-_generalization.0",
                    "general": "RedefinableElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "RedefinableTemplateSignature-_generalization.1",
                    "general": "TemplateSignature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableTemplateSignature-classifier",
                    "name": "classifier",
                    "type": "Classifier",
                    "association": "A_ownedTemplateSignature_classifier"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "TemplateSignature-template"
                    },
                    "_parent": "_"
                  },
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableTemplateSignature-classifier-_ownedComment.0",
                      "body": "The Classifier that owns this RedefinableTemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableTemplateSignature-classifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableTemplateSignature-extendedSignature",
                    "name": "extendedSignature",
                    "type": "RedefinableTemplateSignature",
                    "association": "A_extendedSignature_redefinableTemplateSignature"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableTemplateSignature-extendedSignature-_ownedComment.0",
                      "body": "The signatures extended by this RedefinableTemplateSignature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableTemplateSignature-extendedSignature"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RedefinableTemplateSignature-extendedSignature-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "RedefinableTemplateSignature-extendedSignature-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RedefinableTemplateSignature-inheritedParameter",
                    "name": "inheritedParameter",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "TemplateParameter",
                    "association": "A_inheritedParameter_redefinableTemplateSignature"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "TemplateSignature-parameter"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter-_ownedComment.0",
                      "body": "The formal template parameters of the extended signatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableTemplateSignature-inheritedParameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1",
                    "name": "inheritedParameter",
                    "isQuery": true,
                    "bodyCondition": "RedefinableTemplateSignature-inheritedParameter.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-_ownedComment.0",
                      "body": "Derivation for RedefinableTemplateSignature::/inheritedParameter"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableTemplateSignature-inheritedParameter.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "RedefinableTemplateSignature-inheritedParameter.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "RedefinableTemplateSignature-inheritedParameter"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if extendedSignature->isEmpty() then Set{} else extendedSignature.parameter->asSet() endif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "TemplateParameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "RedefinableTemplateSignature-inheritedParameter.1-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "RedefinableTemplateSignature-isConsistentWith",
                    "name": "isConsistentWith",
                    "isQuery": true,
                    "bodyCondition": "RedefinableTemplateSignature-isConsistentWith-spec"
                  },
                  "_parent": "_",
                  "precondition": {
                    "_attributes": {
                      "xmi:idref": "RedefinableTemplateSignature-isConsistentWith-pre"
                    },
                    "_parent": "_"
                  },
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-isConsistentWith"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RedefinableTemplateSignature-isConsistentWith-_ownedComment.0",
                      "body": "The query isConsistentWith() specifies, for any two RedefinableTemplateSignatures in a context in which redefinition is possible, whether redefinition would be logically consistent. A redefining template signature is always consistent with a redefined template signature, as redefinition only adds new formal parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RedefinableTemplateSignature-isConsistentWith"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "RedefinableTemplateSignature-isConsistentWith-spec",
                        "name": "spec"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "RedefinableTemplateSignature-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "RedefinableTemplateSignature-isConsistentWith-spec-spec",
                          "name": "spec"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "result = (redefiningElement.oclIsKindOf(RedefinableTemplateSignature))"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Constraint",
                        "xmi:id": "RedefinableTemplateSignature-isConsistentWith-pre",
                        "name": "pre"
                      },
                      "_parent": "_",
                      "constrainedElement": {
                        "_attributes": {
                          "xmi:idref": "RedefinableTemplateSignature-isConsistentWith"
                        },
                        "_parent": "_"
                      },
                      "specification": {
                        "_attributes": {
                          "xmi:type": "uml:OpaqueExpression",
                          "xmi:id": "RedefinableTemplateSignature-isConsistentWith-pre-_specification"
                        },
                        "_parent": "_",
                        "body": {
                          "_parent": "_",
                          "_text": "redefiningElement.isRedefinitionContextValid(self)"
                        },
                        "language": {
                          "_parent": "_",
                          "_text": "OCL"
                        }
                      }
                    }
                  ],
                  "ownedParameter": [
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableTemplateSignature-isConsistentWith-result",
                        "name": "result",
                        "direction": "return"
                      },
                      "_parent": "_",
                      "type": {
                        "_attributes": {
                          "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                        },
                        "_parent": "_"
                      }
                    },
                    {
                      "_attributes": {
                        "xmi:type": "uml:Parameter",
                        "xmi:id": "RedefinableTemplateSignature-isConsistentWith-redefiningElement",
                        "name": "redefiningElement",
                        "type": "RedefinableElement"
                      },
                      "_parent": "_"
                    }
                  ]
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Slot",
                "name": "Slot"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Slot-_ownedComment.0",
                  "body": "A Slot designates that an entity modeled by an InstanceSpecification has a value or values for a specific StructuralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Slot"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Slot-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Slot-definingFeature",
                    "name": "definingFeature",
                    "type": "StructuralFeature",
                    "association": "A_definingFeature_slot"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Slot-definingFeature-_ownedComment.0",
                      "body": "The StructuralFeature that specifies the values that may be held by the Slot."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Slot-definingFeature"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Slot-owningInstance",
                    "name": "owningInstance",
                    "type": "InstanceSpecification",
                    "association": "A_slot_owningInstance"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-owner"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Slot-owningInstance-_ownedComment.0",
                      "body": "The InstanceSpecification that owns this Slot."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Slot-owningInstance"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Slot-value",
                    "name": "value",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_value_owningSlot"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Slot-value-_ownedComment.0",
                      "body": "The value or values held by the Slot."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Slot-value"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Slot-value-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Slot-value-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StructuralFeature",
                "name": "StructuralFeature",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StructuralFeature-_ownedComment.0",
                  "body": "A StructuralFeature is a typed feature of a Classifier that specifies the structure of instances of the Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StructuralFeature"
                  },
                  "_parent": "_"
                }
              },
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuralFeature-_generalization.0",
                    "general": "MultiplicityElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuralFeature-_generalization.1",
                    "general": "TypedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuralFeature-_generalization.2",
                    "general": "Feature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "StructuralFeature-isReadOnly",
                  "name": "isReadOnly"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "StructuralFeature-isReadOnly-_ownedComment.0",
                    "body": "If isReadOnly is true, the StructuralFeature may not be written to after initialization."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeature-isReadOnly"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralBoolean",
                    "xmi:id": "StructuralFeature-isReadOnly-_defaultValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "AggregationKind",
                "name": "AggregationKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AggregationKind-_ownedComment.0",
                  "body": "AggregationKind is an Enumeration for specifying the kind of aggregation of a Property."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AggregationKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "AggregationKind-none",
                    "name": "none"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AggregationKind-none-_ownedComment.0",
                      "body": "Indicates that the Property has no aggregation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AggregationKind-none"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "AggregationKind-shared",
                    "name": "shared"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AggregationKind-shared-_ownedComment.0",
                      "body": "Indicates that the Property has shared aggregation."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AggregationKind-shared"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "AggregationKind-composite",
                    "name": "composite"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AggregationKind-composite-_ownedComment.0",
                      "body": "Indicates that the Property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AggregationKind-composite"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "CallConcurrencyKind",
                "name": "CallConcurrencyKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CallConcurrencyKind-_ownedComment.0",
                  "body": "CallConcurrencyKind is an Enumeration used to specify the semantics of concurrent calls to a BehavioralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CallConcurrencyKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "CallConcurrencyKind-sequential",
                    "name": "sequential"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallConcurrencyKind-sequential-_ownedComment.0",
                      "body": "No concurrency management mechanism is associated with the BehavioralFeature and, therefore, concurrency conflicts may occur. Instances that invoke a BehavioralFeature need to coordinate so that only one invocation to a target on any BehavioralFeature occurs at once."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallConcurrencyKind-sequential"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "CallConcurrencyKind-guarded",
                    "name": "guarded"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallConcurrencyKind-guarded-_ownedComment.0",
                      "body": "Multiple invocations of a BehavioralFeature that overlap in time may occur to one instance, but only one is allowed to commence. The others are blocked until the performance of the currently executing BehavioralFeature is complete. It is the responsibility of the system designer to ensure that deadlocks do not occur due to simultaneous blocking."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallConcurrencyKind-guarded"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "CallConcurrencyKind-concurrent",
                    "name": "concurrent"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallConcurrencyKind-concurrent-_ownedComment.0",
                      "body": "Multiple invocations of a BehavioralFeature that overlap in time may occur to one instance and all of them may proceed concurrently."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallConcurrencyKind-concurrent"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "ParameterDirectionKind",
                "name": "ParameterDirectionKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ParameterDirectionKind-_ownedComment.0",
                  "body": "ParameterDirectionKind is an Enumeration that defines literals used to specify direction of parameters."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ParameterDirectionKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterDirectionKind-in",
                    "name": "in"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterDirectionKind-in-_ownedComment.0",
                      "body": "Indicates that Parameter values are passed in by the caller. "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterDirectionKind-in"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterDirectionKind-inout",
                    "name": "inout"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterDirectionKind-inout-_ownedComment.0",
                      "body": "Indicates that Parameter values are passed in by the caller and (possibly different) values passed out to the caller."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterDirectionKind-inout"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterDirectionKind-out",
                    "name": "out"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterDirectionKind-out-_ownedComment.0",
                      "body": "Indicates that Parameter values are passed out to the caller."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterDirectionKind-out"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterDirectionKind-return",
                    "name": "return"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterDirectionKind-return-_ownedComment.0",
                      "body": "Indicates that Parameter values are passed as return values back to the caller."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterDirectionKind-return"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "ParameterEffectKind",
                "name": "ParameterEffectKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ParameterEffectKind-_ownedComment.0",
                  "body": "ParameterEffectKind is an Enumeration that indicates the effect of a Behavior on values passed in or out of its parameters."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ParameterEffectKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterEffectKind-create",
                    "name": "create"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterEffectKind-create-_ownedComment.0",
                      "body": "Indicates that the behavior creates values."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterEffectKind-create"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterEffectKind-read",
                    "name": "read"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterEffectKind-read-_ownedComment.0",
                      "body": "Indicates objects that are values of the parameter have values of their properties, or links in which they participate, or their classifiers retrieved during executions of the behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterEffectKind-read"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterEffectKind-update",
                    "name": "update"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterEffectKind-update-_ownedComment.0",
                      "body": "Indicates objects that are values of the parameter have values of their properties, or links in which they participate, or their classification changed during executions of the behavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterEffectKind-update"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ParameterEffectKind-delete",
                    "name": "delete"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ParameterEffectKind-delete-_ownedComment.0",
                      "body": "Indicates objects that are values of the parameter do not exist after executions of the behavior are finished."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ParameterEffectKind-delete"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_definingFeature_slot",
                "name": "A_definingFeature_slot"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Slot-definingFeature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_definingFeature_slot-slot"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_definingFeature_slot-slot",
                  "name": "slot",
                  "type": "Slot",
                  "association": "A_definingFeature_slot"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_definingFeature_slot-slot-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_definingFeature_slot-slot-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_owningSlot",
                "name": "A_value_owningSlot"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Slot-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_owningSlot-owningSlot"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_owningSlot-owningSlot",
                  "name": "owningSlot",
                  "type": "Slot",
                  "association": "A_value_owningSlot"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_owningSlot-owningSlot-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_extendedSignature_redefinableTemplateSignature",
                "name": "A_extendedSignature_redefinableTemplateSignature"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RedefinableTemplateSignature-extendedSignature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature",
                  "name": "redefinableTemplateSignature",
                  "type": "RedefinableTemplateSignature",
                  "association": "A_extendedSignature_redefinableTemplateSignature"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_extendedSignature_redefinableTemplateSignature-redefinableTemplateSignature-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inheritedParameter_redefinableTemplateSignature",
                "name": "A_inheritedParameter_redefinableTemplateSignature",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RedefinableTemplateSignature-inheritedParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature",
                  "name": "redefinableTemplateSignature",
                  "type": "RedefinableTemplateSignature",
                  "association": "A_inheritedParameter_redefinableTemplateSignature"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_parameter_templateSignature-templateSignature"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_inheritedParameter_redefinableTemplateSignature-redefinableTemplateSignature-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinitionContext_redefinableElement",
                "name": "A_redefinitionContext_redefinableElement",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-redefinitionContext"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinitionContext_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinitionContext_redefinableElement-redefinableElement",
                  "name": "redefinableElement",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "RedefinableElement",
                  "association": "A_redefinitionContext_redefinableElement"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinitionContext_redefinableElement-redefinableElement-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinitionContext_redefinableElement-redefinableElement-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedElement_redefinableElement",
                "name": "A_redefinedElement_redefinableElement",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RedefinableElement-redefinedElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedElement_redefinableElement-redefinableElement",
                  "name": "redefinableElement",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "RedefinableElement",
                  "association": "A_redefinedElement_redefinableElement"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedElement_redefinableElement-redefinableElement-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedElement_redefinableElement-redefinableElement-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_qualifier_associationEnd",
                "name": "A_qualifier_associationEnd"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Property-qualifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Property-associationEnd"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedProperty_property",
                "name": "A_redefinedProperty_property"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Property-redefinedProperty"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedProperty_property-property"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedProperty_property-property",
                  "name": "property",
                  "type": "Property",
                  "association": "A_redefinedProperty_property"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedProperty_property-property-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedProperty_property-property-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_defaultValue_owningProperty",
                "name": "A_defaultValue_owningProperty"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Property-defaultValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_defaultValue_owningProperty-owningProperty"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_defaultValue_owningProperty-owningProperty",
                  "name": "owningProperty",
                  "type": "Property",
                  "association": "A_defaultValue_owningProperty"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_defaultValue_owningProperty-owningProperty-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_opposite_property",
                "name": "A_opposite_property",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Property-opposite"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_opposite_property-property"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_opposite_property-property",
                  "name": "property",
                  "type": "Property",
                  "association": "A_opposite_property"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_opposite_property-property-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_subsettedProperty_property",
                "name": "A_subsettedProperty_property"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Property-subsettedProperty"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_subsettedProperty_property-property"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_subsettedProperty_property-property",
                  "name": "property",
                  "type": "Property",
                  "association": "A_subsettedProperty_property"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_subsettedProperty_property-property-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_subsettedProperty_property-property-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_condition_parameterSet",
                "name": "A_condition_parameterSet"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ParameterSet-condition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_condition_parameterSet-parameterSet"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_condition_parameterSet-parameterSet",
                  "name": "parameterSet",
                  "type": "ParameterSet",
                  "association": "A_condition_parameterSet"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_condition_parameterSet-parameterSet-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_parameterSet_parameter",
                "name": "A_parameterSet_parameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Parameter-parameterSet"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ParameterSet-parameter"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_defaultValue_owningParameter",
                "name": "A_defaultValue_owningParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Parameter-defaultValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_defaultValue_owningParameter-owningParameter"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_defaultValue_owningParameter-owningParameter",
                  "name": "owningParameter",
                  "type": "Parameter",
                  "association": "A_defaultValue_owningParameter"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_defaultValue_owningParameter-owningParameter-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_type_operation",
                "name": "A_type_operation",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-type"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_type_operation-operation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_type_operation-operation",
                  "name": "operation",
                  "type": "Operation",
                  "association": "A_type_operation"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_type_operation-operation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_type_operation-operation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_operation_templateParameter_parameteredElement",
                "name": "A_operation_templateParameter_parameteredElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-templateParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "OperationTemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_bodyCondition_bodyContext",
                "name": "A_bodyCondition_bodyContext"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-bodyCondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_bodyCondition_bodyContext-bodyContext"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_bodyCondition_bodyContext-bodyContext",
                  "name": "bodyContext",
                  "type": "Operation",
                  "association": "A_bodyCondition_bodyContext"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_bodyCondition_bodyContext-bodyContext-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_postcondition_postContext",
                "name": "A_postcondition_postContext"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-postcondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_postcondition_postContext-postContext"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_postcondition_postContext-postContext",
                  "name": "postContext",
                  "type": "Operation",
                  "association": "A_postcondition_postContext"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_postcondition_postContext-postContext-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedOperation_operation",
                "name": "A_redefinedOperation_operation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-redefinedOperation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedOperation_operation-operation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedOperation_operation-operation",
                  "name": "operation",
                  "type": "Operation",
                  "association": "A_redefinedOperation_operation"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedOperation_operation-operation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedOperation_operation-operation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_raisedException_operation",
                "name": "A_raisedException_operation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-raisedException"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_raisedException_operation-operation"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_raisedException_operation-operation",
                  "name": "operation",
                  "type": "Operation",
                  "association": "A_raisedException_operation"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_raisedException_behavioralFeature-behavioralFeature"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_raisedException_operation-operation-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_raisedException_operation-operation-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_precondition_preContext",
                "name": "A_precondition_preContext"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-precondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_precondition_preContext-preContext"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_precondition_preContext-preContext",
                  "name": "preContext",
                  "type": "Operation",
                  "association": "A_precondition_preContext"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Constraint-context"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_precondition_preContext-preContext-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameter_operation",
                "name": "A_ownedParameter_operation"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Operation-ownedParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Parameter-operation"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_instance_instanceValue",
                "name": "A_instance_instanceValue"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InstanceValue-instance"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_instance_instanceValue-instanceValue"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_instance_instanceValue-instanceValue",
                  "name": "instanceValue",
                  "type": "InstanceValue",
                  "association": "A_instance_instanceValue"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_instance_instanceValue-instanceValue-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_instance_instanceValue-instanceValue-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_instanceSpecification",
                "name": "A_classifier_instanceSpecification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InstanceSpecification-classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifier_instanceSpecification-instanceSpecification"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifier_instanceSpecification-instanceSpecification",
                  "name": "instanceSpecification",
                  "type": "InstanceSpecification",
                  "association": "A_classifier_instanceSpecification"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifier_instanceSpecification-instanceSpecification-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_classifier_instanceSpecification-instanceSpecification-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_slot_owningInstance",
                "name": "A_slot_owningInstance"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InstanceSpecification-slot"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Slot-owningInstance"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_specification_owningInstanceSpec",
                "name": "A_specification_owningInstanceSpec"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InstanceSpecification-specification"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_specification_owningInstanceSpec-owningInstanceSpec"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_specification_owningInstanceSpec-owningInstanceSpec",
                  "name": "owningInstanceSpec",
                  "type": "InstanceSpecification",
                  "association": "A_specification_owningInstanceSpec"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_specification_owningInstanceSpec-owningInstanceSpec-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_generalizationSet_generalization",
                "name": "A_generalizationSet_generalization"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Generalization-generalizationSet"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "GeneralizationSet-generalization"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_general_generalization",
                "name": "A_general_generalization"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Generalization-general"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_general_generalization-generalization"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_general_generalization-generalization",
                  "name": "generalization",
                  "type": "Generalization",
                  "association": "A_general_generalization"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_target_directedRelationship-directedRelationship"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_general_generalization-generalization-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_general_generalization-generalization-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_constrainingClassifier_classifierTemplateParameter",
                "name": "A_constrainingClassifier_classifierTemplateParameter"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ClassifierTemplateParameter-constrainingClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter",
                  "name": "classifierTemplateParameter",
                  "type": "ClassifierTemplateParameter",
                  "association": "A_constrainingClassifier_classifierTemplateParameter"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_constrainingClassifier_classifierTemplateParameter-classifierTemplateParameter-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_templateParameter_parameteredElement",
                "name": "A_classifier_templateParameter_parameteredElement"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-templateParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ClassifierTemplateParameter-parameteredElement"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_powertypeExtent_powertype",
                "name": "A_powertypeExtent_powertype"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-powertypeExtent"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "GeneralizationSet-powertype"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_generalization_specific",
                "name": "A_generalization_specific"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-generalization"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Generalization-specific"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_general_classifier",
                "name": "A_general_classifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-general"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_general_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_general_classifier-classifier",
                  "name": "classifier",
                  "type": "Classifier",
                  "association": "A_general_classifier"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_general_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_general_classifier-classifier-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_feature_featuringClassifier",
                "name": "A_feature_featuringClassifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-feature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Feature-featuringClassifier"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_substitution_substitutingClassifier",
                "name": "A_substitution_substitutingClassifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-substitution"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Substitution-substitutingClassifier"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_representation_classifier",
                "name": "A_representation_classifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-representation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_representation_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_representation_classifier-_generalization.0",
                  "general": "A_collaborationUse_classifier"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_representation_classifier-classifier",
                  "name": "classifier",
                  "type": "Classifier",
                  "association": "A_representation_classifier"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_collaborationUse_classifier-classifier"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_representation_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedTemplateSignature_classifier",
                "name": "A_ownedTemplateSignature_classifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-ownedTemplateSignature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "RedefinableTemplateSignature-classifier"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inheritedMember_inheritingClassifier",
                "name": "A_inheritedMember_inheritingClassifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-inheritedMember"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_inheritedMember_inheritingClassifier-inheritingClassifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_inheritedMember_inheritingClassifier-inheritingClassifier",
                  "name": "inheritingClassifier",
                  "type": "Classifier",
                  "association": "A_inheritedMember_inheritingClassifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_member_memberNamespace-memberNamespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_inheritedMember_inheritingClassifier-inheritingClassifier-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_inheritedMember_inheritingClassifier-inheritingClassifier-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_redefinedClassifier_classifier",
                "name": "A_redefinedClassifier_classifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-redefinedClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_redefinedClassifier_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_redefinedClassifier_classifier-classifier",
                  "name": "classifier",
                  "type": "Classifier",
                  "association": "A_redefinedClassifier_classifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_redefinedElement_redefinableElement-redefinableElement"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_redefinedClassifier_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_redefinedClassifier_classifier-classifier-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_collaborationUse_classifier",
                "name": "A_collaborationUse_classifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-collaborationUse"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_collaborationUse_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_collaborationUse_classifier-classifier",
                  "name": "classifier",
                  "type": "Classifier",
                  "association": "A_collaborationUse_classifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_collaborationUse_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_attribute_classifier",
                "name": "A_attribute_classifier",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-attribute"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_attribute_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_attribute_classifier-classifier",
                  "name": "classifier",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Classifier",
                  "association": "A_attribute_classifier"
                },
                "_parent": "_",
                "subsettedProperty": [
                  {
                    "_attributes": {
                      "xmi:idref": "Feature-featuringClassifier"
                    },
                    "_parent": "_"
                  },
                  {
                    "_attributes": {
                      "xmi:idref": "RedefinableElement-redefinitionContext"
                    },
                    "_parent": "_"
                  }
                ],
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_attribute_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedUseCase_classifier",
                "name": "A_ownedUseCase_classifier"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Classifier-ownedUseCase"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedUseCase_classifier-classifier"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedUseCase_classifier-classifier",
                  "name": "classifier",
                  "type": "Classifier",
                  "association": "A_ownedUseCase_classifier"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedUseCase_classifier-classifier-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameter_ownerFormalParam",
                "name": "A_ownedParameter_ownerFormalParam"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature-ownedParameter"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedParameter_ownerFormalParam-ownerFormalParam"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedParameter_ownerFormalParam-ownerFormalParam",
                  "name": "ownerFormalParam",
                  "type": "BehavioralFeature",
                  "association": "A_ownedParameter_ownerFormalParam"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedParameter_ownerFormalParam-ownerFormalParam-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_raisedException_behavioralFeature",
                "name": "A_raisedException_behavioralFeature"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature-raisedException"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_raisedException_behavioralFeature-behavioralFeature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_raisedException_behavioralFeature-behavioralFeature",
                  "name": "behavioralFeature",
                  "type": "BehavioralFeature",
                  "association": "A_raisedException_behavioralFeature"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_raisedException_behavioralFeature-behavioralFeature-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_raisedException_behavioralFeature-behavioralFeature-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_ownedParameterSet_behavioralFeature",
                "name": "A_ownedParameterSet_behavioralFeature"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature-ownedParameterSet"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_ownedParameterSet_behavioralFeature-behavioralFeature"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_ownedParameterSet_behavioralFeature-behavioralFeature",
                  "name": "behavioralFeature",
                  "type": "BehavioralFeature",
                  "association": "A_ownedParameterSet_behavioralFeature"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "NamedElement-namespace"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_ownedParameterSet_behavioralFeature-behavioralFeature-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_method_specification",
                "name": "A_method_specification"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BehavioralFeature-method"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Behavior-specification"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_contract_substitution",
                "name": "A_contract_substitution"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Substitution-contract"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_contract_substitution-substitution"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_contract_substitution-substitution",
                  "name": "substitution",
                  "type": "Substitution",
                  "association": "A_contract_substitution"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_supplier_supplierDependency-supplierDependency"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_contract_substitution-substitution-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_contract_substitution-substitution-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        },
        {
          "_attributes": {
            "xmi:type": "uml:Package",
            "xmi:id": "Actions",
            "name": "Actions"
          },
          "_parent": "_",
          "packageImport": [
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Actions-_packageImport.0",
                "importedPackage": "Classification"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Actions-_packageImport.1",
                "importedPackage": "StructuredClassifiers"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Actions-_packageImport.2",
                "importedPackage": "CommonStructure"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Actions-_packageImport.3",
                "importedPackage": "Activities"
              },
              "_parent": "_"
            },
            {
              "_attributes": {
                "xmi:type": "uml:PackageImport",
                "xmi:id": "Actions-_packageImport.4",
                "importedPackage": "CommonBehavior"
              },
              "_parent": "_"
            }
          ],
          "packagedElement": [
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ValueSpecificationAction",
                "name": "ValueSpecificationAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ValueSpecificationAction-_ownedComment.0",
                  "body": "A ValueSpecificationAction is an Action that evaluates a ValueSpecification and provides a result."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ValueSpecificationAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ValueSpecificationAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecificationAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecificationAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecificationAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ValueSpecificationAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ValueSpecificationAction-compatible_type",
                    "name": "compatible_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ValueSpecificationAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecificationAction-compatible_type-_ownedComment.0",
                      "body": "The type of the value ValueSpecification must conform to the type of the result OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecificationAction-compatible_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ValueSpecificationAction-compatible_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value.type.conformsTo(result.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ValueSpecificationAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ValueSpecificationAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_valueSpecificationAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecificationAction-result-_ownedComment.0",
                      "body": "The OutputPin on which the result value is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecificationAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ValueSpecificationAction-value",
                    "name": "value",
                    "aggregation": "composite",
                    "type": "ValueSpecification",
                    "association": "A_value_valueSpecificationAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValueSpecificationAction-value-_ownedComment.0",
                      "body": "The ValueSpecification to be evaluated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValueSpecificationAction-value"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "VariableAction",
                "name": "VariableAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "VariableAction-_ownedComment.0",
                  "body": "VariableAction is an abstract class for Actions that operate on a specified Variable."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "VariableAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "VariableAction-scope_of_variable",
                  "name": "scope_of_variable"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "VariableAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "VariableAction-scope_of_variable-_ownedComment.0",
                    "body": "The VariableAction must be in the scope of the variable."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "VariableAction-scope_of_variable"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "VariableAction-scope_of_variable-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "variable.isAccessibleBy(self)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "VariableAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "VariableAction-variable",
                  "name": "variable",
                  "type": "Variable",
                  "association": "A_variable_variableAction"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "VariableAction-variable-_ownedComment.0",
                    "body": "The Variable to be read or written."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "VariableAction-variable"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "WriteLinkAction",
                "name": "WriteLinkAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "WriteLinkAction-_ownedComment.0",
                  "body": "WriteLinkAction is an abstract class for LinkActions that create and destroy links."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "WriteLinkAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "WriteLinkAction-allow_access",
                  "name": "allow_access"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "WriteLinkAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "WriteLinkAction-allow_access-_ownedComment.0",
                    "body": "The visibility of at least one end must allow access from the context Classifier of the WriteLinkAction."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteLinkAction-allow_access"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "WriteLinkAction-allow_access-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "endData.end->exists(end |\n  end.type=_'context' or\n  end.visibility=VisibilityKind::public or \n  end.visibility=VisibilityKind::protected and\n  endData.end->exists(other | \n    other<>end and _'context'.conformsTo(other.type.oclAsType(Classifier))))\n"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "WriteLinkAction-_generalization.0",
                  "general": "LinkAction"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "WriteStructuralFeatureAction",
                "name": "WriteStructuralFeatureAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "WriteStructuralFeatureAction-_ownedComment.0",
                  "body": "WriteStructuralFeatureAction is an abstract class for StructuralFeatureActions that change StructuralFeature values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "WriteStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_result",
                    "name": "multiplicity_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_result-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin must be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-multiplicity_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result <> null implies result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteStructuralFeatureAction-type_of_value",
                    "name": "type_of_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-type_of_value-_ownedComment.0",
                      "body": "The type of the value InputPin must conform to the type of the structuralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-type_of_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteStructuralFeatureAction-type_of_value-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value <> null implies value.type.conformsTo(structuralFeature.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_value",
                    "name": "multiplicity_of_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_value-_ownedComment.0",
                      "body": "The multiplicity of the value InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-multiplicity_of_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteStructuralFeatureAction-multiplicity_of_value-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value<>null implies value.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteStructuralFeatureAction-type_of_result",
                    "name": "type_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-type_of_result-_ownedComment.0",
                      "body": "The type of the result OutputPin is the same as the type of the inherited object InputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-type_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteStructuralFeatureAction-type_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result <> null implies result.type = object.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "WriteStructuralFeatureAction-_generalization.0",
                  "general": "StructuralFeatureAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "WriteStructuralFeatureAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_writeStructuralFeatureAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-result-_ownedComment.0",
                      "body": "The OutputPin on which is put the input object as modified by the WriteStructuralFeatureAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "WriteStructuralFeatureAction-result-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "WriteStructuralFeatureAction-value",
                    "name": "value",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_value_writeStructuralFeatureAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteStructuralFeatureAction-value-_ownedComment.0",
                      "body": "The InputPin that provides the value to be added or removed from the StructuralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteStructuralFeatureAction-value"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "WriteStructuralFeatureAction-value-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "WriteVariableAction",
                "name": "WriteVariableAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "WriteVariableAction-_ownedComment.0",
                  "body": "WriteVariableAction is an abstract class for VariableActions that change Variable values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "WriteVariableAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteVariableAction-value_type",
                    "name": "value_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteVariableAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteVariableAction-value_type-_ownedComment.0",
                      "body": "The type of the value InputPin must conform to the type of the variable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteVariableAction-value_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteVariableAction-value_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value <> null implies value.type.conformsTo(variable.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "WriteVariableAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteVariableAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "WriteVariableAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the value InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "WriteVariableAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "WriteVariableAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value<>null implies value.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "WriteVariableAction-_generalization.0",
                  "general": "VariableAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "WriteVariableAction-value",
                  "name": "value",
                  "aggregation": "composite",
                  "type": "InputPin",
                  "association": "A_value_writeVariableAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-input"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "WriteVariableAction-value-_ownedComment.0",
                    "body": "The InputPin that gives the value to be added or removed from the Variable."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "WriteVariableAction-value"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "WriteVariableAction-value-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Enumeration",
                "xmi:id": "ExpansionKind",
                "name": "ExpansionKind"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExpansionKind-_ownedComment.0",
                  "body": "ExpansionKind is an enumeration type used to specify how an ExpansionRegion executes its contents."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExpansionKind"
                  },
                  "_parent": "_"
                }
              },
              "ownedLiteral": [
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ExpansionKind-parallel",
                    "name": "parallel"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionKind-parallel-_ownedComment.0",
                      "body": "The content of the ExpansionRegion is executed concurrently for the elements of the input collections."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionKind-parallel"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ExpansionKind-iterative",
                    "name": "iterative"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionKind-iterative-_ownedComment.0",
                      "body": "The content of the ExpansionRegion is executed iteratively for the elements of the input collections, in the order of the input elements, if the collections are ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionKind-iterative"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:EnumerationLiteral",
                    "xmi:id": "ExpansionKind-stream",
                    "name": "stream"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionKind-stream-_ownedComment.0",
                      "body": "A stream of input collection elements flows into a single execution of the content of the ExpansionRegion, in the order of the collection elements if the input collections are ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionKind-stream"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AcceptCallAction",
                "name": "AcceptCallAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AcceptCallAction-_ownedComment.0",
                  "body": "An AcceptCallAction is an AcceptEventAction that handles the receipt of a synchronous call request. In addition to the values from the Operation input parameters, the Action produces an output that is needed later to supply the information to the ReplyAction necessary to return control to the caller. An AcceptCallAction is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent ReplyAction will complete immediately with no effect."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AcceptCallAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptCallAction-result_pins",
                    "name": "result_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptCallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptCallAction-result_pins-_ownedComment.0",
                      "body": "The number of result OutputPins must be the same as the number of input (in and inout) ownedParameters of the Operation specified by the trigger Event. The type, ordering and multiplicity of each result OutputPin must be consistent with the corresponding input Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptCallAction-result_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptCallAction-result_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let parameter: OrderedSet(Parameter) = trigger.event->asSequence()->first().oclAsType(CallEvent).operation.inputParameters() in\nresult->size() = parameter->size() and\nSequence{1..result->size()}->forAll(i | \n\tparameter->at(i).type.conformsTo(result->at(i).type) and \n\tparameter->at(i).isOrdered = result->at(i).isOrdered and\n\tparameter->at(i).compatibleWith(result->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptCallAction-trigger_call_event",
                    "name": "trigger_call_event"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptCallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptCallAction-trigger_call_event-_ownedComment.0",
                      "body": "The action must have exactly one trigger, which must be for a CallEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptCallAction-trigger_call_event"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptCallAction-trigger_call_event-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "trigger->size()=1 and\ntrigger->asSequence()->first().event.oclIsKindOf(CallEvent)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptCallAction-unmarshall",
                    "name": "unmarshall"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptCallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptCallAction-unmarshall-_ownedComment.0",
                      "body": "isUnmrashall must be true for an AcceptCallAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptCallAction-unmarshall"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptCallAction-unmarshall-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isUnmarshall = true"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "AcceptCallAction-_generalization.0",
                  "general": "AcceptEventAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "AcceptCallAction-returnInformation",
                  "name": "returnInformation",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_returnInformation_acceptCallAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "AcceptCallAction-returnInformation-_ownedComment.0",
                    "body": "An OutputPin where a value is placed containing sufficient information to perform a subsequent ReplyAction and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptCallAction-returnInformation"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AcceptEventAction",
                "name": "AcceptEventAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AcceptEventAction-_ownedComment.0",
                  "body": "An AcceptEventAction is an Action that waits for the occurrence of one or more specific Events."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AcceptEventAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptEventAction-one_output_pin",
                    "name": "one_output_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptEventAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-one_output_pin-_ownedComment.0",
                      "body": "If isUnmarshall=false and any of the triggers are for SignalEvents or TimeEvents, there must be exactly one result OutputPin with multiplicity 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-one_output_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptEventAction-one_output_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not isUnmarshall and trigger->exists(event.oclIsKindOf(SignalEvent) or event.oclIsKindOf(TimeEvent)) implies \n\toutput->size() = 1 and output->first().is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptEventAction-no_input_pins",
                    "name": "no_input_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptEventAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-no_input_pins-_ownedComment.0",
                      "body": "AcceptEventActions may have no input pins."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-no_input_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptEventAction-no_input_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "input->size() = 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptEventAction-no_output_pins",
                    "name": "no_output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptEventAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-no_output_pins-_ownedComment.0",
                      "body": "There are no OutputPins if the trigger events are only ChangeEvents and/or CallEvents when this action is an instance of AcceptEventAction and not an instance of a descendant of AcceptEventAction (such as AcceptCallAction)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-no_output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptEventAction-no_output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "(self.oclIsTypeOf(AcceptEventAction) and\n   (trigger->forAll(event.oclIsKindOf(ChangeEvent) or  \n                             event.oclIsKindOf(CallEvent))))\nimplies output->size() = 0"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptEventAction-unmarshall_signal_events",
                    "name": "unmarshall_signal_events"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptEventAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-unmarshall_signal_events-_ownedComment.0",
                      "body": "If isUnmarshall is true (and this is not an AcceptCallAction), there must be exactly one trigger, which is for a SignalEvent. The number of result output pins must be the same as the number of attributes of the signal. The type and ordering of each result output pin must be the same as the corresponding attribute of the signal. The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding attribute."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-unmarshall_signal_events"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptEventAction-unmarshall_signal_events-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isUnmarshall and self.oclIsTypeOf(AcceptEventAction) implies\n\ttrigger->size()=1 and\n\ttrigger->asSequence()->first().event.oclIsKindOf(SignalEvent) and\n\tlet attribute: OrderedSet(Property) = trigger->asSequence()->first().event.oclAsType(SignalEvent).signal.allAttributes() in\n\tattribute->size()>0 and result->size() = attribute->size() and\n\tSequence{1..result->size()}->forAll(i | \n\t\tresult->at(i).type = attribute->at(i).type and \n\t\tresult->at(i).isOrdered = attribute->at(i).isOrdered and\n\t\tresult->at(i).includesMultiplicity(attribute->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AcceptEventAction-conforming_type",
                    "name": "conforming_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AcceptEventAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-conforming_type-_ownedComment.0",
                      "body": "If isUnmarshall=false and all the triggers are for SignalEvents, then the type of the single result OutputPin must either be null or all the signals must conform to it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-conforming_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AcceptEventAction-conforming_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not isUnmarshall implies \n\tresult->isEmpty() or\n\tlet type: Type = result->first().type in type=null or \n\t\t(trigger->forAll(event.oclIsKindOf(SignalEvent)) and \n\t\t trigger.event.oclAsType(SignalEvent).signal->forAll(s | s.conformsTo(type)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "AcceptEventAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AcceptEventAction-isUnmarshall",
                    "name": "isUnmarshall"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-isUnmarshall-_ownedComment.0",
                      "body": "Indicates whether there is a single OutputPin for a SignalEvent occurrence, or multiple OutputPins for attribute values of the instance of the Signal associated with a SignalEvent occurrence."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-isUnmarshall"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "AcceptEventAction-isUnmarshall-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AcceptEventAction-result",
                    "name": "result",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_acceptEventAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-result-_ownedComment.0",
                      "body": "OutputPins holding the values received from an Event occurrence."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "AcceptEventAction-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "AcceptEventAction-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AcceptEventAction-trigger",
                    "name": "trigger",
                    "aggregation": "composite",
                    "type": "Trigger",
                    "association": "A_trigger_acceptEventAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AcceptEventAction-trigger-_ownedComment.0",
                      "body": "The Triggers specifying the Events of which the AcceptEventAction waits for occurrences."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AcceptEventAction-trigger"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "AcceptEventAction-trigger-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Action",
                "name": "Action",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Action-_ownedComment.0",
                  "body": "An Action is the fundamental unit of executable functionality. The execution of an Action represents some transformation or processing in the modeled system. Actions provide the ExecutableNodes within Activities and may also be used within Interactions."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Action"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Action-_generalization.0",
                  "general": "ExecutableNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-context",
                    "name": "context",
                    "isReadOnly": true,
                    "isDerived": true,
                    "type": "Classifier",
                    "association": "A_context_action"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-context-_ownedComment.0",
                      "body": "The context Classifier of the Behavior that contains this Action, or the Behavior itself if it has no context."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-context"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Action-context-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-input",
                    "name": "input",
                    "isOrdered": true,
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "InputPin",
                    "association": "A_input_action"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-input-_ownedComment.0",
                      "body": "The ordered set of InputPins representing the inputs to the Action."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-input"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Action-input-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Action-input-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-isLocallyReentrant",
                    "name": "isLocallyReentrant"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-isLocallyReentrant-_ownedComment.0",
                      "body": "If true, the Action can begin a new, concurrent execution, even if there is already another execution of the Action ongoing. If false, the Action cannot begin a new execution until any previous execution has completed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-isLocallyReentrant"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "Action-isLocallyReentrant-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-localPostcondition",
                    "name": "localPostcondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_localPostcondition_action"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-localPostcondition-_ownedComment.0",
                      "body": "A Constraint that must be satisfied when execution of the Action is completed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-localPostcondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Action-localPostcondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Action-localPostcondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-localPrecondition",
                    "name": "localPrecondition",
                    "aggregation": "composite",
                    "type": "Constraint",
                    "association": "A_localPrecondition_action"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-localPrecondition-_ownedComment.0",
                      "body": "A Constraint that must be satisfied when execution of the Action is started."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-localPrecondition"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Action-localPrecondition-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Action-localPrecondition-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Action-output",
                    "name": "output",
                    "isOrdered": true,
                    "isReadOnly": true,
                    "aggregation": "composite",
                    "isDerived": true,
                    "isDerivedUnion": true,
                    "type": "OutputPin",
                    "association": "A_output_action"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-output-_ownedComment.0",
                      "body": "The ordered set of OutputPins representing outputs from the Action."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-output"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Action-output-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Action-output-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Action-context.1",
                    "name": "context",
                    "isQuery": true,
                    "bodyCondition": "Action-context.1-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-context.1-_ownedComment.0",
                      "body": "The derivation for the context property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-context.1"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Action-context.1-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": [
                      {
                        "_attributes": {
                          "xmi:idref": "Action-context.1"
                        },
                        "_parent": "_"
                      },
                      {
                        "_attributes": {
                          "xmi:idref": "Action-context"
                        },
                        "_parent": "_"
                      }
                    ],
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Action-context.1-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (let behavior: Behavior = self.containingBehavior() in\nif behavior=null then null\nelse if behavior._'context' = null then behavior\nelse behavior._'context'\nendif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Action-context.1-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Classifier"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Action-context.1-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Action-allActions",
                    "name": "allActions",
                    "isQuery": true,
                    "bodyCondition": "Action-allActions-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-allActions-_ownedComment.0",
                      "body": "Return this Action and all Actions contained directly or indirectly in it. By default only the Action itself is returned, but the operation is overridden for StructuredActivityNodes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-allActions"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Action-allActions-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-allActions"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Action-allActions-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Action-allActions-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Action"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Action-allActions-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Action-allActions-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Action-allOwnedNodes",
                    "name": "allOwnedNodes",
                    "isQuery": true,
                    "bodyCondition": "Action-allOwnedNodes-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Action-allOwnedNodes-_ownedComment.0",
                      "body": "Returns all the ActivityNodes directly or indirectly owned by this Action. This includes at least all the Pins of the Action."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-allOwnedNodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Action-allOwnedNodes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-allOwnedNodes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Action-allOwnedNodes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (input.oclAsType(Pin)->asSet()->union(output->asSet()))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Action-allOwnedNodes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ActivityNode"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Action-allOwnedNodes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "Action-allOwnedNodes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "Action-containingBehavior",
                    "name": "containingBehavior",
                    "isQuery": true,
                    "bodyCondition": "Action-containingBehavior-spec"
                  },
                  "_parent": "_",
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "Action-containingBehavior-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "Action-containingBehavior"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "Action-containingBehavior-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if inStructuredNode<>null then inStructuredNode.containingBehavior() \nelse if activity<>null then activity\nelse interaction \nendif\nendif\n)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "Action-containingBehavior-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Behavior"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "Action-containingBehavior-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ActionInputPin",
                "name": "ActionInputPin"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ActionInputPin-_ownedComment.0",
                  "body": "An ActionInputPin is a kind of InputPin that executes an Action to determine the values to input to another Action."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ActionInputPin"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActionInputPin-input_pin",
                    "name": "input_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionInputPin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActionInputPin-input_pin-_ownedComment.0",
                      "body": "The fromAction of an ActionInputPin must only have ActionInputPins as InputPins."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActionInputPin-input_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActionInputPin-input_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "fromAction.input->forAll(oclIsKindOf(ActionInputPin))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActionInputPin-one_output_pin",
                    "name": "one_output_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionInputPin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActionInputPin-one_output_pin-_ownedComment.0",
                      "body": "The fromAction of an ActionInputPin must have exactly one OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActionInputPin-one_output_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActionInputPin-one_output_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "fromAction.output->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ActionInputPin-no_control_or_object_flow",
                    "name": "no_control_or_object_flow"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionInputPin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ActionInputPin-no_control_or_object_flow-_ownedComment.0",
                      "body": "The fromAction of an ActionInputPin cannot have ActivityEdges coming into or out of it or its Pins."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ActionInputPin-no_control_or_object_flow"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ActionInputPin-no_control_or_object_flow-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "fromAction.incoming->union(outgoing)->isEmpty() and\nfromAction.input.incoming->isEmpty() and\nfromAction.output.outgoing->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ActionInputPin-_generalization.0",
                  "general": "InputPin"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ActionInputPin-fromAction",
                  "name": "fromAction",
                  "aggregation": "composite",
                  "type": "Action",
                  "association": "A_fromAction_actionInputPin"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ActionInputPin-fromAction-_ownedComment.0",
                    "body": "The Action used to provide the values of the ActionInputPin."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ActionInputPin-fromAction"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AddStructuralFeatureValueAction",
                "name": "AddStructuralFeatureValueAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AddStructuralFeatureValueAction-_ownedComment.0",
                  "body": "An AddStructuralFeatureValueAction is a WriteStructuralFeatureAction for adding values to a StructuralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AddStructuralFeatureValueAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AddStructuralFeatureValueAction-required_value",
                    "name": "required_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AddStructuralFeatureValueAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddStructuralFeatureValueAction-required_value-_ownedComment.0",
                      "body": "A value InputPin is required."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddStructuralFeatureValueAction-required_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AddStructuralFeatureValueAction-required_value-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value<>null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AddStructuralFeatureValueAction-insertAt_pin",
                    "name": "insertAt_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AddStructuralFeatureValueAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddStructuralFeatureValueAction-insertAt_pin-_ownedComment.0",
                      "body": "AddStructuralFeatureActions adding a value to ordered StructuralFeatures must have a single InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1 if isReplaceAll=false, and must have no Input Pin for the insertion point when the StructuralFeature is unordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddStructuralFeatureValueAction-insertAt_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AddStructuralFeatureValueAction-insertAt_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if not structuralFeature.isOrdered then insertAt = null\nelse \n  not isReplaceAll implies\n  \tinsertAt<>null and \n  \tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\nendif\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "AddStructuralFeatureValueAction-_generalization.0",
                  "general": "WriteStructuralFeatureAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AddStructuralFeatureValueAction-insertAt",
                    "name": "insertAt",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_insertAt_addStructuralFeatureValueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddStructuralFeatureValueAction-insertAt-_ownedComment.0",
                      "body": "The InputPin that gives the position at which to insert the value in an ordered StructuralFeature. The type of the insertAt InputPin is UnlimitedNatural, but the value cannot be zero. It is omitted for unordered StructuralFeatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddStructuralFeatureValueAction-insertAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "AddStructuralFeatureValueAction-insertAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AddStructuralFeatureValueAction-isReplaceAll",
                    "name": "isReplaceAll"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddStructuralFeatureValueAction-isReplaceAll-_ownedComment.0",
                      "body": "Specifies whether existing values of the StructuralFeature should be removed before adding the new value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddStructuralFeatureValueAction-isReplaceAll"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "AddStructuralFeatureValueAction-isReplaceAll-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "AddVariableValueAction",
                "name": "AddVariableValueAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "AddVariableValueAction-_ownedComment.0",
                  "body": "An AddVariableValueAction is a WriteVariableAction for adding values to a Variable."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "AddVariableValueAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AddVariableValueAction-required_value",
                    "name": "required_value"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AddVariableValueAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddVariableValueAction-required_value-_ownedComment.0",
                      "body": "A value InputPin is required."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddVariableValueAction-required_value"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AddVariableValueAction-required_value-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "AddVariableValueAction-insertAt_pin",
                    "name": "insertAt_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "AddVariableValueAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddVariableValueAction-insertAt_pin-_ownedComment.0",
                      "body": "AddVariableValueActions for ordered Variables must have a single InputPin for the insertion point with type UnlimtedNatural and multiplicity of 1..1 if isReplaceAll=false, otherwise the Action has no InputPin for the insertion point."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddVariableValueAction-insertAt_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "AddVariableValueAction-insertAt_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "if not variable.isOrdered then insertAt = null\nelse \n  not isReplaceAll implies\n  \tinsertAt<>null and \n  \tinsertAt->forAll(type=UnlimitedNatural and is(1,1.oclAsType(UnlimitedNatural)))\nendif\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "AddVariableValueAction-_generalization.0",
                  "general": "WriteVariableAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AddVariableValueAction-insertAt",
                    "name": "insertAt",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_insertAt_addVariableValueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddVariableValueAction-insertAt-_ownedComment.0",
                      "body": "The InputPin that gives the position at which to insert a new value or move an existing value in ordered Variables. The type of the insertAt InputPin is UnlimitedNatural, but the value cannot be zero. It is omitted for unordered Variables."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddVariableValueAction-insertAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "AddVariableValueAction-insertAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "AddVariableValueAction-isReplaceAll",
                    "name": "isReplaceAll"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "AddVariableValueAction-isReplaceAll-_ownedComment.0",
                      "body": "Specifies whether existing values of the Variable should be removed before adding the new value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "AddVariableValueAction-isReplaceAll"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "AddVariableValueAction-isReplaceAll-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "BroadcastSignalAction",
                "name": "BroadcastSignalAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "BroadcastSignalAction-_ownedComment.0",
                  "body": "A BroadcastSignalAction is an InvocationAction that transmits a Signal instance to all the potential target objects in the system. Values from the argument InputPins are used to provide values for the attributes of the Signal. The requestor continues execution immediately after the Signal instances are sent out and cannot receive reply values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "BroadcastSignalAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "BroadcastSignalAction-number_of_arguments",
                    "name": "number_of_arguments"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "BroadcastSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BroadcastSignalAction-number_of_arguments-_ownedComment.0",
                      "body": "The number of argument InputPins must be the same as the number of attributes in the signal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BroadcastSignalAction-number_of_arguments"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "BroadcastSignalAction-number_of_arguments-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "argument->size() = signal.allAttributes()->size()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "BroadcastSignalAction-type_ordering_multiplicity",
                    "name": "type_ordering_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "BroadcastSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BroadcastSignalAction-type_ordering_multiplicity-_ownedComment.0",
                      "body": "The type, ordering, and multiplicity of an argument InputPin must be the same as the corresponding attribute of the signal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BroadcastSignalAction-type_ordering_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "BroadcastSignalAction-type_ordering_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let attribute: OrderedSet(Property) = signal.allAttributes() in\nSequence{1..argument->size()}->forAll(i | \n\targument->at(i).type.conformsTo(attribute->at(i).type) and \n\targument->at(i).isOrdered = attribute->at(i).isOrdered and\n\targument->at(i).compatibleWith(attribute->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "BroadcastSignalAction-no_onport",
                    "name": "no_onport"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "BroadcastSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "BroadcastSignalAction-no_onport-_ownedComment.0",
                      "body": "A BroadcaseSignalAction may not specify onPort."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "BroadcastSignalAction-no_onport"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "BroadcastSignalAction-no_onport-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "onPort=null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "BroadcastSignalAction-_generalization.0",
                  "general": "InvocationAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "BroadcastSignalAction-signal",
                  "name": "signal",
                  "type": "Signal",
                  "association": "A_signal_broadcastSignalAction"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "BroadcastSignalAction-signal-_ownedComment.0",
                    "body": "The Signal whose instances are to be sent."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "BroadcastSignalAction-signal"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CallAction",
                "name": "CallAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CallAction-_ownedComment.0",
                  "body": "CallAction is an abstract class for Actions that invoke a Behavior with given argument values and (if the invocation is synchronous) receive reply values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CallAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CallAction-argument_pins",
                    "name": "argument_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-argument_pins-_ownedComment.0",
                      "body": "The number of argument InputPins must be the same as the number of input (in and inout) ownedParameters of the called Behavior or Operation. The type, ordering and multiplicity of each argument InputPin must be consistent with the corresponding input Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-argument_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CallAction-argument_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let parameter: OrderedSet(Parameter) = self.inputParameters() in\nargument->size() = parameter->size() and\nSequence{1..argument->size()}->forAll(i | \n\targument->at(i).type.conformsTo(parameter->at(i).type) and \n\targument->at(i).isOrdered = parameter->at(i).isOrdered and\n\targument->at(i).compatibleWith(parameter->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CallAction-result_pins",
                    "name": "result_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-result_pins-_ownedComment.0",
                      "body": "The number of result OutputPins must be the same as the number of output (inout, out and return) ownedParameters of the called Behavior or Operation. The type, ordering and multiplicity of each result OutputPin must be consistent with the corresponding input Parameter."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-result_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CallAction-result_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let parameter: OrderedSet(Parameter) = self.outputParameters() in\nresult->size() = parameter->size() and\nSequence{1..result->size()}->forAll(i | \n\tparameter->at(i).type.conformsTo(result->at(i).type) and \n\tparameter->at(i).isOrdered = result->at(i).isOrdered and\n\tparameter->at(i).compatibleWith(result->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CallAction-synchronous_call",
                    "name": "synchronous_call"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-synchronous_call-_ownedComment.0",
                      "body": "Only synchronous CallActions can have result OutputPins."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-synchronous_call"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CallAction-synchronous_call-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result->notEmpty() implies isSynchronous"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CallAction-_generalization.0",
                  "general": "InvocationAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CallAction-isSynchronous",
                    "name": "isSynchronous"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-isSynchronous-_ownedComment.0",
                      "body": "If true, the call is synchronous and the caller waits for completion of the invoked Behavior. If false, the call is asynchronous and the caller proceeds immediately and cannot receive return values."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-isSynchronous"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "CallAction-isSynchronous-_defaultValue",
                      "value": true
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CallAction-result",
                    "name": "result",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_callAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-result-_ownedComment.0",
                      "body": "The OutputPins on which the reply values from the invocation are placed (if the call is synchronous)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "CallAction-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "CallAction-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallAction-inputParameters",
                    "name": "inputParameters",
                    "isAbstract": true,
                    "isQuery": true
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-inputParameters-_ownedComment.0",
                      "body": "Return the in and inout ownedParameters of the Behavior or Operation being called. (This operation is abstract and should be overridden by subclasses of CallAction.)"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallAction-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallAction-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallAction-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallAction-outputParameters",
                    "name": "outputParameters",
                    "isAbstract": true,
                    "isQuery": true
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallAction-outputParameters-_ownedComment.0",
                      "body": "Return the inout, out and return ownedParameters of the Behavior or Operation being called. (This operation is abstract and should be overridden by subclasses of CallAction.)"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallAction-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallAction-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallAction-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallAction-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CallBehaviorAction",
                "name": "CallBehaviorAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CallBehaviorAction-_ownedComment.0",
                  "body": "A CallBehaviorAction is a CallAction that invokes a Behavior directly. The argument values of the CallBehaviorAction are passed on the input Parameters of the invoked Behavior. If the call is synchronous, the execution of the CallBehaviorAction waits until the execution of the invoked Behavior completes and the values of output Parameters of the Behavior are placed on the result OutputPins. If the call is asynchronous, the CallBehaviorAction completes immediately and no results values can be provided."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CallBehaviorAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "CallBehaviorAction-no_onport",
                  "name": "no_onport"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "CallBehaviorAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CallBehaviorAction-no_onport-_ownedComment.0",
                    "body": "A CallBehaviorAction may not specify onPort."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CallBehaviorAction-no_onport"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "CallBehaviorAction-no_onport-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "onPort=null"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CallBehaviorAction-_generalization.0",
                  "general": "CallAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "CallBehaviorAction-behavior",
                  "name": "behavior",
                  "type": "Behavior",
                  "association": "A_behavior_callBehaviorAction"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CallBehaviorAction-behavior-_ownedComment.0",
                    "body": "The Behavior being invoked."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CallBehaviorAction-behavior"
                    },
                    "_parent": "_"
                  }
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallBehaviorAction-outputParameters",
                    "name": "outputParameters",
                    "isQuery": true,
                    "bodyCondition": "CallBehaviorAction-outputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-outputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallBehaviorAction-outputParameters-_ownedComment.0",
                      "body": "Return the inout, out and return ownedParameters of the Behavior being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallBehaviorAction-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "CallBehaviorAction-outputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "CallBehaviorAction-outputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "CallBehaviorAction-outputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (behavior.outputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallBehaviorAction-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallBehaviorAction-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallBehaviorAction-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallBehaviorAction-inputParameters",
                    "name": "inputParameters",
                    "isQuery": true,
                    "bodyCondition": "CallBehaviorAction-inputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-inputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallBehaviorAction-inputParameters-_ownedComment.0",
                      "body": "Return the in and inout ownedParameters of the Behavior being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallBehaviorAction-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "CallBehaviorAction-inputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "CallBehaviorAction-inputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "CallBehaviorAction-inputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (behavior.inputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallBehaviorAction-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallBehaviorAction-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallBehaviorAction-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CallOperationAction",
                "name": "CallOperationAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CallOperationAction-_ownedComment.0",
                  "body": "A CallOperationAction is a CallAction that transmits an Operation call request to the target object, where it may cause the invocation of associated Behavior. The argument values of the CallOperationAction are passed on the input Parameters of the Operation. If call is synchronous, the execution of the CallOperationAction waits until the execution of the invoked Operation completes and the values of output Parameters of the Operation are placed on the result OutputPins. If the call is asynchronous, the CallOperationAction completes immediately and no results values can be provided."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CallOperationAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "CallOperationAction-type_target_pin",
                  "name": "type_target_pin"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "CallOperationAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CallOperationAction-type_target_pin-_ownedComment.0",
                    "body": "If onPort has no value, the operation must be an owned or inherited feature of the type of the target InputPin, otherwise the Port given by onPort must be an owned or inherited feature of the type of the target InputPin, and the Port must have a required or provided Interface with the operation as an owned or inherited feature."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CallOperationAction-type_target_pin"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "CallOperationAction-type_target_pin-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if onPort=null then  target.type.oclAsType(Classifier).allFeatures()->includes(operation)\nelse target.type.oclAsType(Classifier).allFeatures()->includes(onPort) and onPort.provided->union(onPort.required).allFeatures()->includes(operation)\nendif"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CallOperationAction-_generalization.0",
                  "general": "CallAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CallOperationAction-operation",
                    "name": "operation",
                    "type": "Operation",
                    "association": "A_operation_callOperationAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallOperationAction-operation-_ownedComment.0",
                      "body": "The Operation being invoked."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-operation"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CallOperationAction-target",
                    "name": "target",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_target_callOperationAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallOperationAction-target-_ownedComment.0",
                      "body": "The InputPin that provides the target object to which the Operation call request is sent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-target"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallOperationAction-outputParameters",
                    "name": "outputParameters",
                    "isQuery": true,
                    "bodyCondition": "CallOperationAction-outputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-outputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallOperationAction-outputParameters-_ownedComment.0",
                      "body": "Return the inout, out and return ownedParameters of the Operation being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "CallOperationAction-outputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-outputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "CallOperationAction-outputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (operation.outputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallOperationAction-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallOperationAction-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallOperationAction-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "CallOperationAction-inputParameters",
                    "name": "inputParameters",
                    "isQuery": true,
                    "bodyCondition": "CallOperationAction-inputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-inputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CallOperationAction-inputParameters-_ownedComment.0",
                      "body": "Return the in and inout ownedParameters of the Operation being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "CallOperationAction-inputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "CallOperationAction-inputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "CallOperationAction-inputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (operation.inputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "CallOperationAction-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "CallOperationAction-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "CallOperationAction-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Clause",
                "name": "Clause"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Clause-_ownedComment.0",
                  "body": "A Clause is an Element that represents a single branch of a ConditionalNode, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates to true."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Clause"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Clause-body_output_pins",
                    "name": "body_output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Clause"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-body_output_pins-_ownedComment.0",
                      "body": "The bodyOutput Pins are OutputPins on Actions in the body of the Clause."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-body_output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Clause-body_output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "_'body'.oclAsType(Action).allActions().output->includesAll(bodyOutput)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Clause-decider_output",
                    "name": "decider_output"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Clause"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-decider_output-_ownedComment.0",
                      "body": "The decider Pin must be on an Action in the test section of the Clause and must be of type Boolean with multiplicity 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-decider_output"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Clause-decider_output-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "test.oclAsType(Action).allActions().output->includes(decider) and\ndecider.type = Boolean and\ndecider.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Clause-test_and_body",
                    "name": "test_and_body"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Clause"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-test_and_body-_ownedComment.0",
                      "body": "The test and body parts of a ConditionalNode must be disjoint with each other."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-test_and_body"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Clause-test_and_body-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "test->intersection(_'body')->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "Clause-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-body",
                    "name": "body",
                    "type": "ExecutableNode",
                    "association": "A_body_clause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-body-_ownedComment.0",
                      "body": "The set of ExecutableNodes that are executed if the test evaluates to true and the Clause is chosen over other Clauses within the ConditionalNode that also have tests that evaluate to true."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-body"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Clause-body-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Clause-body-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-bodyOutput",
                    "name": "bodyOutput",
                    "isOrdered": true,
                    "type": "OutputPin",
                    "association": "A_bodyOutput_clause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-bodyOutput-_ownedComment.0",
                      "body": "The OutputPins on Actions within the body section whose values are moved to the result OutputPins of the containing ConditionalNode after execution of the body."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-bodyOutput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Clause-bodyOutput-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Clause-bodyOutput-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-decider",
                    "name": "decider",
                    "type": "OutputPin",
                    "association": "A_decider_clause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-decider-_ownedComment.0",
                      "body": "An OutputPin on an Action in the test section whose Boolean value determines the result of the test."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-decider"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-predecessorClause",
                    "name": "predecessorClause",
                    "type": "Clause",
                    "association": "A_predecessorClause_successorClause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-predecessorClause-_ownedComment.0",
                      "body": "A set of Clauses whose tests must all evaluate to false before this Clause can evaluate its test."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-predecessorClause"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Clause-predecessorClause-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Clause-predecessorClause-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-successorClause",
                    "name": "successorClause",
                    "type": "Clause",
                    "association": "A_predecessorClause_successorClause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-successorClause-_ownedComment.0",
                      "body": "A set of Clauses that may not evaluate their tests unless the test for this Clause evaluates to false."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-successorClause"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "Clause-successorClause-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Clause-successorClause-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "Clause-test",
                    "name": "test",
                    "type": "ExecutableNode",
                    "association": "A_test_clause"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Clause-test-_ownedComment.0",
                      "body": "The set of ExecutableNodes that are executed in order to provide a test result for the Clause."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Clause-test"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "Clause-test-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ClearAssociationAction",
                "name": "ClearAssociationAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ClearAssociationAction-_ownedComment.0",
                  "body": "A ClearAssociationAction is an Action that destroys all links of an Association in which a particular object participates."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ClearAssociationAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClearAssociationAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClearAssociationAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearAssociationAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearAssociationAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClearAssociationAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClearAssociationAction-same_type",
                    "name": "same_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClearAssociationAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearAssociationAction-same_type-_ownedComment.0",
                      "body": "The type of the InputPin must conform to the type of at least one of the memberEnds of the association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearAssociationAction-same_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClearAssociationAction-same_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "association.memberEnd->exists(self.object.type.conformsTo(type))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ClearAssociationAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ClearAssociationAction-association",
                    "name": "association",
                    "type": "Association",
                    "association": "A_association_clearAssociationAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearAssociationAction-association-_ownedComment.0",
                      "body": "The Association to be cleared."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearAssociationAction-association"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ClearAssociationAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_clearAssociationAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearAssociationAction-object-_ownedComment.0",
                      "body": "The InputPin that gives the object whose participation in the Association is to be cleared."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearAssociationAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ClearStructuralFeatureAction",
                "name": "ClearStructuralFeatureAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ClearStructuralFeatureAction-_ownedComment.0",
                  "body": "A ClearStructuralFeatureAction is a StructuralFeatureAction that removes all values of a StructuralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ClearStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClearStructuralFeatureAction-type_of_result",
                    "name": "type_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClearStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearStructuralFeatureAction-type_of_result-_ownedComment.0",
                      "body": "The type of the result OutputPin is the same as the type of the inherited object InputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearStructuralFeatureAction-type_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClearStructuralFeatureAction-type_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result<>null implies result.type = object.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ClearStructuralFeatureAction-multiplicity_of_result",
                    "name": "multiplicity_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ClearStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ClearStructuralFeatureAction-multiplicity_of_result-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin must be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ClearStructuralFeatureAction-multiplicity_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ClearStructuralFeatureAction-multiplicity_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result<>null implies result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ClearStructuralFeatureAction-_generalization.0",
                  "general": "StructuralFeatureAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ClearStructuralFeatureAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_clearStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ClearStructuralFeatureAction-result-_ownedComment.0",
                    "body": "The OutputPin on which is put the input object as modified by the ClearStructuralFeatureAction."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ClearStructuralFeatureAction-result"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "ClearStructuralFeatureAction-result-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ClearVariableAction",
                "name": "ClearVariableAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ClearVariableAction-_ownedComment.0",
                  "body": "A ClearVariableAction is a VariableAction that removes all values of a Variable."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ClearVariableAction"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ClearVariableAction-_generalization.0",
                  "general": "VariableAction"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ConditionalNode",
                "name": "ConditionalNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ConditionalNode-_ownedComment.0",
                  "body": "A ConditionalNode is a StructuredActivityNode that chooses one among some number of alternative collections of ExecutableNodes to execute."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ConditionalNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-result_no_incoming",
                    "name": "result_no_incoming"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-result_no_incoming-_ownedComment.0",
                      "body": "The result OutputPins have no incoming edges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-result_no_incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-result_no_incoming-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.incoming->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-no_input_pins",
                    "name": "no_input_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-no_input_pins-_ownedComment.0",
                      "body": "A ConditionalNode has no InputPins."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-no_input_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-no_input_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "input->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-one_clause_with_executable_node",
                    "name": "one_clause_with_executable_node"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-one_clause_with_executable_node-_ownedComment.0",
                      "body": "No ExecutableNode in the ConditionNode may appear in the test or body part of more than one clause of a ConditionalNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-one_clause_with_executable_node"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-one_clause_with_executable_node-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)->forAll(n | \n\tself.clause->select(test->union(_'body')->includes(n))->size()=1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-matching_output_pins",
                    "name": "matching_output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-matching_output_pins-_ownedComment.0",
                      "body": "Each clause of a ConditionalNode must have the same number of bodyOutput pins as the ConditionalNode has result OutputPins, and each clause bodyOutput Pin must be compatible with the corresponding result OutputPin (by positional order) in type, multiplicity, ordering, and uniqueness."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-matching_output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-matching_output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "clause->forAll(\n\tbodyOutput->size()=self.result->size() and\n\tSequence{1..self.result->size()}->forAll(i |\n\t\tbodyOutput->at(i).type.conformsTo(result->at(i).type) and\n\t\tbodyOutput->at(i).isOrdered = result->at(i).isOrdered and\n\t\tbodyOutput->at(i).isUnique = result->at(i).isUnique and\n\t\tbodyOutput->at(i).compatibleWith(result->at(i))))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-executable_nodes",
                    "name": "executable_nodes"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-executable_nodes-_ownedComment.0",
                      "body": "The union of the ExecutableNodes in the test and body parts of all clauses must be the same as the subset of nodes contained in the ConditionalNode (considered as a StructuredActivityNode) that are ExecutableNodes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-executable_nodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-executable_nodes-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "clause.test->union(clause._'body') = node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-clause_no_predecessor",
                    "name": "clause_no_predecessor"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-clause_no_predecessor-_ownedComment.0",
                      "body": "No two clauses within a ConditionalNode may be predecessorClauses of each other, either directly or indirectly."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-clause_no_predecessor"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-clause_no_predecessor-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "clause->closure(predecessorClause)->intersection(clause)->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ConditionalNode-_generalization.0",
                  "general": "StructuredActivityNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConditionalNode-clause",
                    "name": "clause",
                    "aggregation": "composite",
                    "type": "Clause",
                    "association": "A_clause_conditionalNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-clause-_ownedComment.0",
                      "body": "The set of Clauses composing the ConditionalNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-clause"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConditionalNode-clause-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConditionalNode-isAssured",
                    "name": "isAssured"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-isAssured-_ownedComment.0",
                      "body": "If true, the modeler asserts that the test for at least one Clause of the ConditionalNode will succeed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-isAssured"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ConditionalNode-isAssured-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConditionalNode-isDeterminate",
                    "name": "isDeterminate"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-isDeterminate-_ownedComment.0",
                      "body": "If true, the modeler asserts that the test for at most one Clause of the ConditionalNode will succeed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-isDeterminate"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ConditionalNode-isDeterminate-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ConditionalNode-result",
                    "name": "result",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_conditionalNode"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode-structuredNodeOutput"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ConditionalNode-result-_ownedComment.0",
                      "body": "The OutputPins that onto which are moved values from the bodyOutputs of the Clause selected for execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ConditionalNode-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConditionalNode-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConditionalNode-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ConditionalNode-allActions",
                  "name": "allActions",
                  "isQuery": true,
                  "bodyCondition": "ConditionalNode-allActions-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "Action-allActions"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ConditionalNode-allActions-_ownedComment.0",
                    "body": "Return only this ConditionalNode. This prevents Actions within the ConditionalNode from having their OutputPins used as bodyOutputs or decider Pins in containing LoopNodes or ConditionalNodes."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode-allActions"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ConditionalNode-allActions-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ConditionalNode-allActions"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ConditionalNode-allActions-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (self->asSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ConditionalNode-allActions-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Action"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ConditionalNode-allActions-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ConditionalNode-allActions-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CreateLinkAction",
                "name": "CreateLinkAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CreateLinkAction-_ownedComment.0",
                  "body": "A CreateLinkAction is a WriteLinkAction for creating links."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CreateLinkAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "CreateLinkAction-association_not_abstract",
                  "name": "association_not_abstract"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "CreateLinkAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CreateLinkAction-association_not_abstract-_ownedComment.0",
                    "body": "The Association cannot be an abstract Classifier."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkAction-association_not_abstract"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "CreateLinkAction-association_not_abstract-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "not self.association().isAbstract"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CreateLinkAction-_generalization.0",
                  "general": "WriteLinkAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "CreateLinkAction-endData",
                  "name": "endData",
                  "aggregation": "composite",
                  "type": "LinkEndCreationData",
                  "association": "A_endData_createLinkAction"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "LinkAction-endData"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CreateLinkAction-endData-_ownedComment.0",
                    "body": "The LinkEndData that specifies the values to be placed on the Association ends for the new link."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkAction-endData"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "CreateLinkAction-endData-_lowerValue",
                    "value": 2
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "CreateLinkAction-endData-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CreateLinkObjectAction",
                "name": "CreateLinkObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CreateLinkObjectAction-_ownedComment.0",
                  "body": "A CreateLinkObjectAction is a CreateLinkAction for creating link objects (AssociationClasse instances)."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CreateLinkObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateLinkObjectAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateLinkObjectAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateLinkObjectAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateLinkObjectAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateLinkObjectAction-type_of_result",
                    "name": "type_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateLinkObjectAction-type_of_result-_ownedComment.0",
                      "body": "The type of the result OutputPin must be the same as the Association of the CreateLinkObjectAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateLinkObjectAction-type_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateLinkObjectAction-type_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = association()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateLinkObjectAction-association_class",
                    "name": "association_class"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateLinkObjectAction-association_class-_ownedComment.0",
                      "body": "The Association must be an AssociationClass."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateLinkObjectAction-association_class"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateLinkObjectAction-association_class-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.association().oclIsKindOf(AssociationClass)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CreateLinkObjectAction-_generalization.0",
                  "general": "CreateLinkAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "CreateLinkObjectAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_createLinkObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "CreateLinkObjectAction-result-_ownedComment.0",
                    "body": "The output pin on which the newly created link object is placed."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateLinkObjectAction-result"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "CreateObjectAction",
                "name": "CreateObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "CreateObjectAction-_ownedComment.0",
                  "body": "A CreateObjectAction is an Action that creates an instance of the specified Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "CreateObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateObjectAction-classifier_not_abstract",
                    "name": "classifier_not_abstract"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-classifier_not_abstract-_ownedComment.0",
                      "body": "The classifier cannot be abstract."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-classifier_not_abstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateObjectAction-classifier_not_abstract-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not classifier.isAbstract "
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateObjectAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateObjectAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateObjectAction-classifier_not_association_class",
                    "name": "classifier_not_association_class"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-classifier_not_association_class-_ownedComment.0",
                      "body": "The classifier cannot be an AssociationClass."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-classifier_not_association_class"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateObjectAction-classifier_not_association_class-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not classifier.oclIsKindOf(AssociationClass)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "CreateObjectAction-same_type",
                    "name": "same_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "CreateObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-same_type-_ownedComment.0",
                      "body": "The type of the result OutputPin must be the same as the classifier of the CreateObjectAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-same_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "CreateObjectAction-same_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = classifier"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "CreateObjectAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CreateObjectAction-classifier",
                    "name": "classifier",
                    "type": "Classifier",
                    "association": "A_classifier_createObjectAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-classifier-_ownedComment.0",
                      "body": "The Classifier to be instantiated."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-classifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "CreateObjectAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_createObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "CreateObjectAction-result-_ownedComment.0",
                      "body": "The OutputPin on which the newly created object is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "CreateObjectAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DestroyLinkAction",
                "name": "DestroyLinkAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DestroyLinkAction-_ownedComment.0",
                  "body": "A DestroyLinkAction is a WriteLinkAction that destroys links (including link objects)."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DestroyLinkAction"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DestroyLinkAction-_generalization.0",
                  "general": "WriteLinkAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "DestroyLinkAction-endData",
                  "name": "endData",
                  "aggregation": "composite",
                  "type": "LinkEndDestructionData",
                  "association": "A_endData_destroyLinkAction"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "LinkAction-endData"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "DestroyLinkAction-endData-_ownedComment.0",
                    "body": "The LinkEndData that the values of the Association ends for the links to be destroyed."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "DestroyLinkAction-endData"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "DestroyLinkAction-endData-_lowerValue",
                    "value": 2
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "DestroyLinkAction-endData-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "DestroyObjectAction",
                "name": "DestroyObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "DestroyObjectAction-_ownedComment.0",
                  "body": "A DestroyObjectAction is an Action that destroys objects."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "DestroyObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DestroyObjectAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DestroyObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DestroyObjectAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the targe IinputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DestroyObjectAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DestroyObjectAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "target.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "DestroyObjectAction-no_type",
                    "name": "no_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "DestroyObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DestroyObjectAction-no_type-_ownedComment.0",
                      "body": "The target InputPin has no type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DestroyObjectAction-no_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "DestroyObjectAction-no_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "target.type= null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "DestroyObjectAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DestroyObjectAction-isDestroyLinks",
                    "name": "isDestroyLinks"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DestroyObjectAction-isDestroyLinks-_ownedComment.0",
                      "body": "Specifies whether links in which the object participates are destroyed along with the object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DestroyObjectAction-isDestroyLinks"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "DestroyObjectAction-isDestroyLinks-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DestroyObjectAction-isDestroyOwnedObjects",
                    "name": "isDestroyOwnedObjects"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DestroyObjectAction-isDestroyOwnedObjects-_ownedComment.0",
                      "body": "Specifies whether objects owned by the object (via composition) are destroyed along with the object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DestroyObjectAction-isDestroyOwnedObjects"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "DestroyObjectAction-isDestroyOwnedObjects-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "DestroyObjectAction-target",
                    "name": "target",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_target_destroyObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "DestroyObjectAction-target-_ownedComment.0",
                      "body": "The InputPin providing the object to be destroyed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "DestroyObjectAction-target"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExpansionNode",
                "name": "ExpansionNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExpansionNode-_ownedComment.0",
                  "body": "An ExpansionNode is an ObjectNode used to indicate a collection input or output for an ExpansionRegion. A collection input of an ExpansionRegion contains a collection that is broken into its individual elements inside the region, whose content is executed once per element. A collection output of an ExpansionRegion combines individual elements produced by the execution of the region into a collection for use outside the region."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExpansionNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "ExpansionNode-region_as_input_or_output",
                  "name": "region_as_input_or_output"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "ExpansionNode"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ExpansionNode-region_as_input_or_output-_ownedComment.0",
                    "body": "One of regionAsInput or regionAsOutput must be non-empty, but not both."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ExpansionNode-region_as_input_or_output"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "ExpansionNode-region_as_input_or_output-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "regionAsInput->notEmpty() xor regionAsOutput->notEmpty()"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExpansionNode-_generalization.0",
                  "general": "ObjectNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExpansionNode-regionAsInput",
                    "name": "regionAsInput",
                    "type": "ExpansionRegion",
                    "association": "A_inputElement_regionAsInput"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionNode-regionAsInput-_ownedComment.0",
                      "body": "The ExpansionRegion for which the ExpansionNode is an input."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionNode-regionAsInput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ExpansionNode-regionAsInput-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExpansionNode-regionAsOutput",
                    "name": "regionAsOutput",
                    "type": "ExpansionRegion",
                    "association": "A_outputElement_regionAsOutput"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionNode-regionAsOutput-_ownedComment.0",
                      "body": "The ExpansionRegion for which the ExpansionNode is an output."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionNode-regionAsOutput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ExpansionNode-regionAsOutput-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ExpansionRegion",
                "name": "ExpansionRegion"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ExpansionRegion-_ownedComment.0",
                  "body": "An ExpansionRegion is a StructuredActivityNode that executes its content multiple times corresponding to elements of input collection(s)."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ExpansionRegion"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ExpansionRegion-_generalization.0",
                  "general": "StructuredActivityNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExpansionRegion-inputElement",
                    "name": "inputElement",
                    "type": "ExpansionNode",
                    "association": "A_inputElement_regionAsInput"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionRegion-inputElement-_ownedComment.0",
                      "body": "The ExpansionNodes that hold the input collections for the ExpansionRegion."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionRegion-inputElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ExpansionRegion-inputElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExpansionRegion-mode",
                    "name": "mode",
                    "type": "ExpansionKind"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionRegion-mode-_ownedComment.0",
                      "body": "The mode in which the ExpansionRegion executes its contents. If parallel, executions are concurrent. If iterative, executions are sequential. If stream, a stream of values flows into a single execution."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionRegion-mode"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:InstanceValue",
                      "xmi:id": "ExpansionRegion-mode-_defaultValue",
                      "type": "ExpansionKind",
                      "instance": "ExpansionKind-iterative"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ExpansionRegion-outputElement",
                    "name": "outputElement",
                    "type": "ExpansionNode",
                    "association": "A_outputElement_regionAsOutput"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ExpansionRegion-outputElement-_ownedComment.0",
                      "body": "The ExpansionNodes that form the output collections of the ExpansionRegion."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ExpansionRegion-outputElement"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ExpansionRegion-outputElement-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ExpansionRegion-outputElement-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InputPin",
                "name": "InputPin"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InputPin-_ownedComment.0",
                  "body": "An InputPin is a Pin that holds input values to be consumed by an Action."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InputPin"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "InputPin-outgoing_edges_structured_only",
                  "name": "outgoing_edges_structured_only"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "InputPin"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "InputPin-outgoing_edges_structured_only-_ownedComment.0",
                    "body": "An InputPin may have outgoing ActivityEdges only when it is owned by a StructuredActivityNode, and these edges must target a node contained (directly or indirectly) in the owning StructuredActivityNode."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "InputPin-outgoing_edges_structured_only"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "InputPin-outgoing_edges_structured_only-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "outgoing->notEmpty() implies\n\taction<>null and\n\taction.oclIsKindOf(StructuredActivityNode) and\n\taction.oclAsType(StructuredActivityNode).allOwnedNodes()->includesAll(outgoing.target)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InputPin-_generalization.0",
                  "general": "Pin"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "InvocationAction",
                "name": "InvocationAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "InvocationAction-_ownedComment.0",
                  "body": "InvocationAction is an abstract class for the various actions that request Behavior invocation.\r\n"
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "InvocationAction"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "InvocationAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InvocationAction-argument",
                    "name": "argument",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_argument_invocationAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InvocationAction-argument-_ownedComment.0",
                      "body": "The InputPins that provide the argument values passed in the invocation request."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InvocationAction-argument"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InvocationAction-argument-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "InvocationAction-argument-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "InvocationAction-onPort",
                    "name": "onPort",
                    "type": "Port",
                    "association": "A_onPort_invocationAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "InvocationAction-onPort-_ownedComment.0",
                      "body": "For CallOperationActions, SendSignalActions, and SendObjectActions, an optional Port of the target object through which the invocation request is sent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "InvocationAction-onPort"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "InvocationAction-onPort-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LinkAction",
                "name": "LinkAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LinkAction-_ownedComment.0",
                  "body": "LinkAction is an abstract class for all Actions that identify the links to be acted on using LinkEndData."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkAction-same_pins",
                    "name": "same_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkAction-same_pins-_ownedComment.0",
                      "body": "The inputValue InputPins is the same as the union of all the InputPins referenced by the endData."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkAction-same_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkAction-same_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "inputValue->asBag()=endData.allPins()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkAction-same_association",
                    "name": "same_association"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkAction-same_association-_ownedComment.0",
                      "body": "The ends of the endData must all be from the same Association and include all and only the memberEnds of that association."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkAction-same_association"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkAction-same_association-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "endData.end = self.association().memberEnd->asBag()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkAction-not_static",
                    "name": "not_static"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkAction-not_static-_ownedComment.0",
                      "body": "The ends of the endData must not be static."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkAction-not_static"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkAction-not_static-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "endData->forAll(not end.isStatic)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LinkAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkAction-endData",
                    "name": "endData",
                    "aggregation": "composite",
                    "type": "LinkEndData",
                    "association": "A_endData_linkAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkAction-endData-_ownedComment.0",
                      "body": "The LinkEndData identifying the values on the ends of the links acting on by this LinkAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkAction-endData"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkAction-endData-_lowerValue",
                      "value": 2
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkAction-endData-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkAction-inputValue",
                    "name": "inputValue",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_inputValue_linkAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkAction-inputValue-_ownedComment.0",
                      "body": "InputPins used by the LinkEndData of the LinkAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkAction-inputValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkAction-inputValue-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "LinkAction-association",
                  "name": "association",
                  "isQuery": true,
                  "bodyCondition": "LinkAction-association-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkAction-association-_ownedComment.0",
                    "body": "Returns the Association acted on by this LinkAction."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkAction-association"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkAction-association-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkAction-association"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkAction-association-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (endData->asSequence()->first().end.association)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "LinkAction-association-result",
                    "name": "result",
                    "direction": "return",
                    "type": "Association"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LinkEndCreationData",
                "name": "LinkEndCreationData"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LinkEndCreationData-_ownedComment.0",
                  "body": "LinkEndCreationData is LinkEndData used to provide values for one end of a link to be created by a CreateLinkAction."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkEndCreationData"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "LinkEndCreationData-insertAt_pin",
                  "name": "insertAt_pin"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkEndCreationData"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkEndCreationData-insertAt_pin-_ownedComment.0",
                    "body": "LinkEndCreationData for ordered Association ends must have a single insertAt InputPin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, if isReplaceAll=false, and must have no InputPin for the insertion point when the association ends are unordered."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndCreationData-insertAt_pin"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "LinkEndCreationData-insertAt_pin-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if  not end.isOrdered\nthen insertAt = null\nelse\n\tnot isReplaceAll=false implies\n\tinsertAt <> null and insertAt->forAll(type=UnlimitedNatural and is(1,1))\nendif\n"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LinkEndCreationData-_generalization.0",
                  "general": "LinkEndData"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndCreationData-insertAt",
                    "name": "insertAt",
                    "type": "InputPin",
                    "association": "A_insertAt_linkEndCreationData"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndCreationData-insertAt-_ownedComment.0",
                      "body": "For ordered Association ends, the InputPin that provides the position where the new link should be inserted or where an existing link should be moved to. The type of the insertAt InputPin is UnlimitedNatural, but the input cannot be zero. It is omitted for Association ends that are not ordered."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndCreationData-insertAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndCreationData-insertAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndCreationData-isReplaceAll",
                    "name": "isReplaceAll"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndCreationData-isReplaceAll-_ownedComment.0",
                      "body": "Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndCreationData-isReplaceAll"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "LinkEndCreationData-isReplaceAll-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "LinkEndCreationData-allPins",
                  "name": "allPins",
                  "isQuery": true,
                  "bodyCondition": "LinkEndCreationData-allPins-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "LinkEndData-allPins"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkEndCreationData-allPins-_ownedComment.0",
                    "body": "Adds the insertAt InputPin (if any) to the set of all Pins."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndCreationData-allPins"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndCreationData-allPins-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndCreationData-allPins"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndCreationData-allPins-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (self.LinkEndData::allPins()->including(insertAt))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "LinkEndCreationData-allPins-result",
                    "isUnique": false,
                    "name": "result",
                    "direction": "return",
                    "type": "InputPin"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndCreationData-allPins-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkEndCreationData-allPins-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LinkEndData",
                "name": "LinkEndData"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LinkEndData-_ownedComment.0",
                  "body": "LinkEndData is an Element that identifies on end of a link to be read or written by a LinkAction. As a link (that is not a link object) cannot be passed as a runtime value to or from an Action, it is instead identified by its end objects and qualifier values, if any. A LinkEndData instance provides these values for a single Association end."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkEndData"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-same_type",
                    "name": "same_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-same_type-_ownedComment.0",
                      "body": "The type of the value InputPin conforms to the type of the Association end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-same_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-same_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value<>null implies value.type.conformsTo(end.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the value InputPin must be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value<>null implies value.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-end_object_input_pin",
                    "name": "end_object_input_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-end_object_input_pin-_ownedComment.0",
                      "body": "The value InputPin is not also the qualifier value InputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-end_object_input_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-end_object_input_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value->excludesAll(qualifier.value)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-property_is_association_end",
                    "name": "property_is_association_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-property_is_association_end-_ownedComment.0",
                      "body": "The Property must be an Association memberEnd."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-property_is_association_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-property_is_association_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end.association <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-qualifiers",
                    "name": "qualifiers"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-qualifiers-_ownedComment.0",
                      "body": "The qualifiers must be qualifiers of the Association end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-qualifiers"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-qualifiers-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end.qualifier->includesAll(qualifier.qualifier)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LinkEndData-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndData-end",
                    "name": "end",
                    "type": "Property",
                    "association": "A_end_linkEndData"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-end-_ownedComment.0",
                      "body": "The Association end for which this LinkEndData specifies values."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-end"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndData-qualifier",
                    "name": "qualifier",
                    "aggregation": "composite",
                    "type": "QualifierValue",
                    "association": "A_qualifier_linkEndData"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-qualifier-_ownedComment.0",
                      "body": "A set of QualifierValues used to provide values for the qualifiers of the end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-qualifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndData-qualifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkEndData-qualifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndData-value",
                    "name": "value",
                    "type": "InputPin",
                    "association": "A_value_linkEndData"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndData-value-_ownedComment.0",
                      "body": "The InputPin that provides the specified value for the given end. This InputPin is omitted if the LinkEndData specifies the \"open\" end for a ReadLinkAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndData-value"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndData-value-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "LinkEndData-allPins",
                  "name": "allPins",
                  "isQuery": true,
                  "bodyCondition": "LinkEndData-allPins-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkEndData-allPins-_ownedComment.0",
                    "body": "Returns all the InputPins referenced by this LinkEndData. By default this includes the value and qualifier InputPins, but subclasses may override the operation to add other InputPins."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData-allPins"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndData-allPins-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndData-allPins"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndData-allPins-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (value->asBag()->union(qualifier.value))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "LinkEndData-allPins-result",
                    "isUnique": false,
                    "name": "result",
                    "direction": "return",
                    "type": "InputPin"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndData-allPins-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkEndData-allPins-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LinkEndDestructionData",
                "name": "LinkEndDestructionData"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LinkEndDestructionData-_ownedComment.0",
                  "body": "LinkEndDestructionData is LinkEndData used to provide values for one end of a link to be destroyed by a DestroyLinkAction."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkEndDestructionData"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "LinkEndDestructionData-destroyAt_pin",
                  "name": "destroyAt_pin"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "LinkEndDestructionData"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkEndDestructionData-destroyAt_pin-_ownedComment.0",
                    "body": "LinkEndDestructionData for ordered, nonunique Association ends must have a single destroyAt InputPin if isDestroyDuplicates is false, which must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no destroyAt input pin."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndDestructionData-destroyAt_pin"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "LinkEndDestructionData-destroyAt_pin-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if  not end.isOrdered or end.isUnique or isDestroyDuplicates\nthen destroyAt = null\nelse\n\tdestroyAt <> null and \n\tdestroyAt->forAll(type=UnlimitedNatural and is(1,1))\nendif\n"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LinkEndDestructionData-_generalization.0",
                  "general": "LinkEndData"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndDestructionData-destroyAt",
                    "name": "destroyAt",
                    "type": "InputPin",
                    "association": "A_destroyAt_linkEndDestructionData"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndDestructionData-destroyAt-_ownedComment.0",
                      "body": "The InputPin that provides the position of an existing link to be destroyed in an ordered, nonunique Association end. The type of the destroyAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndDestructionData-destroyAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndDestructionData-destroyAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LinkEndDestructionData-isDestroyDuplicates",
                    "name": "isDestroyDuplicates"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LinkEndDestructionData-isDestroyDuplicates-_ownedComment.0",
                      "body": "Specifies whether to destroy duplicates of the value in nonunique Association ends."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LinkEndDestructionData-isDestroyDuplicates"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "LinkEndDestructionData-isDestroyDuplicates-_defaultValue"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "LinkEndDestructionData-allPins",
                  "name": "allPins",
                  "isQuery": true,
                  "bodyCondition": "LinkEndDestructionData-allPins-spec"
                },
                "_parent": "_",
                "redefinedOperation": {
                  "_attributes": {
                    "xmi:idref": "LinkEndData-allPins"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "LinkEndDestructionData-allPins-_ownedComment.0",
                    "body": "Adds the destroyAt InputPin (if any) to the set of all Pins."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndDestructionData-allPins"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LinkEndDestructionData-allPins-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LinkEndDestructionData-allPins"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LinkEndDestructionData-allPins-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (self.LinkEndData::allPins()->including(destroyAt))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "LinkEndDestructionData-allPins-result",
                    "isUnique": false,
                    "name": "result",
                    "direction": "return",
                    "type": "InputPin"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LinkEndDestructionData-allPins-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LinkEndDestructionData-allPins-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "LoopNode",
                "name": "LoopNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "LoopNode-_ownedComment.0",
                  "body": "A LoopNode is a StructuredActivityNode that represents an iterative loop with setup, test, and body sections."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "LoopNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-result_no_incoming",
                    "name": "result_no_incoming"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-result_no_incoming-_ownedComment.0",
                      "body": "The result OutputPins have no incoming edges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-result_no_incoming"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-result_no_incoming-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.incoming->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-input_edges",
                    "name": "input_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-input_edges-_ownedComment.0",
                      "body": "The loopVariableInputs must not have outgoing edges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-input_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-input_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "loopVariableInput.outgoing->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-executable_nodes",
                    "name": "executable_nodes"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-executable_nodes-_ownedComment.0",
                      "body": "The union of the ExecutableNodes in the setupPart, test and bodyPart of a LoopNode must be the same as the subset of nodes contained in the LoopNode (considered as a StructuredActivityNode) that are ExecutableNodes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-executable_nodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-executable_nodes-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "setupPart->union(test)->union(bodyPart)=node->select(oclIsKindOf(ExecutableNode)).oclAsType(ExecutableNode)->asSet()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-body_output_pins",
                    "name": "body_output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-body_output_pins-_ownedComment.0",
                      "body": "The bodyOutput pins are OutputPins on Actions in the body of the LoopNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-body_output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-body_output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "bodyPart.oclAsType(Action).allActions().output->includesAll(bodyOutput)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-setup_test_and_body",
                    "name": "setup_test_and_body"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-setup_test_and_body-_ownedComment.0",
                      "body": "The test and body parts of a ConditionalNode must be disjoint with each other."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-setup_test_and_body"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-setup_test_and_body-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "setupPart->intersection(test)->isEmpty() and\nsetupPart->intersection(bodyPart)->isEmpty() and\ntest->intersection(bodyPart)->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-matching_output_pins",
                    "name": "matching_output_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-matching_output_pins-_ownedComment.0",
                      "body": "A LoopNode must have the same number of bodyOutput Pins as loopVariables, and each bodyOutput Pin must be compatible with the corresponding loopVariable (by positional order) in type, multiplicity, ordering and uniqueness."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-matching_output_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-matching_output_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "bodyOutput->size()=loopVariable->size() and\nSequence{1..loopVariable->size()}->forAll(i |\n\tbodyOutput->at(i).type.conformsTo(loopVariable->at(i).type) and\n\tbodyOutput->at(i).isOrdered = loopVariable->at(i).isOrdered and\n\tbodyOutput->at(i).isUnique = loopVariable->at(i).isUnique and\n\tloopVariable->at(i).includesMultiplicity(bodyOutput->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-matching_loop_variables",
                    "name": "matching_loop_variables"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-matching_loop_variables-_ownedComment.0",
                      "body": "A LoopNode must have the same number of loopVariableInputs and loopVariables, and they must match in type, uniqueness and multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-matching_loop_variables"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-matching_loop_variables-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "loopVariableInput->size()=loopVariable->size() and\nloopVariableInput.type=loopVariable.type and\nloopVariableInput.isUnique=loopVariable.isUnique and\nloopVariableInput.lower=loopVariable.lower and\nloopVariableInput.upper=loopVariable.upper"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-matching_result_pins",
                    "name": "matching_result_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-matching_result_pins-_ownedComment.0",
                      "body": "A LoopNode must have the same number of result OutputPins and loopVariables, and they must match in type, uniqueness and multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-matching_result_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-matching_result_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result->size()=loopVariable->size() and\nresult.type=loopVariable.type and\nresult.isUnique=loopVariable.isUnique and\nresult.lower=loopVariable.lower and\nresult.upper=loopVariable.upper"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "LoopNode-loop_variable_outgoing",
                    "name": "loop_variable_outgoing"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "LoopNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-loop_variable_outgoing-_ownedComment.0",
                      "body": "All ActivityEdges outgoing from loopVariable OutputPins must have targets within the LoopNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-loop_variable_outgoing"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "LoopNode-loop_variable_outgoing-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "allOwnedNodes()->includesAll(loopVariable.outgoing.target)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "LoopNode-_generalization.0",
                  "general": "StructuredActivityNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-bodyOutput",
                    "name": "bodyOutput",
                    "isOrdered": true,
                    "type": "OutputPin",
                    "association": "A_bodyOutput_loopNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-bodyOutput-_ownedComment.0",
                      "body": "The OutputPins on Actions within the bodyPart, the values of which are moved to the loopVariable OutputPins after the completion of each execution of the bodyPart, before the next iteration of the loop begins or before the loop exits."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-bodyOutput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-bodyOutput-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-bodyOutput-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-bodyPart",
                    "name": "bodyPart",
                    "type": "ExecutableNode",
                    "association": "A_bodyPart_loopNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-bodyPart-_ownedComment.0",
                      "body": "The set of ExecutableNodes that perform the repetitive computations of the loop. The bodyPart is executed as long as the test section produces a true value."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-bodyPart"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-bodyPart-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-bodyPart-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-decider",
                    "name": "decider",
                    "type": "OutputPin",
                    "association": "A_decider_loopNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-decider-_ownedComment.0",
                      "body": "An OutputPin on an Action in the test section whose Boolean value determines whether to continue executing the loop bodyPart."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-decider"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-isTestedFirst",
                    "name": "isTestedFirst"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-isTestedFirst-_ownedComment.0",
                      "body": "If true, the test is performed before the first execution of the bodyPart. If false, the bodyPart is executed once before the test is performed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-isTestedFirst"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "LoopNode-isTestedFirst-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-loopVariable",
                    "name": "loopVariable",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_loopVariable_loopNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Element-ownedElement"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-loopVariable-_ownedComment.0",
                      "body": "A list of OutputPins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are moved to the result OutputPins of the loop."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-loopVariable"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-loopVariable-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-loopVariable-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-loopVariableInput",
                    "name": "loopVariableInput",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_loopVariableInput_loopNode"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode-structuredNodeInput"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-loopVariableInput-_ownedComment.0",
                      "body": "A list of InputPins whose values are moved into the loopVariable Pins before the first iteration of the loop."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-loopVariableInput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-loopVariableInput-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-loopVariableInput-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-result",
                    "name": "result",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_loopNode"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode-structuredNodeOutput"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-result-_ownedComment.0",
                      "body": "A list of OutputPins that receive the loopVariable values after the last iteration of the loop and constitute the output of the LoopNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-setupPart",
                    "name": "setupPart",
                    "type": "ExecutableNode",
                    "association": "A_setupPart_loopNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-setupPart-_ownedComment.0",
                      "body": "The set of ExecutableNodes executed before the first iteration of the loop, in order to initialize values or perform other setup computations."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-setupPart"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "LoopNode-setupPart-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-setupPart-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "LoopNode-test",
                    "name": "test",
                    "type": "ExecutableNode",
                    "association": "A_test_loopNode"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-test-_ownedComment.0",
                      "body": "The set of ExecutableNodes executed in order to provide the test result for the loop."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-test"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "LoopNode-test-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LoopNode-allActions",
                    "name": "allActions",
                    "isQuery": true,
                    "bodyCondition": "LoopNode-allActions-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Action-allActions"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-allActions-_ownedComment.0",
                      "body": "Return only this LoopNode. This prevents Actions within the LoopNode from having their OutputPins used as bodyOutputs or decider Pins in containing LoopNodes or ConditionalNodes."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-allActions"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LoopNode-allActions-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-allActions"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LoopNode-allActions-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LoopNode-allActions-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Action"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "LoopNode-allActions-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "LoopNode-allActions-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "LoopNode-sourceNodes",
                    "name": "sourceNodes",
                    "isQuery": true,
                    "bodyCondition": "LoopNode-sourceNodes-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode-sourceNodes"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "LoopNode-sourceNodes-_ownedComment.0",
                      "body": "Return the loopVariable OutputPins in addition to other source nodes for the LoopNode as a StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-sourceNodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "LoopNode-sourceNodes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "LoopNode-sourceNodes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "LoopNode-sourceNodes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.StructuredActivityNode::sourceNodes()->union(loopVariable))"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "LoopNode-sourceNodes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ActivityNode"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "LoopNode-sourceNodes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "LoopNode-sourceNodes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OpaqueAction",
                "name": "OpaqueAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OpaqueAction-_ownedComment.0",
                  "body": "An OpaqueAction is an Action whose functionality is not specified within UML."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OpaqueAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "OpaqueAction-language_body_size",
                  "name": "language_body_size"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "OpaqueAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "OpaqueAction-language_body_size-_ownedComment.0",
                    "body": "If the language attribute is not empty, then the size of the body and language lists must be the same."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "OpaqueAction-language_body_size"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "OpaqueAction-language_body_size-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "language->notEmpty() implies (_'body'->size() = language->size())"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OpaqueAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueAction-body",
                    "name": "body",
                    "isOrdered": true,
                    "isUnique": false
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueAction-body-_ownedComment.0",
                      "body": "Provides a textual specification of the functionality of the Action, in one or more languages other than UML."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueAction-body"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueAction-body-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueAction-body-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueAction-inputValue",
                    "name": "inputValue",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_inputValue_opaqueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueAction-inputValue-_ownedComment.0",
                      "body": "The InputPins providing inputs to the OpaqueAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueAction-inputValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueAction-inputValue-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueAction-inputValue-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueAction-language",
                    "name": "language",
                    "isOrdered": true
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#String"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueAction-language-_ownedComment.0",
                      "body": "If provided, a specification of the language used for each of the body Strings."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueAction-language"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueAction-language-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueAction-language-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "OpaqueAction-outputValue",
                    "name": "outputValue",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_outputValue_opaqueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "OpaqueAction-outputValue-_ownedComment.0",
                      "body": "The OutputPins on which the OpaqueAction provides outputs."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "OpaqueAction-outputValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "OpaqueAction-outputValue-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "OpaqueAction-outputValue-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "OutputPin",
                "name": "OutputPin"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "OutputPin-_ownedComment.0",
                  "body": "An OutputPin is a Pin that holds output values produced by an Action."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "OutputPin"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "OutputPin-incoming_edges_structured_only",
                  "name": "incoming_edges_structured_only"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "OutputPin"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "OutputPin-incoming_edges_structured_only-_ownedComment.0",
                    "body": "An OutputPin may have incoming ActivityEdges only when it is owned by a StructuredActivityNode, and these edges must have sources contained (directly or indirectly) in the owning StructuredActivityNode."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "OutputPin-incoming_edges_structured_only"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "OutputPin-incoming_edges_structured_only-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "incoming->notEmpty() implies\n\taction<>null and\n\taction.oclIsKindOf(StructuredActivityNode) and\n\taction.oclAsType(StructuredActivityNode).allOwnedNodes()->includesAll(incoming.source)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "OutputPin-_generalization.0",
                  "general": "Pin"
                },
                "_parent": "_"
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "Pin",
                "name": "Pin",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "Pin-_ownedComment.0",
                  "body": "A Pin is an ObjectNode and MultiplicityElement that provides input values to an Action or accepts output values from an Action."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "Pin"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pin-control_pins",
                    "name": "control_pins"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pin-control_pins-_ownedComment.0",
                      "body": "A control Pin has a control type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pin-control_pins"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pin-control_pins-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "isControl implies isControlType"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "Pin-not_unique",
                    "name": "not_unique"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "Pin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "Pin-not_unique-_ownedComment.0",
                      "body": "Pin multiplicity is not unique."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "Pin-not_unique"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "Pin-not_unique-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not isUnique"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Pin-_generalization.1",
                    "general": "ObjectNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "Pin-_generalization.0",
                    "general": "MultiplicityElement"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "Pin-isControl",
                  "name": "isControl"
                },
                "_parent": "_",
                "type": {
                  "_attributes": {
                    "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "Pin-isControl-_ownedComment.0",
                    "body": "Indicates whether the Pin provides data to the Action or just controls how the Action executes."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "Pin-isControl"
                    },
                    "_parent": "_"
                  }
                },
                "defaultValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralBoolean",
                    "xmi:id": "Pin-isControl-_defaultValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "QualifierValue",
                "name": "QualifierValue"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "QualifierValue-_ownedComment.0",
                  "body": "A QualifierValue is an Element that is used as part of LinkEndData to provide the value for a single qualifier of the end given by the LinkEndData."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "QualifierValue"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "QualifierValue-multiplicity_of_qualifier",
                    "name": "multiplicity_of_qualifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "QualifierValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "QualifierValue-multiplicity_of_qualifier-_ownedComment.0",
                      "body": "The multiplicity of the value InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "QualifierValue-multiplicity_of_qualifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "QualifierValue-multiplicity_of_qualifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "QualifierValue-type_of_qualifier",
                    "name": "type_of_qualifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "QualifierValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "QualifierValue-type_of_qualifier-_ownedComment.0",
                      "body": "The type of the value InputPin conforms to the type of the qualifier Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "QualifierValue-type_of_qualifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "QualifierValue-type_of_qualifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value.type.conformsTo(qualifier.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "QualifierValue-qualifier_attribute",
                    "name": "qualifier_attribute"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "QualifierValue"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "QualifierValue-qualifier_attribute-_ownedComment.0",
                      "body": "The qualifier must be a qualifier of the Association end of the linkEndData that owns this QualifierValue."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "QualifierValue-qualifier_attribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "QualifierValue-qualifier_attribute-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "linkEndData.end.qualifier->includes(qualifier)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "QualifierValue-_generalization.0",
                  "general": "Element"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "QualifierValue-qualifier",
                    "name": "qualifier",
                    "type": "Property",
                    "association": "A_qualifier_qualifierValue"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "QualifierValue-qualifier-_ownedComment.0",
                      "body": "The qualifier Property for which the value is to be specified."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "QualifierValue-qualifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "QualifierValue-value",
                    "name": "value",
                    "type": "InputPin",
                    "association": "A_value_qualifierValue"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "QualifierValue-value-_ownedComment.0",
                      "body": "The InputPin from which the specified value for the qualifier is taken."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "QualifierValue-value"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "RaiseExceptionAction",
                "name": "RaiseExceptionAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "RaiseExceptionAction-_ownedComment.0",
                  "body": "A RaiseExceptionAction is an Action that causes an exception to occur. The input value becomes the exception object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "RaiseExceptionAction"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "RaiseExceptionAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "RaiseExceptionAction-exception",
                  "name": "exception",
                  "aggregation": "composite",
                  "type": "InputPin",
                  "association": "A_exception_raiseExceptionAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-input"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "RaiseExceptionAction-exception-_ownedComment.0",
                    "body": "An InputPin whose value becomes the exception object."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "RaiseExceptionAction-exception"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadExtentAction",
                "name": "ReadExtentAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadExtentAction-_ownedComment.0",
                  "body": "A ReadExtentAction is an Action that retrieves the current instances of a Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadExtentAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadExtentAction-type_is_classifier",
                    "name": "type_is_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadExtentAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadExtentAction-type_is_classifier-_ownedComment.0",
                      "body": "The type of the result OutputPin is the classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadExtentAction-type_is_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadExtentAction-type_is_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = classifier"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadExtentAction-multiplicity_of_result",
                    "name": "multiplicity_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadExtentAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadExtentAction-multiplicity_of_result-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 0..*."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadExtentAction-multiplicity_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadExtentAction-multiplicity_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(0,*)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadExtentAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadExtentAction-classifier",
                    "name": "classifier",
                    "type": "Classifier",
                    "association": "A_classifier_readExtentAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadExtentAction-classifier-_ownedComment.0",
                      "body": "The Classifier whose instances are to be retrieved."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadExtentAction-classifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadExtentAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_readExtentAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadExtentAction-result-_ownedComment.0",
                      "body": "The OutputPin on which the Classifier instances are placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadExtentAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadIsClassifiedObjectAction",
                "name": "ReadIsClassifiedObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadIsClassifiedObjectAction-_ownedComment.0",
                  "body": "A ReadIsClassifiedObjectAction is an Action that determines whether an object is classified by a given Classifier."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadIsClassifiedObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadIsClassifiedObjectAction-no_type",
                    "name": "no_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadIsClassifiedObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-no_type-_ownedComment.0",
                      "body": "The object InputPin has no type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-no_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadIsClassifiedObjectAction-no_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_output",
                    "name": "multiplicity_of_output"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadIsClassifiedObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_output-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-multiplicity_of_output"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_output-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadIsClassifiedObjectAction-boolean_result",
                    "name": "boolean_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadIsClassifiedObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-boolean_result-_ownedComment.0",
                      "body": "The type of the result OutputPin is Boolean."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-boolean_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadIsClassifiedObjectAction-boolean_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = Boolean"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_input",
                    "name": "multiplicity_of_input"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadIsClassifiedObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_input-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-multiplicity_of_input"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadIsClassifiedObjectAction-multiplicity_of_input-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadIsClassifiedObjectAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadIsClassifiedObjectAction-classifier",
                    "name": "classifier",
                    "type": "Classifier",
                    "association": "A_classifier_readIsClassifiedObjectAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-classifier-_ownedComment.0",
                      "body": "The Classifier against which the classification of the input object is tested."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-classifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadIsClassifiedObjectAction-isDirect",
                    "name": "isDirect"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-isDirect-_ownedComment.0",
                      "body": "Indicates whether the input object must be directly classified by the given Classifier or whether it may also be an instance of a specialization of the given Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-isDirect"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ReadIsClassifiedObjectAction-isDirect-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadIsClassifiedObjectAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_readIsClassifiedObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-object-_ownedComment.0",
                      "body": "The InputPin that holds the object whose classification is to be tested."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadIsClassifiedObjectAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_readIsClassifiedObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadIsClassifiedObjectAction-result-_ownedComment.0",
                      "body": "The OutputPin that holds the Boolean result of the test."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadIsClassifiedObjectAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadLinkAction",
                "name": "ReadLinkAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadLinkAction-_ownedComment.0",
                  "body": "A ReadLinkAction is a LinkAction that navigates across an Association to retrieve the objects on one end."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadLinkAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-type_and_ordering",
                    "name": "type_and_ordering"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkAction-type_and_ordering-_ownedComment.0",
                      "body": "The type and ordering of the result OutputPin are same as the type and ordering of the open Association end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkAction-type_and_ordering"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-type_and_ordering-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.openEnd()->forAll(type=result.type and isOrdered=result.isOrdered)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-compatible_multiplicity",
                    "name": "compatible_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkAction-compatible_multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the open Association end must be compatible with the multiplicity of the result OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkAction-compatible_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-compatible_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.openEnd()->first().compatibleWith(result)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-visibility",
                    "name": "visibility"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkAction-visibility-_ownedComment.0",
                      "body": "Visibility of the open end must allow access from the object performing the action."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkAction-visibility"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-visibility-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let openEnd : Property = self.openEnd()->first() in\n  openEnd.visibility = VisibilityKind::public or \n  endData->exists(oed | \n    oed.end<>openEnd and \n    (_'context' = oed.end.type or \n      (openEnd.visibility = VisibilityKind::protected and \n        _'context'.conformsTo(oed.end.type.oclAsType(Classifier)))))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-one_open_end",
                    "name": "one_open_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkAction-one_open_end-_ownedComment.0",
                      "body": "Exactly one linkEndData specification (corresponding to the \"open\" end) must not have an value InputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkAction-one_open_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-one_open_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.openEnd()->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-navigable_open_end",
                    "name": "navigable_open_end"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkAction-navigable_open_end-_ownedComment.0",
                      "body": "The open end must be navigable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkAction-navigable_open_end"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-navigable_open_end-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.openEnd()->first().isNavigable()\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadLinkAction-_generalization.0",
                  "general": "LinkAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ReadLinkAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_readLinkAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ReadLinkAction-result-_ownedComment.0",
                    "body": "The OutputPin on which the objects retrieved from the \"open\" end of those links whose values on other ends are given by the endData."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction-result"
                    },
                    "_parent": "_"
                  }
                }
              },
              "ownedOperation": {
                "_attributes": {
                  "xmi:type": "uml:Operation",
                  "xmi:id": "ReadLinkAction-openEnd",
                  "name": "openEnd",
                  "isQuery": true,
                  "bodyCondition": "ReadLinkAction-openEnd-spec"
                },
                "_parent": "_",
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ReadLinkAction-openEnd-_ownedComment.0",
                    "body": "Returns the ends corresponding to endData with no value InputPin. (A well-formed ReadLinkAction is constrained to have only one of these.)"
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction-openEnd"
                    },
                    "_parent": "_"
                  }
                },
                "ownedRule": {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkAction-openEnd-spec",
                    "name": "spec"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkAction-openEnd"
                    },
                    "_parent": "_"
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkAction-openEnd-spec-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result = (endData->select(value=null).end->asOrderedSet())"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                "ownedParameter": {
                  "_attributes": {
                    "xmi:type": "uml:Parameter",
                    "xmi:id": "ReadLinkAction-openEnd-result",
                    "isOrdered": true,
                    "name": "result",
                    "direction": "return",
                    "type": "Property"
                  },
                  "_parent": "_",
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ReadLinkAction-openEnd-result-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ReadLinkAction-openEnd-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadLinkObjectEndAction",
                "name": "ReadLinkObjectEndAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadLinkObjectEndAction-_ownedComment.0",
                  "body": "A ReadLinkObjectEndAction is an Action that retrieves an end object from a link object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-property",
                    "name": "property"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-property-_ownedComment.0",
                      "body": "The end Property must be an Association memberEnd."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-property"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-property-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end.association <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_object",
                    "name": "multiplicity_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_object-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-multiplicity_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-ends_of_association",
                    "name": "ends_of_association"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-ends_of_association-_ownedComment.0",
                      "body": "The ends of the association must not be static."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-ends_of_association"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-ends_of_association-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end.association.memberEnd->forAll(e | not e.isStatic)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-type_of_result",
                    "name": "type_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-type_of_result-_ownedComment.0",
                      "body": "The type of the result OutputPin is the same as the type of the end Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-type_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-type_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = end.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_result",
                    "name": "multiplicity_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_result-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-multiplicity_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-multiplicity_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-type_of_object",
                    "name": "type_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-type_of_object-_ownedComment.0",
                      "body": "The type of the object InputPin is the AssociationClass that owns the end Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-type_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-type_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type = end.association"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndAction-association_of_association",
                    "name": "association_of_association"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-association_of_association-_ownedComment.0",
                      "body": "The association of the end must be an AssociationClass."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-association_of_association"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndAction-association_of_association-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "end.association.oclIsKindOf(AssociationClass)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadLinkObjectEndAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndAction-end",
                    "name": "end",
                    "type": "Property",
                    "association": "A_end_readLinkObjectEndAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-end-_ownedComment.0",
                      "body": "The Association end to be read."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-end"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_readLinkObjectEndAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-object-_ownedComment.0",
                      "body": "The input pin from which the link object is obtained."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_readLinkObjectEndAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndAction-result-_ownedComment.0",
                      "body": "The OutputPin where the result value is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadLinkObjectEndQualifierAction",
                "name": "ReadLinkObjectEndQualifierAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadLinkObjectEndQualifierAction-_ownedComment.0",
                  "body": "A ReadLinkObjectEndQualifierAction is an Action that retrieves a qualifier end value from a link object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndQualifierAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_object",
                    "name": "multiplicity_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_object-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-multiplicity_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-type_of_object",
                    "name": "type_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-type_of_object-_ownedComment.0",
                      "body": "The type of the object InputPin is the AssociationClass that owns the Association end that has the given qualifier Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-type_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-type_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type = qualifier.associationEnd.association"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier",
                    "name": "multiplicity_of_qualifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier-_ownedComment.0",
                      "body": "The multiplicity of the qualifier Property is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_qualifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "qualifier.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-ends_of_association",
                    "name": "ends_of_association"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-ends_of_association-_ownedComment.0",
                      "body": "The ends of the Association must not be static."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-ends_of_association"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-ends_of_association-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "qualifier.associationEnd.association.memberEnd->forAll(e | not e.isStatic)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_result",
                    "name": "multiplicity_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_result-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-multiplicity_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-multiplicity_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-same_type",
                    "name": "same_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-same_type-_ownedComment.0",
                      "body": "The type of the result OutputPin is the same as the type of the qualifier Property."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-same_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-same_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = qualifier.type"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-association_of_association",
                    "name": "association_of_association"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-association_of_association-_ownedComment.0",
                      "body": "The association of the Association end of the qualifier Property must be an AssociationClass."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-association_of_association"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-association_of_association-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "qualifier.associationEnd.association.oclIsKindOf(AssociationClass)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-qualifier_attribute",
                    "name": "qualifier_attribute"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadLinkObjectEndQualifierAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-qualifier_attribute-_ownedComment.0",
                      "body": "The qualifier Property must be a qualifier of an Association end."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-qualifier_attribute"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-qualifier_attribute-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "qualifier.associationEnd <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadLinkObjectEndQualifierAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-object-_ownedComment.0",
                      "body": "The InputPin from which the link object is obtained."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-qualifier",
                    "name": "qualifier",
                    "type": "Property",
                    "association": "A_qualifier_readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-qualifier-_ownedComment.0",
                      "body": "The qualifier Property to be read."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-qualifier"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReadLinkObjectEndQualifierAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadLinkObjectEndQualifierAction-result-_ownedComment.0",
                      "body": "The OutputPin where the result value is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadLinkObjectEndQualifierAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadSelfAction",
                "name": "ReadSelfAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadSelfAction-_ownedComment.0",
                  "body": "A ReadSelfAction is an Action that retrieves the context object of the Behavior execution within which the ReadSelfAction execution is taking place."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadSelfAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadSelfAction-contained",
                    "name": "contained"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadSelfAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadSelfAction-contained-_ownedComment.0",
                      "body": "A ReadSelfAction must have a context Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadSelfAction-contained"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadSelfAction-contained-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "_'context' <> null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadSelfAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadSelfAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadSelfAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the result OutputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadSelfAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadSelfAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadSelfAction-not_static",
                    "name": "not_static"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadSelfAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadSelfAction-not_static-_ownedComment.0",
                      "body": "If the ReadSelfAction is contained in an Behavior that is acting as a method, then the Operation of the method must not be static."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadSelfAction-not_static"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadSelfAction-not_static-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let behavior: Behavior = self.containingBehavior() in\nbehavior.specification<>null implies not behavior.specification.isStatic"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadSelfAction-type",
                    "name": "type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadSelfAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadSelfAction-type-_ownedComment.0",
                      "body": "The type of the result OutputPin is the context Classifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadSelfAction-type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadSelfAction-type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type = _'context'"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadSelfAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ReadSelfAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_readSelfAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ReadSelfAction-result-_ownedComment.0",
                    "body": "The OutputPin on which the context object is placed."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadSelfAction-result"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadStructuralFeatureAction",
                "name": "ReadStructuralFeatureAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadStructuralFeatureAction-_ownedComment.0",
                  "body": "A ReadStructuralFeatureAction is a StructuralFeatureAction that retrieves the values of a StructuralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadStructuralFeatureAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadStructuralFeatureAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the StructuralFeature must be compatible with the multiplicity of the result OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadStructuralFeatureAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadStructuralFeatureAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "structuralFeature.compatibleWith(result)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadStructuralFeatureAction-type_and_ordering",
                    "name": "type_and_ordering"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadStructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadStructuralFeatureAction-type_and_ordering-_ownedComment.0",
                      "body": "The type and ordering of the result OutputPin are the same as the type and ordering of the StructuralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadStructuralFeatureAction-type_and_ordering"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadStructuralFeatureAction-type_and_ordering-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type =structuralFeature.type and \nresult.isOrdered = structuralFeature.isOrdered\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadStructuralFeatureAction-_generalization.0",
                  "general": "StructuralFeatureAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ReadStructuralFeatureAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_readStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ReadStructuralFeatureAction-result-_ownedComment.0",
                    "body": "The OutputPin on which the result values are placed."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadStructuralFeatureAction-result"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReadVariableAction",
                "name": "ReadVariableAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReadVariableAction-_ownedComment.0",
                  "body": "A ReadVariableAction is a VariableAction that retrieves the values of a Variable."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReadVariableAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadVariableAction-type_and_ordering",
                    "name": "type_and_ordering"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadVariableAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadVariableAction-type_and_ordering-_ownedComment.0",
                      "body": "The type and ordering of the result OutputPin are the same as the type and ordering of the variable."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadVariableAction-type_and_ordering"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadVariableAction-type_and_ordering-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type =variable.type and \nresult.isOrdered = variable.isOrdered\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReadVariableAction-compatible_multiplicity",
                    "name": "compatible_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadVariableAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReadVariableAction-compatible_multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the variable must be compatible with the multiplicity of the output pin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReadVariableAction-compatible_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReadVariableAction-compatible_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "variable.compatibleWith(result)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReadVariableAction-_generalization.0",
                  "general": "VariableAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ReadVariableAction-result",
                  "name": "result",
                  "aggregation": "composite",
                  "type": "OutputPin",
                  "association": "A_result_readVariableAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ReadVariableAction-result-_ownedComment.0",
                    "body": "The OutputPin on which the result values are placed."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ReadVariableAction-result"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReclassifyObjectAction",
                "name": "ReclassifyObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReclassifyObjectAction-_ownedComment.0",
                  "body": "A ReclassifyObjectAction is an Action that changes the Classifiers that classify an object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReclassifyObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReclassifyObjectAction-input_pin",
                    "name": "input_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReclassifyObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-input_pin-_ownedComment.0",
                      "body": "The object InputPin has no type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-input_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReclassifyObjectAction-input_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type = null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReclassifyObjectAction-classifier_not_abstract",
                    "name": "classifier_not_abstract"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReclassifyObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-classifier_not_abstract-_ownedComment.0",
                      "body": "None of the newClassifiers may be abstract."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-classifier_not_abstract"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReclassifyObjectAction-classifier_not_abstract-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not newClassifier->exists(isAbstract)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReclassifyObjectAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReclassifyObjectAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReclassifyObjectAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReclassifyObjectAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReclassifyObjectAction-isReplaceAll",
                    "name": "isReplaceAll"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-isReplaceAll-_ownedComment.0",
                      "body": "Specifies whether existing Classifiers should be removed before adding the new Classifiers."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-isReplaceAll"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ReclassifyObjectAction-isReplaceAll-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReclassifyObjectAction-newClassifier",
                    "name": "newClassifier",
                    "type": "Classifier",
                    "association": "A_newClassifier_reclassifyObjectAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-newClassifier-_ownedComment.0",
                      "body": "A set of Classifiers to be added to the Classifiers of the given object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-newClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ReclassifyObjectAction-newClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ReclassifyObjectAction-newClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReclassifyObjectAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_reclassifyObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-object-_ownedComment.0",
                      "body": "The InputPin that holds the object to be reclassified."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReclassifyObjectAction-oldClassifier",
                    "name": "oldClassifier",
                    "type": "Classifier",
                    "association": "A_oldClassifier_reclassifyObjectAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReclassifyObjectAction-oldClassifier-_ownedComment.0",
                      "body": "A set of Classifiers to be removed from the Classifiers of the given object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReclassifyObjectAction-oldClassifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ReclassifyObjectAction-oldClassifier-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ReclassifyObjectAction-oldClassifier-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReduceAction",
                "name": "ReduceAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReduceAction-_ownedComment.0",
                  "body": "A ReduceAction is an Action that reduces a collection to a single value by repeatedly combining the elements of the collection using a reducer Behavior."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReduceAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReduceAction-reducer_inputs_output",
                    "name": "reducer_inputs_output"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReduceAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-reducer_inputs_output-_ownedComment.0",
                      "body": "The reducer Behavior must have two input ownedParameters and one output ownedParameter, where the type of the output Parameter and the type of elements of the input collection conform to the types of the input Parameters."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-reducer_inputs_output"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReduceAction-reducer_inputs_output-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let inputs: OrderedSet(Parameter) = reducer.inputParameters() in\nlet outputs: OrderedSet(Parameter) = reducer.outputParameters() in\ninputs->size()=2 and outputs->size()=1 and\ninputs.type->forAll(t | \n\toutputs.type->forAll(conformsTo(t)) and \n\t-- Note that the following only checks the case when the collection is via multiple tokens.\n\tcollection.upperBound()>1 implies collection.type.conformsTo(t))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReduceAction-input_type_is_collection",
                    "name": "input_type_is_collection"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReduceAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-input_type_is_collection-_ownedComment.0",
                      "body": "The type of the collection InputPin must be a collection."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-input_type_is_collection"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReduceAction-input_type_is_collection-_specification"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReduceAction-output_types_are_compatible",
                    "name": "output_types_are_compatible"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReduceAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-output_types_are_compatible-_ownedComment.0",
                      "body": "The type of the output of the reducer Behavior must conform to the type of the result OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-output_types_are_compatible"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReduceAction-output_types_are_compatible-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "reducer.outputParameters().type->forAll(conformsTo(result.type))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReduceAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReduceAction-collection",
                    "name": "collection",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_collection_reduceAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-collection-_ownedComment.0",
                      "body": "The InputPin that provides the collection to be reduced."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-collection"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReduceAction-isOrdered",
                    "name": "isOrdered"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-isOrdered-_ownedComment.0",
                      "body": "Indicates whether the order of the input collection should determine the order in which the reducer Behavior is applied to its elements."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-isOrdered"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "ReduceAction-isOrdered-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReduceAction-reducer",
                    "name": "reducer",
                    "type": "Behavior",
                    "association": "A_reducer_reduceAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-reducer-_ownedComment.0",
                      "body": "A Behavior that is repreatedly applied to two elements of the input collection to produce a value that is of the same type as elements of the collection."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-reducer"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReduceAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_reduceAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReduceAction-result-_ownedComment.0",
                      "body": "The output pin on which the result value is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReduceAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "RemoveStructuralFeatureValueAction",
                "name": "RemoveStructuralFeatureValueAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "RemoveStructuralFeatureValueAction-_ownedComment.0",
                  "body": "A RemoveStructuralFeatureValueAction is a WriteStructuralFeatureAction that removes values from a StructuralFeature."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "RemoveStructuralFeatureValueAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "RemoveStructuralFeatureValueAction-removeAt_and_value",
                  "name": "removeAt_and_value"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "RemoveStructuralFeatureValueAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "RemoveStructuralFeatureValueAction-removeAt_and_value-_ownedComment.0",
                    "body": "RemoveStructuralFeatureValueActions removing a value from ordered, non-unique StructuralFeatures must have a single removeAt InputPin and no value InputPin, if isRemoveDuplicates is false. The removeAt InputPin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the Action has a value InputPin and no removeAt InputPin."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "RemoveStructuralFeatureValueAction-removeAt_and_value"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "RemoveStructuralFeatureValueAction-removeAt_and_value-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if structuralFeature.isOrdered and not structuralFeature.isUnique and  not isRemoveDuplicates then\n  value = null and\n  removeAt <> null and\n  removeAt.type = UnlimitedNatural and\n  removeAt.is(1,1)\nelse\n  removeAt = null and value <> null\nendif"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "RemoveStructuralFeatureValueAction-_generalization.0",
                  "general": "WriteStructuralFeatureAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RemoveStructuralFeatureValueAction-isRemoveDuplicates",
                    "name": "isRemoveDuplicates"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RemoveStructuralFeatureValueAction-isRemoveDuplicates-_ownedComment.0",
                      "body": "Specifies whether to remove duplicates of the value in nonunique StructuralFeatures."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RemoveStructuralFeatureValueAction-isRemoveDuplicates"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "RemoveStructuralFeatureValueAction-isRemoveDuplicates-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RemoveStructuralFeatureValueAction-removeAt",
                    "name": "removeAt",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_removeAt_removeStructuralFeatureValueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RemoveStructuralFeatureValueAction-removeAt-_ownedComment.0",
                      "body": "An InputPin that provides the position of an existing value to remove in ordered, nonunique structural features. The type of the removeAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RemoveStructuralFeatureValueAction-removeAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RemoveStructuralFeatureValueAction-removeAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "RemoveVariableValueAction",
                "name": "RemoveVariableValueAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "RemoveVariableValueAction-_ownedComment.0",
                  "body": "A RemoveVariableValueAction is a WriteVariableAction that removes values from a Variables."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "RemoveVariableValueAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "RemoveVariableValueAction-removeAt_and_value",
                  "name": "removeAt_and_value"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "RemoveVariableValueAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "RemoveVariableValueAction-removeAt_and_value-_ownedComment.0",
                    "body": "ReadVariableActions removing a value from ordered, non-unique Variables must have a single removeAt InputPin and no value InputPin, if isRemoveDuplicates is false. The removeAt InputPin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the Action has a value InputPin and no removeAt InputPin."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "RemoveVariableValueAction-removeAt_and_value"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "RemoveVariableValueAction-removeAt_and_value-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "if  variable.isOrdered and not variable.isUnique and not isRemoveDuplicates then \n  value = null and\n  removeAt <> null and\n  removeAt.type = UnlimitedNatural and\n  removeAt.is(1,1)\nelse\n  removeAt = null and value <> null\nendif"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "RemoveVariableValueAction-_generalization.0",
                  "general": "WriteVariableAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RemoveVariableValueAction-isRemoveDuplicates",
                    "name": "isRemoveDuplicates"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RemoveVariableValueAction-isRemoveDuplicates-_ownedComment.0",
                      "body": "Specifies whether to remove duplicates of the value in nonunique Variables."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RemoveVariableValueAction-isRemoveDuplicates"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "RemoveVariableValueAction-isRemoveDuplicates-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "RemoveVariableValueAction-removeAt",
                    "name": "removeAt",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_removeAt_removeVariableValueAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "RemoveVariableValueAction-removeAt-_ownedComment.0",
                      "body": "An InputPin that provides the position of an existing value to remove in ordered, nonunique Variables. The type of the removeAt InputPin is UnlimitedNatural, but the value cannot be zero or unlimited."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "RemoveVariableValueAction-removeAt"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "RemoveVariableValueAction-removeAt-_lowerValue"
                    },
                    "_parent": "_"
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ReplyAction",
                "name": "ReplyAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ReplyAction-_ownedComment.0",
                  "body": "A ReplyAction is an Action that accepts a set of reply values and a value containing return information produced by a previous AcceptCallAction. The ReplyAction returns the values to the caller of the previous call, completing execution of the call."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ReplyAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReplyAction-pins_match_parameter",
                    "name": "pins_match_parameter"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReplyAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReplyAction-pins_match_parameter-_ownedComment.0",
                      "body": "The replyValue InputPins must match the output (return, out, and inout) parameters of the operation of the event of the replyToCall Trigger in number, type, ordering, and multiplicity."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReplyAction-pins_match_parameter"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReplyAction-pins_match_parameter-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let parameter:OrderedSet(Parameter) = replyToCall.event.oclAsType(CallEvent).operation.outputParameters() in\nreplyValue->size()=parameter->size() and\nSequence{1..replyValue->size()}->forAll(i |\n\treplyValue->at(i).type.conformsTo(parameter->at(i).type) and\n\treplyValue->at(i).isOrdered=parameter->at(i).isOrdered and\n\treplyValue->at(i).compatibleWith(parameter->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ReplyAction-event_on_reply_to_call_trigger",
                    "name": "event_on_reply_to_call_trigger"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ReplyAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReplyAction-event_on_reply_to_call_trigger-_ownedComment.0",
                      "body": "The event of the replyToCall Trigger must be a CallEvent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReplyAction-event_on_reply_to_call_trigger"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ReplyAction-event_on_reply_to_call_trigger-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "replyToCall.event.oclIsKindOf(CallEvent)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ReplyAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReplyAction-replyToCall",
                    "name": "replyToCall",
                    "type": "Trigger",
                    "association": "A_replyToCall_replyAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReplyAction-replyToCall-_ownedComment.0",
                      "body": "The Trigger specifying the Operation whose call is being replied to."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReplyAction-replyToCall"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReplyAction-replyValue",
                    "name": "replyValue",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_replyValue_replyAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReplyAction-replyValue-_ownedComment.0",
                      "body": "A list of InputPins providing the values for the output (inout, out, and return) Parameters of the Operation. These values are returned to the caller."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReplyAction-replyValue"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "ReplyAction-replyValue-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "ReplyAction-replyValue-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "ReplyAction-returnInformation",
                    "name": "returnInformation",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_returnInformation_replyAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ReplyAction-returnInformation-_ownedComment.0",
                      "body": "An InputPin that holds the return information value produced by an earlier AcceptCallAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ReplyAction-returnInformation"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "SendObjectAction",
                "name": "SendObjectAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "SendObjectAction-_ownedComment.0",
                  "body": "A SendObjectAction is an InvocationAction that transmits an input object to the target object, which is handled as a request message by the target object. The requestor continues execution immediately after the object is sent out and cannot receive reply values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "SendObjectAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": {
                "_attributes": {
                  "xmi:type": "uml:Constraint",
                  "xmi:id": "SendObjectAction-type_target_pin",
                  "name": "type_target_pin"
                },
                "_parent": "_",
                "constrainedElement": {
                  "_attributes": {
                    "xmi:idref": "SendObjectAction"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "SendObjectAction-type_target_pin-_ownedComment.0",
                    "body": "If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "SendObjectAction-type_target_pin"
                    },
                    "_parent": "_"
                  }
                },
                "specification": {
                  "_attributes": {
                    "xmi:type": "uml:OpaqueExpression",
                    "xmi:id": "SendObjectAction-type_target_pin-_specification"
                  },
                  "_parent": "_",
                  "body": {
                    "_parent": "_",
                    "_text": "onPort<>null implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort)"
                  },
                  "language": {
                    "_parent": "_",
                    "_text": "OCL"
                  }
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "SendObjectAction-_generalization.0",
                  "general": "InvocationAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "SendObjectAction-request",
                    "name": "request",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_request_sendObjectAction"
                  },
                  "_parent": "_",
                  "redefinedProperty": {
                    "_attributes": {
                      "xmi:idref": "InvocationAction-argument"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendObjectAction-request-_ownedComment.0",
                      "body": "The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendObjectAction-request"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "SendObjectAction-target",
                    "name": "target",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_target_sendObjectAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendObjectAction-target-_ownedComment.0",
                      "body": "The target object to which the object is sent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendObjectAction-target"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "SendSignalAction",
                "name": "SendSignalAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "SendSignalAction-_ownedComment.0",
                  "body": "A SendSignalAction is an InvocationAction that creates a Signal instance and transmits it to the target object. Values from the argument InputPins are used to provide values for the attributes of the Signal. The requestor continues execution immediately after the Signal instance is sent out and cannot receive reply values."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "SendSignalAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "SendSignalAction-type_ordering_multiplicity",
                    "name": "type_ordering_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "SendSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendSignalAction-type_ordering_multiplicity-_ownedComment.0",
                      "body": "The type, ordering, and multiplicity of an argument InputPin must be the same as the corresponding attribute of the signal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendSignalAction-type_ordering_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "SendSignalAction-type_ordering_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let attribute: OrderedSet(Property) = signal.allAttributes() in\nSequence{1..argument->size()}->forAll(i | \n\targument->at(i).type.conformsTo(attribute->at(i).type) and \n\targument->at(i).isOrdered = attribute->at(i).isOrdered and\n\targument->at(i).compatibleWith(attribute->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "SendSignalAction-number_order",
                    "name": "number_order"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "SendSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendSignalAction-number_order-_ownedComment.0",
                      "body": "The number and order of argument InputPins must be the same as the number and order of attributes of the signal."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendSignalAction-number_order"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "SendSignalAction-number_order-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "argument->size()=signal.allAttributes()->size()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "SendSignalAction-type_target_pin",
                    "name": "type_target_pin"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "SendSignalAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendSignalAction-type_target_pin-_ownedComment.0",
                      "body": "If onPort is not empty, the Port given by onPort must be an owned or inherited feature of the type of the target InputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendSignalAction-type_target_pin"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "SendSignalAction-type_target_pin-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not onPort->isEmpty() implies target.type.oclAsType(Classifier).allFeatures()->includes(onPort)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "SendSignalAction-_generalization.0",
                  "general": "InvocationAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "SendSignalAction-signal",
                    "name": "signal",
                    "type": "Signal",
                    "association": "A_signal_sendSignalAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendSignalAction-signal-_ownedComment.0",
                      "body": "The Signal whose instance is transmitted to the target."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendSignalAction-signal"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "SendSignalAction-target",
                    "name": "target",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_target_sendSignalAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "SendSignalAction-target-_ownedComment.0",
                      "body": "The InputPin that provides the target object to which the Signal instance is sent."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "SendSignalAction-target"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "SequenceNode",
                "name": "SequenceNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "SequenceNode-_ownedComment.0",
                  "body": "A SequenceNode is a StructuredActivityNode that executes a sequence of ExecutableNodes in order."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "SequenceNode"
                  },
                  "_parent": "_"
                }
              },
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "SequenceNode-_generalization.0",
                  "general": "StructuredActivityNode"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "SequenceNode-executableNode",
                  "name": "executableNode",
                  "isOrdered": true,
                  "aggregation": "composite",
                  "type": "ExecutableNode",
                  "association": "A_executableNode_sequenceNode"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-node"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "SequenceNode-executableNode-_ownedComment.0",
                    "body": "The ordered set of ExecutableNodes to be sequenced."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "SequenceNode-executableNode"
                    },
                    "_parent": "_"
                  }
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "SequenceNode-executableNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "SequenceNode-executableNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StartClassifierBehaviorAction",
                "name": "StartClassifierBehaviorAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StartClassifierBehaviorAction-_ownedComment.0",
                  "body": "A StartClassifierBehaviorAction is an Action that starts the classifierBehavior of the input object."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StartClassifierBehaviorAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StartClassifierBehaviorAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StartClassifierBehaviorAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartClassifierBehaviorAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartClassifierBehaviorAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StartClassifierBehaviorAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StartClassifierBehaviorAction-type_has_classifier",
                    "name": "type_has_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StartClassifierBehaviorAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartClassifierBehaviorAction-type_has_classifier-_ownedComment.0",
                      "body": "If the InputPin has a type, then the type or one of its ancestors must have a classifierBehavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartClassifierBehaviorAction-type_has_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StartClassifierBehaviorAction-type_has_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type->notEmpty() implies \n   (object.type.oclIsKindOf(BehavioredClassifier) and object.type.oclAsType(BehavioredClassifier).classifierBehavior<>null)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StartClassifierBehaviorAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "StartClassifierBehaviorAction-object",
                  "name": "object",
                  "aggregation": "composite",
                  "type": "InputPin",
                  "association": "A_object_startClassifierBehaviorAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-input"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "StartClassifierBehaviorAction-object-_ownedComment.0",
                    "body": "The InputPin that holds the object whose classifierBehavior is to be started."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "StartClassifierBehaviorAction-object"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StartObjectBehaviorAction",
                "name": "StartObjectBehaviorAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StartObjectBehaviorAction-_ownedComment.0",
                  "body": "A StartObjectBehaviorAction is an InvocationAction that starts the execution either of a directly instantiated Behavior or of the classifierBehavior of an object. Argument values may be supplied for the input Parameters of the Behavior. If the Behavior is invoked synchronously, then output values may be obtained for output Parameters."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StartObjectBehaviorAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StartObjectBehaviorAction-multiplicity_of_object",
                    "name": "multiplicity_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StartObjectBehaviorAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-multiplicity_of_object-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin must be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-multiplicity_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StartObjectBehaviorAction-multiplicity_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StartObjectBehaviorAction-type_of_object",
                    "name": "type_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StartObjectBehaviorAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-type_of_object-_ownedComment.0",
                      "body": "The type of the object InputPin must be either a Behavior or a BehavioredClassifier with a classifierBehavior."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-type_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StartObjectBehaviorAction-type_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "self.behavior()<>null"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StartObjectBehaviorAction-no_onport",
                    "name": "no_onport"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StartObjectBehaviorAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-no_onport-_ownedComment.0",
                      "body": "A StartObjectBehaviorAction may not specify onPort."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-no_onport"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StartObjectBehaviorAction-no_onport-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "onPort->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StartObjectBehaviorAction-_generalization.0",
                  "general": "CallAction"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "StartObjectBehaviorAction-object",
                  "name": "object",
                  "aggregation": "composite",
                  "type": "InputPin",
                  "association": "A_object_startObjectBehaviorAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Action-input"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "StartObjectBehaviorAction-object-_ownedComment.0",
                    "body": "An InputPin that holds the object that is either a Behavior to be started or has a classifierBehavior to be started."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "StartObjectBehaviorAction-object"
                    },
                    "_parent": "_"
                  }
                }
              },
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StartObjectBehaviorAction-outputParameters",
                    "name": "outputParameters",
                    "isQuery": true,
                    "bodyCondition": "StartObjectBehaviorAction-outputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-outputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-outputParameters-_ownedComment.0",
                      "body": "Return the inout, out and return ownedParameters of the Behavior being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-outputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StartObjectBehaviorAction-outputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-outputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StartObjectBehaviorAction-outputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.behavior().outputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StartObjectBehaviorAction-outputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StartObjectBehaviorAction-outputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StartObjectBehaviorAction-outputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StartObjectBehaviorAction-inputParameters",
                    "name": "inputParameters",
                    "isQuery": true,
                    "bodyCondition": "StartObjectBehaviorAction-inputParameters-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "CallAction-inputParameters"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-inputParameters-_ownedComment.0",
                      "body": "Return the in and inout ownedParameters of the Behavior being called."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-inputParameters"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StartObjectBehaviorAction-inputParameters-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-inputParameters"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StartObjectBehaviorAction-inputParameters-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.behavior().inputParameters())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StartObjectBehaviorAction-inputParameters-result",
                      "isOrdered": true,
                      "name": "result",
                      "direction": "return",
                      "type": "Parameter"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StartObjectBehaviorAction-inputParameters-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StartObjectBehaviorAction-inputParameters-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StartObjectBehaviorAction-behavior",
                    "name": "behavior",
                    "isQuery": true,
                    "bodyCondition": "StartObjectBehaviorAction-behavior-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StartObjectBehaviorAction-behavior-_ownedComment.0",
                      "body": "If the type of the object InputPin is a Behavior, then that Behavior. Otherwise, if the type of the object InputPin is a BehavioredClassifier, then the classifierBehavior of that BehavioredClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-behavior"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StartObjectBehaviorAction-behavior-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StartObjectBehaviorAction-behavior"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StartObjectBehaviorAction-behavior-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (if object.type.oclIsKindOf(Behavior) then\n  object.type.oclAsType(Behavior)\nelse if object.type.oclIsKindOf(BehavioredClassifier) then\n  object.type.oclAsType(BehavioredClassifier).classifierBehavior\nelse\n  null\nendif\nendif)"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StartObjectBehaviorAction-behavior-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Behavior"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StartObjectBehaviorAction-behavior-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StructuralFeatureAction",
                "name": "StructuralFeatureAction",
                "isAbstract": true
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StructuralFeatureAction-_ownedComment.0",
                  "body": "StructuralFeatureAction is an abstract class for all Actions that operate on StructuralFeatures."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuralFeatureAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin must be 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuralFeatureAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuralFeatureAction-object_type",
                    "name": "object_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-object_type-_ownedComment.0",
                      "body": "The structuralFeature must either be an owned or inherited feature of the type of the object InputPin, or it must be an owned end of a binary Association whose opposite end had as a type to which the type of the object InputPin conforms."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-object_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuralFeatureAction-object_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type.oclAsType(Classifier).allFeatures()->includes(structuralFeature) or\n\tobject.type.conformsTo(structuralFeature.oclAsType(Property).opposite.type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuralFeatureAction-visibility",
                    "name": "visibility"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-visibility-_ownedComment.0",
                      "body": "The visibility of the structuralFeature must allow access from the object performing the ReadStructuralFeatureAction."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-visibility"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuralFeatureAction-visibility-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "structuralFeature.visibility = VisibilityKind::public or\n_'context'.allFeatures()->includes(structuralFeature) or\nstructuralFeature.visibility=VisibilityKind::protected and\n_'context'.conformsTo(structuralFeature.oclAsType(Property).opposite.type.oclAsType(Classifier))\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuralFeatureAction-not_static",
                    "name": "not_static"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-not_static-_ownedComment.0",
                      "body": "The structuralFeature must not be static."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-not_static"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuralFeatureAction-not_static-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "not structuralFeature.isStatic"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuralFeatureAction-one_featuring_classifier",
                    "name": "one_featuring_classifier"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuralFeatureAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-one_featuring_classifier-_ownedComment.0",
                      "body": "The structuralFeature must have exactly one featuringClassifier."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-one_featuring_classifier"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuralFeatureAction-one_featuring_classifier-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "structuralFeature.featuringClassifier->size() = 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "StructuralFeatureAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuralFeatureAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_structuralFeatureAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-object-_ownedComment.0",
                      "body": "The InputPin from which the object whose StructuralFeature is to be read or written is obtained."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuralFeatureAction-structuralFeature",
                    "name": "structuralFeature",
                    "type": "StructuralFeature",
                    "association": "A_structuralFeature_structuralFeatureAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuralFeatureAction-structuralFeature-_ownedComment.0",
                      "body": "The StructuralFeature to be read or written."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuralFeatureAction-structuralFeature"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "StructuredActivityNode",
                "name": "StructuredActivityNode"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "StructuredActivityNode-_ownedComment.0",
                  "body": "A StructuredActivityNode is an Action that is also an ActivityGroup and whose behavior is specified by the ActivityNodes and ActivityEdges it so contains. Unlike other kinds of ActivityGroup, a StructuredActivityNode owns the ActivityNodes and ActivityEdges it contains, and so a node or edge can only be directly contained in one StructuredActivityNode, though StructuredActivityNodes may be nested."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuredActivityNode-output_pin_edges",
                    "name": "output_pin_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-output_pin_edges-_ownedComment.0",
                      "body": "The outgoing ActivityEdges of the OutputPins of a StructuredActivityNode must have targets that are not within the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-output_pin_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuredActivityNode-output_pin_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "output.outgoing.target->excludesAll(allOwnedNodes()-input)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuredActivityNode-edges",
                    "name": "edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-edges-_ownedComment.0",
                      "body": "The edges of a StructuredActivityNode are all the ActivityEdges with source and target ActivityNodes contained directly or indirectly within the StructuredActivityNode and at least one of the source or target not contained in any more deeply nested StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuredActivityNode-edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "edge=self.sourceNodes().outgoing->intersection(self.allOwnedNodes().incoming)->\n\tunion(self.targetNodes().incoming->intersection(self.allOwnedNodes().outgoing))->asSet()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "StructuredActivityNode-input_pin_edges",
                    "name": "input_pin_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "StructuredActivityNode"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-input_pin_edges-_ownedComment.0",
                      "body": "The incoming ActivityEdges of an InputPin of a StructuredActivityNode must have sources that are not within the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-input_pin_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "StructuredActivityNode-input_pin_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "input.incoming.source->excludesAll(allOwnedNodes()-output)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuredActivityNode-_generalization.0",
                    "general": "Namespace"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuredActivityNode-_generalization.2",
                    "general": "ActivityGroup"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Generalization",
                    "xmi:id": "StructuredActivityNode-_generalization.1",
                    "general": "Action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-activity",
                    "name": "activity",
                    "type": "Activity",
                    "association": "A_structuredNode_activity"
                  },
                  "_parent": "_",
                  "redefinedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-inActivity"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-activity"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-activity-_ownedComment.0",
                      "body": "The Activity immediately containing the StructuredActivityNode, if it is not contained in another StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-activity"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-activity-_lowerValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-edge",
                    "name": "edge",
                    "aggregation": "composite",
                    "type": "ActivityEdge",
                    "association": "A_edge_inStructuredNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-containedEdge"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-edge-_ownedComment.0",
                      "body": "The ActivityEdges immediately contained in the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-edge"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-edge-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredActivityNode-edge-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-mustIsolate",
                    "name": "mustIsolate"
                  },
                  "_parent": "_",
                  "type": {
                    "_attributes": {
                      "href": "http://www.omg.org/spec/UML/20131001/PrimitiveTypes.xmi#Boolean"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-mustIsolate-_ownedComment.0",
                      "body": "If true, then any object used by an Action within the StructuredActivityNode cannot be accessed by any Action outside the node until the StructuredActivityNode as a whole completes. Any concurrent Actions that would result in accessing such objects are required to have their execution deferred until the completion of the StructuredActivityNode.\r\n"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-mustIsolate"
                      },
                      "_parent": "_"
                    }
                  },
                  "defaultValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralBoolean",
                      "xmi:id": "StructuredActivityNode-mustIsolate-_defaultValue"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-node",
                    "name": "node",
                    "aggregation": "composite",
                    "type": "ActivityNode",
                    "association": "A_node_inStructuredNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-containedNode"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "Element-ownedElement"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-node-_ownedComment.0",
                      "body": "The ActivityNodes immediately contained in the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-node"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-node-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredActivityNode-node-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-structuredNodeInput",
                    "name": "structuredNodeInput",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_structuredNodeInput_structuredActivityNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-structuredNodeInput-_ownedComment.0",
                      "body": "The InputPins owned by the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-structuredNodeInput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-structuredNodeInput-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredActivityNode-structuredNodeInput-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-structuredNodeOutput",
                    "name": "structuredNodeOutput",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_structuredNodeOutput_structuredActivityNode"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-structuredNodeOutput-_ownedComment.0",
                      "body": "The OutputPins owned by the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-structuredNodeOutput"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-structuredNodeOutput-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredActivityNode-structuredNodeOutput-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "StructuredActivityNode-variable",
                    "name": "variable",
                    "aggregation": "composite",
                    "type": "Variable",
                    "association": "A_variable_scope"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Namespace-ownedMember"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-variable-_ownedComment.0",
                      "body": "The Variables defined in the scope of the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-variable"
                      },
                      "_parent": "_"
                    }
                  },
                  "lowerValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralInteger",
                      "xmi:id": "StructuredActivityNode-variable-_lowerValue"
                    },
                    "_parent": "_"
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "StructuredActivityNode-variable-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                }
              ],
              "ownedOperation": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredActivityNode-allActions",
                    "name": "allActions",
                    "isQuery": true,
                    "bodyCondition": "StructuredActivityNode-allActions-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Action-allActions"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-allActions-_ownedComment.0",
                      "body": "Returns this StructuredActivityNode and all Actions contained in it."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-allActions"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredActivityNode-allActions-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-allActions"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredActivityNode-allActions-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (node->select(oclIsKindOf(Action)).oclAsType(Action).allActions()->including(self)->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredActivityNode-allActions-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Action"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredActivityNode-allActions-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredActivityNode-allActions-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredActivityNode-allOwnedNodes",
                    "name": "allOwnedNodes",
                    "isQuery": true,
                    "bodyCondition": "StructuredActivityNode-allOwnedNodes-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": {
                    "_attributes": {
                      "xmi:idref": "Action-allOwnedNodes"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-allOwnedNodes-_ownedComment.0",
                      "body": "Returns all the ActivityNodes contained directly or indirectly within this StructuredActivityNode, in addition to the Pins of the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-allOwnedNodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredActivityNode-allOwnedNodes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-allOwnedNodes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredActivityNode-allOwnedNodes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.Action::allOwnedNodes()->union(node)->union(node->select(oclIsKindOf(Action)).oclAsType(Action).allOwnedNodes())->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredActivityNode-allOwnedNodes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ActivityNode"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredActivityNode-allOwnedNodes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredActivityNode-allOwnedNodes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredActivityNode-sourceNodes",
                    "name": "sourceNodes",
                    "isQuery": true,
                    "bodyCondition": "StructuredActivityNode-sourceNodes-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-sourceNodes-_ownedComment.0",
                      "body": "Return those ActivityNodes contained immediately within the StructuredActivityNode that may act as sources of edges owned by the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-sourceNodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredActivityNode-sourceNodes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-sourceNodes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredActivityNode-sourceNodes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (node->union(input.oclAsType(ActivityNode)->asSet())->\n  union(node->select(oclIsKindOf(Action)).oclAsType(Action).output)->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredActivityNode-sourceNodes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ActivityNode"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredActivityNode-sourceNodes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredActivityNode-sourceNodes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredActivityNode-targetNodes",
                    "name": "targetNodes",
                    "isQuery": true,
                    "bodyCondition": "StructuredActivityNode-targetNodes-spec"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-targetNodes-_ownedComment.0",
                      "body": "Return those ActivityNodes contained immediately within the StructuredActivityNode that may act as targets of edges owned by the StructuredActivityNode."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-targetNodes"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredActivityNode-targetNodes-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-targetNodes"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredActivityNode-targetNodes-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (node->union(output.oclAsType(ActivityNode)->asSet())->\n  union(node->select(oclIsKindOf(Action)).oclAsType(Action).input)->asSet())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredActivityNode-targetNodes-result",
                      "name": "result",
                      "direction": "return",
                      "type": "ActivityNode"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredActivityNode-targetNodes-result-_lowerValue"
                      },
                      "_parent": "_"
                    },
                    "upperValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralUnlimitedNatural",
                        "xmi:id": "StructuredActivityNode-targetNodes-result-_upperValue",
                        "value": "*"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Operation",
                    "xmi:id": "StructuredActivityNode-containingActivity",
                    "name": "containingActivity",
                    "isQuery": true,
                    "bodyCondition": "StructuredActivityNode-containingActivity-spec"
                  },
                  "_parent": "_",
                  "redefinedOperation": [
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityGroup-containingActivity"
                      },
                      "_parent": "_"
                    },
                    {
                      "_attributes": {
                        "xmi:idref": "ActivityNode-containingActivity"
                      },
                      "_parent": "_"
                    }
                  ],
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "StructuredActivityNode-containingActivity-_ownedComment.0",
                      "body": "The Activity that directly or indirectly contains this StructuredActivityNode (considered as an Action)."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-containingActivity"
                      },
                      "_parent": "_"
                    }
                  },
                  "ownedRule": {
                    "_attributes": {
                      "xmi:type": "uml:Constraint",
                      "xmi:id": "StructuredActivityNode-containingActivity-spec",
                      "name": "spec"
                    },
                    "_parent": "_",
                    "constrainedElement": {
                      "_attributes": {
                        "xmi:idref": "StructuredActivityNode-containingActivity"
                      },
                      "_parent": "_"
                    },
                    "specification": {
                      "_attributes": {
                        "xmi:type": "uml:OpaqueExpression",
                        "xmi:id": "StructuredActivityNode-containingActivity-spec-_specification"
                      },
                      "_parent": "_",
                      "body": {
                        "_parent": "_",
                        "_text": "result = (self.Action::containingActivity())"
                      },
                      "language": {
                        "_parent": "_",
                        "_text": "OCL"
                      }
                    }
                  },
                  "ownedParameter": {
                    "_attributes": {
                      "xmi:type": "uml:Parameter",
                      "xmi:id": "StructuredActivityNode-containingActivity-result",
                      "name": "result",
                      "direction": "return",
                      "type": "Activity"
                    },
                    "_parent": "_",
                    "lowerValue": {
                      "_attributes": {
                        "xmi:type": "uml:LiteralInteger",
                        "xmi:id": "StructuredActivityNode-containingActivity-result-_lowerValue"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "TestIdentityAction",
                "name": "TestIdentityAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "TestIdentityAction-_ownedComment.0",
                  "body": "A TestIdentityAction is an Action that tests if two values are identical objects."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "TestIdentityAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TestIdentityAction-multiplicity",
                    "name": "multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TestIdentityAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-multiplicity-_ownedComment.0",
                      "body": "The multiplicity of the InputPins is 1..1."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TestIdentityAction-multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "first.is(1,1) and second.is(1,1)\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TestIdentityAction-no_type",
                    "name": "no_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TestIdentityAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-no_type-_ownedComment.0",
                      "body": "The InputPins have no type."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-no_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TestIdentityAction-no_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "first.type= null and second.type = null\n"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "TestIdentityAction-result_is_boolean",
                    "name": "result_is_boolean"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "TestIdentityAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-result_is_boolean-_ownedComment.0",
                      "body": "The type of the result OutputPin is Boolean. "
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-result_is_boolean"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "TestIdentityAction-result_is_boolean-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "result.type=Boolean"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "TestIdentityAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TestIdentityAction-first",
                    "name": "first",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_first_testIdentityAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-first-_ownedComment.0",
                      "body": "The InputPin on which the first input object is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-first"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TestIdentityAction-result",
                    "name": "result",
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_testIdentityAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-result-_ownedComment.0",
                      "body": "The OutputPin whose Boolean value indicates whether the two input objects are identical."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-result"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "TestIdentityAction-second",
                    "name": "second",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_second_testIdentityAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "TestIdentityAction-second-_ownedComment.0",
                      "body": "The OutputPin on which the second input object is placed."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "TestIdentityAction-second"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "UnmarshallAction",
                "name": "UnmarshallAction"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "UnmarshallAction-_ownedComment.0",
                  "body": "An UnmarshallAction is an Action that retrieves the values of the StructuralFeatures of an object and places them on OutputPins. "
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "UnmarshallAction"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UnmarshallAction-structural_feature",
                    "name": "structural_feature"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UnmarshallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-structural_feature-_ownedComment.0",
                      "body": "The unmarshallType must have at least one StructuralFeature."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-structural_feature"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UnmarshallAction-structural_feature-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "unmarshallType.allAttributes()->size() >= 1"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UnmarshallAction-number_of_result",
                    "name": "number_of_result"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UnmarshallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-number_of_result-_ownedComment.0",
                      "body": "The number of result outputPins must be the same as the number of attributes of the unmarshallType."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-number_of_result"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UnmarshallAction-number_of_result-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "unmarshallType.allAttributes()->size() = result->size()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UnmarshallAction-type_ordering_and_multiplicity",
                    "name": "type_ordering_and_multiplicity"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UnmarshallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-type_ordering_and_multiplicity-_ownedComment.0",
                      "body": "The type, ordering and multiplicity of each attribute of the unmarshallType must be compatible with the type, ordering and multiplicity of the corresponding result OutputPin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-type_ordering_and_multiplicity"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UnmarshallAction-type_ordering_and_multiplicity-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "let attribute:OrderedSet(Property) = unmarshallType.allAttributes() in\nSequence{1..result->size()}->forAll(i | \n\tattribute->at(i).type.conformsTo(result->at(i).type) and\n\tattribute->at(i).isOrdered=result->at(i).isOrdered and\n\tattribute->at(i).compatibleWith(result->at(i)))"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UnmarshallAction-multiplicity_of_object",
                    "name": "multiplicity_of_object"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UnmarshallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-multiplicity_of_object-_ownedComment.0",
                      "body": "The multiplicity of the object InputPin is 1..1"
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-multiplicity_of_object"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UnmarshallAction-multiplicity_of_object-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.is(1,1)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "UnmarshallAction-object_type",
                    "name": "object_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "UnmarshallAction"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-object_type-_ownedComment.0",
                      "body": "The type of the object InputPin conform to the unmarshallType."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-object_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "UnmarshallAction-object_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "object.type.conformsTo(unmarshallType)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "UnmarshallAction-_generalization.0",
                  "general": "Action"
                },
                "_parent": "_"
              },
              "ownedAttribute": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UnmarshallAction-object",
                    "name": "object",
                    "aggregation": "composite",
                    "type": "InputPin",
                    "association": "A_object_unmarshallAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-input"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-object-_ownedComment.0",
                      "body": "The InputPin that gives the object to be unmarshalled."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-object"
                      },
                      "_parent": "_"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UnmarshallAction-result",
                    "name": "result",
                    "isOrdered": true,
                    "aggregation": "composite",
                    "type": "OutputPin",
                    "association": "A_result_unmarshallAction"
                  },
                  "_parent": "_",
                  "subsettedProperty": {
                    "_attributes": {
                      "xmi:idref": "Action-output"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-result-_ownedComment.0",
                      "body": "The OutputPins on which are placed the values of the StructuralFeatures of the input object."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-result"
                      },
                      "_parent": "_"
                    }
                  },
                  "upperValue": {
                    "_attributes": {
                      "xmi:type": "uml:LiteralUnlimitedNatural",
                      "xmi:id": "UnmarshallAction-result-_upperValue",
                      "value": "*"
                    },
                    "_parent": "_"
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Property",
                    "xmi:id": "UnmarshallAction-unmarshallType",
                    "name": "unmarshallType",
                    "type": "Classifier",
                    "association": "A_unmarshallType_unmarshallAction"
                  },
                  "_parent": "_",
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "UnmarshallAction-unmarshallType-_ownedComment.0",
                      "body": "The type of the object to be unmarshalled."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "UnmarshallAction-unmarshallType"
                      },
                      "_parent": "_"
                    }
                  }
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Class",
                "xmi:id": "ValuePin",
                "name": "ValuePin"
              },
              "_parent": "_",
              "ownedComment": {
                "_attributes": {
                  "xmi:type": "uml:Comment",
                  "xmi:id": "ValuePin-_ownedComment.0",
                  "body": "A ValuePin is an InputPin that provides a value by evaluating a ValueSpecification."
                },
                "_parent": "_",
                "annotatedElement": {
                  "_attributes": {
                    "xmi:idref": "ValuePin"
                  },
                  "_parent": "_"
                }
              },
              "ownedRule": [
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ValuePin-no_incoming_edges",
                    "name": "no_incoming_edges"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ValuePin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValuePin-no_incoming_edges-_ownedComment.0",
                      "body": "A ValuePin may have no incoming ActivityEdges."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValuePin-no_incoming_edges"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ValuePin-no_incoming_edges-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "incoming->isEmpty()"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                },
                {
                  "_attributes": {
                    "xmi:type": "uml:Constraint",
                    "xmi:id": "ValuePin-compatible_type",
                    "name": "compatible_type"
                  },
                  "_parent": "_",
                  "constrainedElement": {
                    "_attributes": {
                      "xmi:idref": "ValuePin"
                    },
                    "_parent": "_"
                  },
                  "ownedComment": {
                    "_attributes": {
                      "xmi:type": "uml:Comment",
                      "xmi:id": "ValuePin-compatible_type-_ownedComment.0",
                      "body": "The type of the value ValueSpecification must conform to the type of the ValuePin."
                    },
                    "_parent": "_",
                    "annotatedElement": {
                      "_attributes": {
                        "xmi:idref": "ValuePin-compatible_type"
                      },
                      "_parent": "_"
                    }
                  },
                  "specification": {
                    "_attributes": {
                      "xmi:type": "uml:OpaqueExpression",
                      "xmi:id": "ValuePin-compatible_type-_specification"
                    },
                    "_parent": "_",
                    "body": {
                      "_parent": "_",
                      "_text": "value.type.conformsTo(type)"
                    },
                    "language": {
                      "_parent": "_",
                      "_text": "OCL"
                    }
                  }
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "ValuePin-_generalization.0",
                  "general": "InputPin"
                },
                "_parent": "_"
              },
              "ownedAttribute": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "ValuePin-value",
                  "name": "value",
                  "aggregation": "composite",
                  "type": "ValueSpecification",
                  "association": "A_value_valuePin"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-ownedElement"
                  },
                  "_parent": "_"
                },
                "ownedComment": {
                  "_attributes": {
                    "xmi:type": "uml:Comment",
                    "xmi:id": "ValuePin-value-_ownedComment.0",
                    "body": "The ValueSpecification that is evaluated to obtain the value that the ValuePin will provide."
                  },
                  "_parent": "_",
                  "annotatedElement": {
                    "_attributes": {
                      "xmi:idref": "ValuePin-value"
                    },
                    "_parent": "_"
                  }
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_valuePin",
                "name": "A_value_valuePin"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ValuePin-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_valuePin-valuePin"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_valuePin-valuePin",
                  "name": "valuePin",
                  "type": "ValuePin",
                  "association": "A_value_valuePin"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_valuePin-valuePin-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_unmarshallAction",
                "name": "A_result_unmarshallAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UnmarshallAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_unmarshallAction-unmarshallAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_unmarshallAction-unmarshallAction",
                  "name": "unmarshallAction",
                  "type": "UnmarshallAction",
                  "association": "A_result_unmarshallAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_unmarshallAction-unmarshallAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_unmarshallType_unmarshallAction",
                "name": "A_unmarshallType_unmarshallAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UnmarshallAction-unmarshallType"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_unmarshallType_unmarshallAction-unmarshallAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_unmarshallType_unmarshallAction-unmarshallAction",
                  "name": "unmarshallAction",
                  "type": "UnmarshallAction",
                  "association": "A_unmarshallType_unmarshallAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_unmarshallType_unmarshallAction-unmarshallAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_unmarshallType_unmarshallAction-unmarshallAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_unmarshallAction",
                "name": "A_object_unmarshallAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "UnmarshallAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_unmarshallAction-unmarshallAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_unmarshallAction-unmarshallAction",
                  "name": "unmarshallAction",
                  "type": "UnmarshallAction",
                  "association": "A_object_unmarshallAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_unmarshallAction-unmarshallAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_first_testIdentityAction",
                "name": "A_first_testIdentityAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TestIdentityAction-first"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_first_testIdentityAction-testIdentityAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_first_testIdentityAction-testIdentityAction",
                  "name": "testIdentityAction",
                  "type": "TestIdentityAction",
                  "association": "A_first_testIdentityAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_first_testIdentityAction-testIdentityAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_second_testIdentityAction",
                "name": "A_second_testIdentityAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TestIdentityAction-second"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_second_testIdentityAction-testIdentityAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_second_testIdentityAction-testIdentityAction",
                  "name": "testIdentityAction",
                  "type": "TestIdentityAction",
                  "association": "A_second_testIdentityAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_second_testIdentityAction-testIdentityAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_testIdentityAction",
                "name": "A_result_testIdentityAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "TestIdentityAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_testIdentityAction-testIdentityAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_testIdentityAction-testIdentityAction",
                  "name": "testIdentityAction",
                  "type": "TestIdentityAction",
                  "association": "A_result_testIdentityAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_testIdentityAction-testIdentityAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_structuredNodeOutput_structuredActivityNode",
                "name": "A_structuredNodeOutput_structuredActivityNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-structuredNodeOutput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode",
                  "name": "structuredActivityNode",
                  "type": "StructuredActivityNode",
                  "association": "A_structuredNodeOutput_structuredActivityNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_structuredNodeInput_structuredActivityNode",
                "name": "A_structuredNodeInput_structuredActivityNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-structuredNodeInput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_structuredNodeInput_structuredActivityNode-structuredActivityNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_structuredNodeInput_structuredActivityNode-structuredActivityNode",
                  "name": "structuredActivityNode",
                  "type": "StructuredActivityNode",
                  "association": "A_structuredNodeInput_structuredActivityNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_structuredNodeInput_structuredActivityNode-structuredActivityNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_edge_inStructuredNode",
                "name": "A_edge_inStructuredNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-edge"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityEdge-inStructuredNode"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_node_inStructuredNode",
                "name": "A_node_inStructuredNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-node"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-inStructuredNode"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_variable_scope",
                "name": "A_variable_scope"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuredActivityNode-variable"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Variable-scope"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_structuralFeatureAction",
                "name": "A_object_structuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuralFeatureAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_structuralFeatureAction-structuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_structuralFeatureAction-structuralFeatureAction",
                  "name": "structuralFeatureAction",
                  "type": "StructuralFeatureAction",
                  "association": "A_object_structuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_structuralFeatureAction-structuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_structuralFeature_structuralFeatureAction",
                "name": "A_structuralFeature_structuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StructuralFeatureAction-structuralFeature"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_structuralFeature_structuralFeatureAction-structuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_structuralFeature_structuralFeatureAction-structuralFeatureAction",
                  "name": "structuralFeatureAction",
                  "type": "StructuralFeatureAction",
                  "association": "A_structuralFeature_structuralFeatureAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_structuralFeature_structuralFeatureAction-structuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_structuralFeature_structuralFeatureAction-structuralFeatureAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_startObjectBehaviorAction",
                "name": "A_object_startObjectBehaviorAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StartObjectBehaviorAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_startObjectBehaviorAction-startObjectBehaviorAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_startObjectBehaviorAction-startObjectBehaviorAction",
                  "name": "startObjectBehaviorAction",
                  "type": "StartObjectBehaviorAction",
                  "association": "A_object_startObjectBehaviorAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_startObjectBehaviorAction-startObjectBehaviorAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_startClassifierBehaviorAction",
                "name": "A_object_startClassifierBehaviorAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "StartClassifierBehaviorAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_startClassifierBehaviorAction-startClassifierBehaviorAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_startClassifierBehaviorAction-startClassifierBehaviorAction",
                  "name": "startClassifierBehaviorAction",
                  "type": "StartClassifierBehaviorAction",
                  "association": "A_object_startClassifierBehaviorAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_startClassifierBehaviorAction-startClassifierBehaviorAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_executableNode_sequenceNode",
                "name": "A_executableNode_sequenceNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SequenceNode-executableNode"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_executableNode_sequenceNode-sequenceNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_executableNode_sequenceNode-sequenceNode",
                  "name": "sequenceNode",
                  "type": "SequenceNode",
                  "association": "A_executableNode_sequenceNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "ActivityNode-inStructuredNode"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_executableNode_sequenceNode-sequenceNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signal_sendSignalAction",
                "name": "A_signal_sendSignalAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SendSignalAction-signal"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signal_sendSignalAction-sendSignalAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signal_sendSignalAction-sendSignalAction",
                  "name": "sendSignalAction",
                  "type": "SendSignalAction",
                  "association": "A_signal_sendSignalAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signal_sendSignalAction-sendSignalAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signal_sendSignalAction-sendSignalAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_target_sendSignalAction",
                "name": "A_target_sendSignalAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SendSignalAction-target"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_target_sendSignalAction-sendSignalAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_target_sendSignalAction-sendSignalAction",
                  "name": "sendSignalAction",
                  "type": "SendSignalAction",
                  "association": "A_target_sendSignalAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_target_sendSignalAction-sendSignalAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_request_sendObjectAction",
                "name": "A_request_sendObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SendObjectAction-request"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_request_sendObjectAction-sendObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_request_sendObjectAction-_generalization.0",
                  "general": "A_argument_invocationAction"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_request_sendObjectAction-sendObjectAction",
                  "name": "sendObjectAction",
                  "type": "SendObjectAction",
                  "association": "A_request_sendObjectAction"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_argument_invocationAction-invocationAction"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_request_sendObjectAction-sendObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_target_sendObjectAction",
                "name": "A_target_sendObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "SendObjectAction-target"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_target_sendObjectAction-sendObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_target_sendObjectAction-sendObjectAction",
                  "name": "sendObjectAction",
                  "type": "SendObjectAction",
                  "association": "A_target_sendObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_target_sendObjectAction-sendObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_returnInformation_replyAction",
                "name": "A_returnInformation_replyAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReplyAction-returnInformation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_returnInformation_replyAction-replyAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_returnInformation_replyAction-replyAction",
                  "name": "replyAction",
                  "type": "ReplyAction",
                  "association": "A_returnInformation_replyAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_returnInformation_replyAction-replyAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_replyToCall_replyAction",
                "name": "A_replyToCall_replyAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReplyAction-replyToCall"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_replyToCall_replyAction-replyAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_replyToCall_replyAction-replyAction",
                  "name": "replyAction",
                  "type": "ReplyAction",
                  "association": "A_replyToCall_replyAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_replyToCall_replyAction-replyAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_replyValue_replyAction",
                "name": "A_replyValue_replyAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReplyAction-replyValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_replyValue_replyAction-replyAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_replyValue_replyAction-replyAction",
                  "name": "replyAction",
                  "type": "ReplyAction",
                  "association": "A_replyValue_replyAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_replyValue_replyAction-replyAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_removeAt_removeVariableValueAction",
                "name": "A_removeAt_removeVariableValueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RemoveVariableValueAction-removeAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_removeAt_removeVariableValueAction-removeVariableValueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_removeAt_removeVariableValueAction-removeVariableValueAction",
                  "name": "removeVariableValueAction",
                  "type": "RemoveVariableValueAction",
                  "association": "A_removeAt_removeVariableValueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_removeAt_removeVariableValueAction-removeVariableValueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_removeAt_removeStructuralFeatureValueAction",
                "name": "A_removeAt_removeStructuralFeatureValueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RemoveStructuralFeatureValueAction-removeAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_removeAt_removeStructuralFeatureValueAction-removeStructuralFeatureValueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_removeAt_removeStructuralFeatureValueAction-removeStructuralFeatureValueAction",
                  "name": "removeStructuralFeatureValueAction",
                  "type": "RemoveStructuralFeatureValueAction",
                  "association": "A_removeAt_removeStructuralFeatureValueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_removeAt_removeStructuralFeatureValueAction-removeStructuralFeatureValueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_collection_reduceAction",
                "name": "A_collection_reduceAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReduceAction-collection"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_collection_reduceAction-reduceAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_collection_reduceAction-reduceAction",
                  "name": "reduceAction",
                  "type": "ReduceAction",
                  "association": "A_collection_reduceAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_collection_reduceAction-reduceAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_reducer_reduceAction",
                "name": "A_reducer_reduceAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReduceAction-reducer"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_reducer_reduceAction-reduceAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_reducer_reduceAction-reduceAction",
                  "name": "reduceAction",
                  "type": "ReduceAction",
                  "association": "A_reducer_reduceAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_reducer_reduceAction-reduceAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_reducer_reduceAction-reduceAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_reduceAction",
                "name": "A_result_reduceAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReduceAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_reduceAction-reduceAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_reduceAction-reduceAction",
                  "name": "reduceAction",
                  "type": "ReduceAction",
                  "association": "A_result_reduceAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_reduceAction-reduceAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_reclassifyObjectAction",
                "name": "A_object_reclassifyObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReclassifyObjectAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_reclassifyObjectAction-reclassifyObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_reclassifyObjectAction-reclassifyObjectAction",
                  "name": "reclassifyObjectAction",
                  "type": "ReclassifyObjectAction",
                  "association": "A_object_reclassifyObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_reclassifyObjectAction-reclassifyObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_newClassifier_reclassifyObjectAction",
                "name": "A_newClassifier_reclassifyObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReclassifyObjectAction-newClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_newClassifier_reclassifyObjectAction-reclassifyObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_newClassifier_reclassifyObjectAction-reclassifyObjectAction",
                  "name": "reclassifyObjectAction",
                  "type": "ReclassifyObjectAction",
                  "association": "A_newClassifier_reclassifyObjectAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_newClassifier_reclassifyObjectAction-reclassifyObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_newClassifier_reclassifyObjectAction-reclassifyObjectAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_oldClassifier_reclassifyObjectAction",
                "name": "A_oldClassifier_reclassifyObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReclassifyObjectAction-oldClassifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction",
                  "name": "reclassifyObjectAction",
                  "type": "ReclassifyObjectAction",
                  "association": "A_oldClassifier_reclassifyObjectAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_oldClassifier_reclassifyObjectAction-reclassifyObjectAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readVariableAction",
                "name": "A_result_readVariableAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadVariableAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readVariableAction-readVariableAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readVariableAction-readVariableAction",
                  "name": "readVariableAction",
                  "type": "ReadVariableAction",
                  "association": "A_result_readVariableAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readVariableAction-readVariableAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readStructuralFeatureAction",
                "name": "A_result_readStructuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadStructuralFeatureAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readStructuralFeatureAction-readStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readStructuralFeatureAction-readStructuralFeatureAction",
                  "name": "readStructuralFeatureAction",
                  "type": "ReadStructuralFeatureAction",
                  "association": "A_result_readStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readStructuralFeatureAction-readStructuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readSelfAction",
                "name": "A_result_readSelfAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadSelfAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readSelfAction-readSelfAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readSelfAction-readSelfAction",
                  "name": "readSelfAction",
                  "type": "ReadSelfAction",
                  "association": "A_result_readSelfAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readSelfAction-readSelfAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_qualifier_readLinkObjectEndQualifierAction",
                "name": "A_qualifier_readLinkObjectEndQualifierAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndQualifierAction-qualifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_qualifier_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_qualifier_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction",
                  "name": "readLinkObjectEndQualifierAction",
                  "type": "ReadLinkObjectEndQualifierAction",
                  "association": "A_qualifier_readLinkObjectEndQualifierAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_qualifier_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_readLinkObjectEndQualifierAction",
                "name": "A_object_readLinkObjectEndQualifierAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndQualifierAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction",
                  "name": "readLinkObjectEndQualifierAction",
                  "type": "ReadLinkObjectEndQualifierAction",
                  "association": "A_object_readLinkObjectEndQualifierAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readLinkObjectEndQualifierAction",
                "name": "A_result_readLinkObjectEndQualifierAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndQualifierAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction",
                  "name": "readLinkObjectEndQualifierAction",
                  "type": "ReadLinkObjectEndQualifierAction",
                  "association": "A_result_readLinkObjectEndQualifierAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readLinkObjectEndQualifierAction-readLinkObjectEndQualifierAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_readLinkObjectEndAction",
                "name": "A_object_readLinkObjectEndAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_readLinkObjectEndAction-readLinkObjectEndAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_readLinkObjectEndAction-readLinkObjectEndAction",
                  "name": "readLinkObjectEndAction",
                  "type": "ReadLinkObjectEndAction",
                  "association": "A_object_readLinkObjectEndAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_readLinkObjectEndAction-readLinkObjectEndAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_end_readLinkObjectEndAction",
                "name": "A_end_readLinkObjectEndAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndAction-end"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_end_readLinkObjectEndAction-readLinkObjectEndAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_end_readLinkObjectEndAction-readLinkObjectEndAction",
                  "name": "readLinkObjectEndAction",
                  "type": "ReadLinkObjectEndAction",
                  "association": "A_end_readLinkObjectEndAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_end_readLinkObjectEndAction-readLinkObjectEndAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readLinkObjectEndAction",
                "name": "A_result_readLinkObjectEndAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkObjectEndAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readLinkObjectEndAction-readLinkObjectEndAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readLinkObjectEndAction-readLinkObjectEndAction",
                  "name": "readLinkObjectEndAction",
                  "type": "ReadLinkObjectEndAction",
                  "association": "A_result_readLinkObjectEndAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readLinkObjectEndAction-readLinkObjectEndAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readLinkAction",
                "name": "A_result_readLinkAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadLinkAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readLinkAction-readLinkAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readLinkAction-readLinkAction",
                  "name": "readLinkAction",
                  "type": "ReadLinkAction",
                  "association": "A_result_readLinkAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readLinkAction-readLinkAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_readIsClassifiedObjectAction",
                "name": "A_classifier_readIsClassifiedObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadIsClassifiedObjectAction-classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction",
                  "name": "readIsClassifiedObjectAction",
                  "type": "ReadIsClassifiedObjectAction",
                  "association": "A_classifier_readIsClassifiedObjectAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_classifier_readIsClassifiedObjectAction-readIsClassifiedObjectAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readIsClassifiedObjectAction",
                "name": "A_result_readIsClassifiedObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadIsClassifiedObjectAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readIsClassifiedObjectAction-readIsClassifiedObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readIsClassifiedObjectAction-readIsClassifiedObjectAction",
                  "name": "readIsClassifiedObjectAction",
                  "type": "ReadIsClassifiedObjectAction",
                  "association": "A_result_readIsClassifiedObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readIsClassifiedObjectAction-readIsClassifiedObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_readIsClassifiedObjectAction",
                "name": "A_object_readIsClassifiedObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadIsClassifiedObjectAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_readIsClassifiedObjectAction-readIsClassifiedObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_readIsClassifiedObjectAction-readIsClassifiedObjectAction",
                  "name": "readIsClassifiedObjectAction",
                  "type": "ReadIsClassifiedObjectAction",
                  "association": "A_object_readIsClassifiedObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_readIsClassifiedObjectAction-readIsClassifiedObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_readExtentAction",
                "name": "A_result_readExtentAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadExtentAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_readExtentAction-readExtentAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_readExtentAction-readExtentAction",
                  "name": "readExtentAction",
                  "type": "ReadExtentAction",
                  "association": "A_result_readExtentAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_readExtentAction-readExtentAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_readExtentAction",
                "name": "A_classifier_readExtentAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ReadExtentAction-classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifier_readExtentAction-readExtentAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifier_readExtentAction-readExtentAction",
                  "name": "readExtentAction",
                  "type": "ReadExtentAction",
                  "association": "A_classifier_readExtentAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifier_readExtentAction-readExtentAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_exception_raiseExceptionAction",
                "name": "A_exception_raiseExceptionAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "RaiseExceptionAction-exception"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_exception_raiseExceptionAction-raiseExceptionAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_exception_raiseExceptionAction-raiseExceptionAction",
                  "name": "raiseExceptionAction",
                  "type": "RaiseExceptionAction",
                  "association": "A_exception_raiseExceptionAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_exception_raiseExceptionAction-raiseExceptionAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_qualifier_qualifierValue",
                "name": "A_qualifier_qualifierValue"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "QualifierValue-qualifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_qualifier_qualifierValue-qualifierValue"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_qualifier_qualifierValue-qualifierValue",
                  "name": "qualifierValue",
                  "type": "QualifierValue",
                  "association": "A_qualifier_qualifierValue"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_qualifier_qualifierValue-qualifierValue-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_qualifier_qualifierValue-qualifierValue-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_qualifierValue",
                "name": "A_value_qualifierValue"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "QualifierValue-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_qualifierValue-qualifierValue"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_qualifierValue-qualifierValue",
                  "name": "qualifierValue",
                  "type": "QualifierValue",
                  "association": "A_value_qualifierValue"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_qualifierValue-qualifierValue-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_outputValue_opaqueAction",
                "name": "A_outputValue_opaqueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OpaqueAction-outputValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_outputValue_opaqueAction-opaqueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_outputValue_opaqueAction-opaqueAction",
                  "name": "opaqueAction",
                  "type": "OpaqueAction",
                  "association": "A_outputValue_opaqueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_outputValue_opaqueAction-opaqueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inputValue_opaqueAction",
                "name": "A_inputValue_opaqueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "OpaqueAction-inputValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_inputValue_opaqueAction-opaqueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_inputValue_opaqueAction-opaqueAction",
                  "name": "opaqueAction",
                  "type": "OpaqueAction",
                  "association": "A_inputValue_opaqueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_inputValue_opaqueAction-opaqueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_setupPart_loopNode",
                "name": "A_setupPart_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-setupPart"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_setupPart_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_setupPart_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_setupPart_loopNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_setupPart_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_bodyPart_loopNode",
                "name": "A_bodyPart_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-bodyPart"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_bodyPart_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_bodyPart_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_bodyPart_loopNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_bodyPart_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_loopVariable_loopNode",
                "name": "A_loopVariable_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-loopVariable"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_loopVariable_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_loopVariable_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_loopVariable_loopNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_loopVariable_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_loopNode",
                "name": "A_result_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_result_loopNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_bodyOutput_loopNode",
                "name": "A_bodyOutput_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-bodyOutput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_bodyOutput_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_bodyOutput_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_bodyOutput_loopNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_bodyOutput_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_bodyOutput_loopNode-loopNode-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_loopVariableInput_loopNode",
                "name": "A_loopVariableInput_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-loopVariableInput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_loopVariableInput_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_loopVariableInput_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_loopVariableInput_loopNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_structuredNodeInput_structuredActivityNode-structuredActivityNode"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_loopVariableInput_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_test_loopNode",
                "name": "A_test_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-test"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_test_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_test_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_test_loopNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_test_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_decider_loopNode",
                "name": "A_decider_loopNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LoopNode-decider"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_decider_loopNode-loopNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_decider_loopNode-loopNode",
                  "name": "loopNode",
                  "type": "LoopNode",
                  "association": "A_decider_loopNode"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_decider_loopNode-loopNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_destroyAt_linkEndDestructionData",
                "name": "A_destroyAt_linkEndDestructionData"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkEndDestructionData-destroyAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_destroyAt_linkEndDestructionData-linkEndDestructionData"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_destroyAt_linkEndDestructionData-linkEndDestructionData",
                  "name": "linkEndDestructionData",
                  "type": "LinkEndDestructionData",
                  "association": "A_destroyAt_linkEndDestructionData"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_destroyAt_linkEndDestructionData-linkEndDestructionData-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_linkEndData",
                "name": "A_value_linkEndData"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkEndData-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_linkEndData-linkEndData"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_linkEndData-linkEndData",
                  "name": "linkEndData",
                  "type": "LinkEndData",
                  "association": "A_value_linkEndData"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_linkEndData-linkEndData-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_end_linkEndData",
                "name": "A_end_linkEndData"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkEndData-end"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_end_linkEndData-linkEndData"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_end_linkEndData-linkEndData",
                  "name": "linkEndData",
                  "type": "LinkEndData",
                  "association": "A_end_linkEndData"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_end_linkEndData-linkEndData-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_end_linkEndData-linkEndData-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_qualifier_linkEndData",
                "name": "A_qualifier_linkEndData"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkEndData-qualifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_qualifier_linkEndData-linkEndData"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_qualifier_linkEndData-linkEndData",
                  "name": "linkEndData",
                  "type": "LinkEndData",
                  "association": "A_qualifier_linkEndData"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_insertAt_linkEndCreationData",
                "name": "A_insertAt_linkEndCreationData"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkEndCreationData-insertAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_insertAt_linkEndCreationData-linkEndCreationData"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_insertAt_linkEndCreationData-linkEndCreationData",
                  "name": "linkEndCreationData",
                  "type": "LinkEndCreationData",
                  "association": "A_insertAt_linkEndCreationData"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_insertAt_linkEndCreationData-linkEndCreationData-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inputValue_linkAction",
                "name": "A_inputValue_linkAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkAction-inputValue"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_inputValue_linkAction-linkAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_inputValue_linkAction-linkAction",
                  "name": "linkAction",
                  "type": "LinkAction",
                  "association": "A_inputValue_linkAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_inputValue_linkAction-linkAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_endData_linkAction",
                "name": "A_endData_linkAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "LinkAction-endData"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_endData_linkAction-linkAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_endData_linkAction-linkAction",
                  "name": "linkAction",
                  "type": "LinkAction",
                  "association": "A_endData_linkAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_argument_invocationAction",
                "name": "A_argument_invocationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InvocationAction-argument"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_argument_invocationAction-invocationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_argument_invocationAction-invocationAction",
                  "name": "invocationAction",
                  "type": "InvocationAction",
                  "association": "A_argument_invocationAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_argument_invocationAction-invocationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_onPort_invocationAction",
                "name": "A_onPort_invocationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "InvocationAction-onPort"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_onPort_invocationAction-invocationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_onPort_invocationAction-invocationAction",
                  "name": "invocationAction",
                  "type": "InvocationAction",
                  "association": "A_onPort_invocationAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_onPort_invocationAction-invocationAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_onPort_invocationAction-invocationAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_inputElement_regionAsInput",
                "name": "A_inputElement_regionAsInput"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExpansionRegion-inputElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ExpansionNode-regionAsInput"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_outputElement_regionAsOutput",
                "name": "A_outputElement_regionAsOutput"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ExpansionRegion-outputElement"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "ExpansionNode-regionAsOutput"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_target_destroyObjectAction",
                "name": "A_target_destroyObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DestroyObjectAction-target"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_target_destroyObjectAction-destroyObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_target_destroyObjectAction-destroyObjectAction",
                  "name": "destroyObjectAction",
                  "type": "DestroyObjectAction",
                  "association": "A_target_destroyObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_target_destroyObjectAction-destroyObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_endData_destroyLinkAction",
                "name": "A_endData_destroyLinkAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "DestroyLinkAction-endData"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_endData_destroyLinkAction-destroyLinkAction"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_endData_destroyLinkAction-_generalization.0",
                  "general": "A_endData_linkAction"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_endData_destroyLinkAction-destroyLinkAction",
                  "name": "destroyLinkAction",
                  "type": "DestroyLinkAction",
                  "association": "A_endData_destroyLinkAction"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_endData_linkAction-linkAction"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_classifier_createObjectAction",
                "name": "A_classifier_createObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CreateObjectAction-classifier"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_classifier_createObjectAction-createObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_classifier_createObjectAction-createObjectAction",
                  "name": "createObjectAction",
                  "type": "CreateObjectAction",
                  "association": "A_classifier_createObjectAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_classifier_createObjectAction-createObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_classifier_createObjectAction-createObjectAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_createObjectAction",
                "name": "A_result_createObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CreateObjectAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_createObjectAction-createObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_createObjectAction-createObjectAction",
                  "name": "createObjectAction",
                  "type": "CreateObjectAction",
                  "association": "A_result_createObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_createObjectAction-createObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_createLinkObjectAction",
                "name": "A_result_createLinkObjectAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CreateLinkObjectAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_createLinkObjectAction-createLinkObjectAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_createLinkObjectAction-createLinkObjectAction",
                  "name": "createLinkObjectAction",
                  "type": "CreateLinkObjectAction",
                  "association": "A_result_createLinkObjectAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_createLinkObjectAction-createLinkObjectAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_endData_createLinkAction",
                "name": "A_endData_createLinkAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CreateLinkAction-endData"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_endData_createLinkAction-createLinkAction"
                  },
                  "_parent": "_"
                }
              ],
              "generalization": {
                "_attributes": {
                  "xmi:type": "uml:Generalization",
                  "xmi:id": "A_endData_createLinkAction-_generalization.0",
                  "general": "A_endData_linkAction"
                },
                "_parent": "_"
              },
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_endData_createLinkAction-createLinkAction",
                  "name": "createLinkAction",
                  "type": "CreateLinkAction",
                  "association": "A_endData_createLinkAction"
                },
                "_parent": "_",
                "redefinedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_endData_linkAction-linkAction"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_clause_conditionalNode",
                "name": "A_clause_conditionalNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConditionalNode-clause"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_clause_conditionalNode-conditionalNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_clause_conditionalNode-conditionalNode",
                  "name": "conditionalNode",
                  "type": "ConditionalNode",
                  "association": "A_clause_conditionalNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_conditionalNode",
                "name": "A_result_conditionalNode"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ConditionalNode-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_conditionalNode-conditionalNode"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_conditionalNode-conditionalNode",
                  "name": "conditionalNode",
                  "type": "ConditionalNode",
                  "association": "A_result_conditionalNode"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_structuredNodeOutput_structuredActivityNode-structuredActivityNode"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_conditionalNode-conditionalNode-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_clearStructuralFeatureAction",
                "name": "A_result_clearStructuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ClearStructuralFeatureAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_clearStructuralFeatureAction-clearStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_clearStructuralFeatureAction-clearStructuralFeatureAction",
                  "name": "clearStructuralFeatureAction",
                  "type": "ClearStructuralFeatureAction",
                  "association": "A_result_clearStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_clearStructuralFeatureAction-clearStructuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_object_clearAssociationAction",
                "name": "A_object_clearAssociationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ClearAssociationAction-object"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_object_clearAssociationAction-clearAssociationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_object_clearAssociationAction-clearAssociationAction",
                  "name": "clearAssociationAction",
                  "type": "ClearAssociationAction",
                  "association": "A_object_clearAssociationAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_object_clearAssociationAction-clearAssociationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_association_clearAssociationAction",
                "name": "A_association_clearAssociationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ClearAssociationAction-association"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_association_clearAssociationAction-clearAssociationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_association_clearAssociationAction-clearAssociationAction",
                  "name": "clearAssociationAction",
                  "type": "ClearAssociationAction",
                  "association": "A_association_clearAssociationAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_association_clearAssociationAction-clearAssociationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_decider_clause",
                "name": "A_decider_clause"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Clause-decider"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_decider_clause-clause"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_decider_clause-clause",
                  "name": "clause",
                  "type": "Clause",
                  "association": "A_decider_clause"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_decider_clause-clause-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_bodyOutput_clause",
                "name": "A_bodyOutput_clause"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Clause-bodyOutput"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_bodyOutput_clause-clause"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_bodyOutput_clause-clause",
                  "name": "clause",
                  "type": "Clause",
                  "association": "A_bodyOutput_clause"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_bodyOutput_clause-clause-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_bodyOutput_clause-clause-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_test_clause",
                "name": "A_test_clause"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Clause-test"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_test_clause-clause"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_test_clause-clause",
                  "name": "clause",
                  "type": "Clause",
                  "association": "A_test_clause"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_test_clause-clause-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_body_clause",
                "name": "A_body_clause"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Clause-body"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_body_clause-clause"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_body_clause-clause",
                  "name": "clause",
                  "type": "Clause",
                  "association": "A_body_clause"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_body_clause-clause-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_predecessorClause_successorClause",
                "name": "A_predecessorClause_successorClause"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Clause-predecessorClause"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "Clause-successorClause"
                  },
                  "_parent": "_"
                }
              ]
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_target_callOperationAction",
                "name": "A_target_callOperationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CallOperationAction-target"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_target_callOperationAction-callOperationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_target_callOperationAction-callOperationAction",
                  "name": "callOperationAction",
                  "type": "CallOperationAction",
                  "association": "A_target_callOperationAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_target_callOperationAction-callOperationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_operation_callOperationAction",
                "name": "A_operation_callOperationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CallOperationAction-operation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_operation_callOperationAction-callOperationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_operation_callOperationAction-callOperationAction",
                  "name": "callOperationAction",
                  "type": "CallOperationAction",
                  "association": "A_operation_callOperationAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_operation_callOperationAction-callOperationAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_operation_callOperationAction-callOperationAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_behavior_callBehaviorAction",
                "name": "A_behavior_callBehaviorAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CallBehaviorAction-behavior"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_behavior_callBehaviorAction-callBehaviorAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_behavior_callBehaviorAction-callBehaviorAction",
                  "name": "callBehaviorAction",
                  "type": "CallBehaviorAction",
                  "association": "A_behavior_callBehaviorAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_behavior_callBehaviorAction-callBehaviorAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_behavior_callBehaviorAction-callBehaviorAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_callAction",
                "name": "A_result_callAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "CallAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_callAction-callAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_callAction-callAction",
                  "name": "callAction",
                  "type": "CallAction",
                  "association": "A_result_callAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_callAction-callAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_signal_broadcastSignalAction",
                "name": "A_signal_broadcastSignalAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "BroadcastSignalAction-signal"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_signal_broadcastSignalAction-broadcastSignalAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_signal_broadcastSignalAction-broadcastSignalAction",
                  "name": "broadcastSignalAction",
                  "type": "BroadcastSignalAction",
                  "association": "A_signal_broadcastSignalAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_signal_broadcastSignalAction-broadcastSignalAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_signal_broadcastSignalAction-broadcastSignalAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_insertAt_addVariableValueAction",
                "name": "A_insertAt_addVariableValueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "AddVariableValueAction-insertAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_insertAt_addVariableValueAction-addVariableValueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_insertAt_addVariableValueAction-addVariableValueAction",
                  "name": "addVariableValueAction",
                  "type": "AddVariableValueAction",
                  "association": "A_insertAt_addVariableValueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_insertAt_addVariableValueAction-addVariableValueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_insertAt_addStructuralFeatureValueAction",
                "name": "A_insertAt_addStructuralFeatureValueAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "AddStructuralFeatureValueAction-insertAt"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_insertAt_addStructuralFeatureValueAction-addStructuralFeatureValueAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_insertAt_addStructuralFeatureValueAction-addStructuralFeatureValueAction",
                  "name": "addStructuralFeatureValueAction",
                  "type": "AddStructuralFeatureValueAction",
                  "association": "A_insertAt_addStructuralFeatureValueAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_insertAt_addStructuralFeatureValueAction-addStructuralFeatureValueAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_fromAction_actionInputPin",
                "name": "A_fromAction_actionInputPin"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ActionInputPin-fromAction"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_fromAction_actionInputPin-actionInputPin"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_fromAction_actionInputPin-actionInputPin",
                  "name": "actionInputPin",
                  "type": "ActionInputPin",
                  "association": "A_fromAction_actionInputPin"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_fromAction_actionInputPin-actionInputPin-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_output_action",
                "name": "A_output_action",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Action-output"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_output_action-action",
                  "name": "action",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Action",
                  "association": "A_output_action"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_output_action-action-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_context_action",
                "name": "A_context_action",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Action-context"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_context_action-action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_context_action-action",
                  "name": "action",
                  "type": "Action",
                  "association": "A_context_action"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_context_action-action-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_context_action-action-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_input_action",
                "name": "A_input_action",
                "isDerived": true
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Action-input"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_input_action-action",
                  "name": "action",
                  "isReadOnly": true,
                  "isDerived": true,
                  "isDerivedUnion": true,
                  "type": "Action",
                  "association": "A_input_action"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_input_action-action-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_localPrecondition_action",
                "name": "A_localPrecondition_action"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Action-localPrecondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_localPrecondition_action-action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_localPrecondition_action-action",
                  "name": "action",
                  "type": "Action",
                  "association": "A_localPrecondition_action"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_localPrecondition_action-action-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_localPostcondition_action",
                "name": "A_localPostcondition_action"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "Action-localPostcondition"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_localPostcondition_action-action"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_localPostcondition_action-action",
                  "name": "action",
                  "type": "Action",
                  "association": "A_localPostcondition_action"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_localPostcondition_action-action-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_trigger_acceptEventAction",
                "name": "A_trigger_acceptEventAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "AcceptEventAction-trigger"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_trigger_acceptEventAction-acceptEventAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_trigger_acceptEventAction-acceptEventAction",
                  "name": "acceptEventAction",
                  "type": "AcceptEventAction",
                  "association": "A_trigger_acceptEventAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_trigger_acceptEventAction-acceptEventAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_acceptEventAction",
                "name": "A_result_acceptEventAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "AcceptEventAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_acceptEventAction-acceptEventAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_acceptEventAction-acceptEventAction",
                  "name": "acceptEventAction",
                  "type": "AcceptEventAction",
                  "association": "A_result_acceptEventAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_acceptEventAction-acceptEventAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_returnInformation_acceptCallAction",
                "name": "A_returnInformation_acceptCallAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "AcceptCallAction-returnInformation"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_returnInformation_acceptCallAction-acceptCallAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_returnInformation_acceptCallAction-acceptCallAction",
                  "name": "acceptCallAction",
                  "type": "AcceptCallAction",
                  "association": "A_returnInformation_acceptCallAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_returnInformation_acceptCallAction-acceptCallAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_writeVariableAction",
                "name": "A_value_writeVariableAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "WriteVariableAction-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_writeVariableAction-writeVariableAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_writeVariableAction-writeVariableAction",
                  "name": "writeVariableAction",
                  "type": "WriteVariableAction",
                  "association": "A_value_writeVariableAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_writeVariableAction-writeVariableAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_writeStructuralFeatureAction",
                "name": "A_result_writeStructuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "WriteStructuralFeatureAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_writeStructuralFeatureAction-writeStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_writeStructuralFeatureAction-writeStructuralFeatureAction",
                  "name": "writeStructuralFeatureAction",
                  "type": "WriteStructuralFeatureAction",
                  "association": "A_result_writeStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_writeStructuralFeatureAction-writeStructuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_writeStructuralFeatureAction",
                "name": "A_value_writeStructuralFeatureAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "WriteStructuralFeatureAction-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_writeStructuralFeatureAction-writeStructuralFeatureAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_writeStructuralFeatureAction-writeStructuralFeatureAction",
                  "name": "writeStructuralFeatureAction",
                  "type": "WriteStructuralFeatureAction",
                  "association": "A_value_writeStructuralFeatureAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_input_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_writeStructuralFeatureAction-writeStructuralFeatureAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_variable_variableAction",
                "name": "A_variable_variableAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "VariableAction-variable"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_variable_variableAction-variableAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_variable_variableAction-variableAction",
                  "name": "variableAction",
                  "type": "VariableAction",
                  "association": "A_variable_variableAction"
                },
                "_parent": "_",
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_variable_variableAction-variableAction-_lowerValue"
                  },
                  "_parent": "_"
                },
                "upperValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralUnlimitedNatural",
                    "xmi:id": "A_variable_variableAction-variableAction-_upperValue",
                    "value": "*"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_result_valueSpecificationAction",
                "name": "A_result_valueSpecificationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ValueSpecificationAction-result"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_result_valueSpecificationAction-valueSpecificationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_result_valueSpecificationAction-valueSpecificationAction",
                  "name": "valueSpecificationAction",
                  "type": "ValueSpecificationAction",
                  "association": "A_result_valueSpecificationAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "A_output_action-action"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_result_valueSpecificationAction-valueSpecificationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            },
            {
              "_attributes": {
                "xmi:type": "uml:Association",
                "xmi:id": "A_value_valueSpecificationAction",
                "name": "A_value_valueSpecificationAction"
              },
              "_parent": "_",
              "memberEnd": [
                {
                  "_attributes": {
                    "xmi:idref": "ValueSpecificationAction-value"
                  },
                  "_parent": "_"
                },
                {
                  "_attributes": {
                    "xmi:idref": "A_value_valueSpecificationAction-valueSpecificationAction"
                  },
                  "_parent": "_"
                }
              ],
              "ownedEnd": {
                "_attributes": {
                  "xmi:type": "uml:Property",
                  "xmi:id": "A_value_valueSpecificationAction-valueSpecificationAction",
                  "name": "valueSpecificationAction",
                  "type": "ValueSpecificationAction",
                  "association": "A_value_valueSpecificationAction"
                },
                "_parent": "_",
                "subsettedProperty": {
                  "_attributes": {
                    "xmi:idref": "Element-owner"
                  },
                  "_parent": "_"
                },
                "lowerValue": {
                  "_attributes": {
                    "xmi:type": "uml:LiteralInteger",
                    "xmi:id": "A_value_valueSpecificationAction-valueSpecificationAction-_lowerValue"
                  },
                  "_parent": "_"
                }
              }
            }
          ]
        }
      ]
    },
    "mofext:Tag": {
      "_attributes": {
        "xmi:id": "UML_mofTag0",
        "xmi:type": "mofext:Tag",
        "name": "org.omg.xmi.nsPrefix",
        "element": "UML"
      },
      "_parent": "_"
    }
  }
}